{
  "title": "hyperliquid",
  "author": "",
  "subject": "",
  "creator": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36",
  "producer": "Skia/PDF m135",
  "creation_date": "D:20250416205503+00'00'",
  "modification_date": "D:20250416205503+00'00'",
  "domain": "crypto_derivatives",
  "quality_metrics": {
    "language_confidence": {
      "language": "en",
      "language_confidence": 0.9999971903310626,
      "mixed_language_flag": true,
      "mixed_languages": [
        "en"
      ],
      "reasons": [
        "Mixed languages detected: [('en', 0.9453551912568307)]"
      ],
      "severity": "warning"
    },
    "corruption": {
      "corruption_flag": false,
      "corruption_score": 40,
      "corruption_score_normalized": 40,
      "corruption_reasons": [
        "Found corruption markers: ",
        "High ratio of replacement characters (possible encoding issue)"
      ],
      "severity": "warning"
    },
    "machine_translation": {
      "machine_translated_flag": true,
      "machine_translation_score": 100,
      "machine_translation_reasons": [
        "High n-gram repetition: '4/17/25, 12:55 AM' (56 times)",
        "High n-gram repetition: '12:55 AM hyperliquid' (56 times)",
        "High n-gram repetition: 'AM hyperliquid https://docs.ccxt.com/#/exchanges/hyperliquid' (56 times)",
        "High n-gram repetition: 'Kind: instance method' (57 times)",
        "High n-gram repetition: 'instance method of' (57 times)",
        "High n-gram repetition: 'method of hyperliquid' (57 times)",
        "High n-gram repetition: 'of hyperliquid Returns:' (57 times)",
        "High n-gram repetition: 'hyperliquid Returns: object' (35 times)",
        "High n-gram repetition: 'Returns: object -' (35 times)",
        "High n-gram repetition: 'object - an' (13 times)",
        "High n-gram repetition: 'See: https://hyperliquid.gitbook.io/hyperliquid- docs/for-developers/api/info-' (8 times)",
        "High n-gram repetition: 'Param Type Required' (76 times)",
        "High n-gram repetition: 'Type Required Descriptio' (20 times)",
        "High n-gram repetition: 'Required Descriptio params' (4 times)",
        "High n-gram repetition: 'Descriptio params object' (4 times)",
        "High n-gram repetition: 'params object No' (53 times)",
        "High n-gram repetition: 'object No extra' (34 times)",
        "High n-gram repetition: 'No extra parameter' (15 times)",
        "High n-gram repetition: 'extra parameter specific' (14 times)",
        "High n-gram repetition: 'parameter specific to' (14 times)",
        "High n-gram repetition: 'specific to the' (14 times)",
        "High n-gram repetition: 'to the exchange' (14 times)",
        "High n-gram repetition: 'the exchange API' (15 times)",
        "High n-gram repetition: 'exchange API endpoint' (11 times)",
        "High n-gram repetition: 'retrieves data on' (4 times)",
        "High n-gram repetition: 'data on all' (4 times)",
        "High n-gram repetition: 'markets for hyperliquid' (4 times)",
        "High n-gram repetition: 'for hyperliquid Kind:' (4 times)",
        "High n-gram repetition: 'hyperliquid Kind: instance' (4 times)",
        "High n-gram repetition: 'hyperliquid Returns: Array<object>' (11 times)",
        "High n-gram repetition: 'Returns: Array<object> -' (11 times)",
        "High n-gram repetition: 'Array<object> - an' (4 times)",
        "High n-gram repetition: '- an array' (4 times)",
        "High n-gram repetition: 'an array of' (4 times)",
        "High n-gram repetition: 'array of objects' (4 times)",
        "High n-gram repetition: 'of objects representing' (4 times)",
        "High n-gram repetition: 'objects representing market' (4 times)",
        "High n-gram repetition: 'representing market data' (4 times)",
        "High n-gram repetition: 'See https://hyperliquid.gitbook.io/hyperliquid- docs/for-developers/api/info-' (5 times)",
        "High n-gram repetition: '  hyperliquid' (54 times)",
        "High n-gram repetition: 'javascript 4/17/25, 12:55' (52 times)",
        "High n-gram repetition: '  ' (4 times)",
        "High n-gram repetition: '  ' (4 times)",
        "High n-gram repetition: '  Param' (31 times)",
        "High n-gram repetition: ' Param Type' (31 times)",
        "High n-gram repetition: 'exchange API d' (4 times)",
        "High n-gram repetition: 'API d i' (5 times)",
        "High n-gram repetition: 'javascript  ' (5 times)",
        "High n-gram repetition: '( javascript 4/17/25,' (6 times)",
        "High n-gram repetition: 'orders Kind: instance' (9 times)",
        "High n-gram repetition: 'object - a' (13 times)",
        "High n-gram repetition: 'Type Required De' (22 times)",
        "High n-gram repetition: 'No extra specifi' (10 times)",
        "High n-gram repetition: 'extra specifi excha' (9 times)",
        "High n-gram repetition: 'specifi excha endpo' (9 times)",
        "High n-gram repetition: 'excha endpo params.user' (10 times)",
        "High n-gram repetition: 'endpo params.user string' (10 times)",
        "High n-gram repetition: 'params.user string No' (13 times)",
        "High n-gram repetition: 'string No user' (10 times)",
        "High n-gram repetition: 'No user a' (10 times)",
        "High n-gram repetition: 'user a defau' (10 times)",
        "High n-gram repetition: 'this.w if not' (7 times)",
        "High n-gram repetition: 'of order book' (5 times)",
        "High n-gram repetition: 'Required Descriptio symbol' (9 times)",
        "High n-gram repetition: 'Descriptio symbol string' (9 times)",
        "High n-gram repetition: 'symbol string Yes' (31 times)",
        "High n-gram repetition: 'string Yes unified' (10 times)",
        "High n-gram repetition: 'Yes unified symbol' (6 times)",
        "High n-gram repetition: 'unified symbol of' (4 times)",
        "High n-gram repetition: 'symbol of the' (5 times)",
        "High n-gram repetition: 'of the market' (5 times)",
        "High n-gram repetition: 'the market to' (4 times)",
        "High n-gram repetition: 'market to fetch' (4 times)",
        "High n-gram repetition: 'to fetch the' (4 times)",
        "High n-gram repetition: 'for limit int' (4 times)",
        "High n-gram repetition: 'limit int No' (18 times)",
        "High n-gram repetition: 'int No the' (27 times)",
        "High n-gram repetition: 'information calculated over' (4 times)",
        "High n-gram repetition: 'calculated over the' (4 times)",
        "High n-gram repetition: 'over the past' (4 times)",
        "High n-gram repetition: 'the past 24' (4 times)",
        "High n-gram repetition: 'past 24 hours' (4 times)",
        "High n-gram repetition: '24 hours for' (4 times)",
        "High n-gram repetition: 'market Kind: instance' (8 times)",
        "High n-gram repetition: 'structures See https://hyperliquid.gitbook.io/hyperliquid-' (4 times)",
        "High n-gram repetition: 'symbols Array<string> No' (4 times)",
        "High n-gram repetition: ' hyperliquid symbol' (23 times)",
        "High n-gram repetition: '( [, javascript' (21 times)",
        "High n-gram repetition: '[, javascript 4/17/25,' (20 times)",
        "High n-gram repetition: 'Required De symbols' (4 times)",
        "High n-gram repetition: 'De symbols Array<string>' (4 times)",
        "High n-gram repetition: ' hyperliquid symbols' (4 times)",
        "High n-gram repetition: ', javascript 4/17/25,' (16 times)",
        "High n-gram repetition: 'object No ex' (6 times)",
        "High n-gram repetition: 'No ex pa' (4 times)",
        "High n-gram repetition: 'ex pa sp' (4 times)",
        "High n-gram repetition: 'pa sp th' (4 times)",
        "High n-gram repetition: 'sp th ex' (4 times)",
        "High n-gram repetition: 'th ex AP' (4 times)",
        "High n-gram repetition: 'open, high, low,' (6 times)",
        "High n-gram repetition: 'a market Kind:' (6 times)",
        "High n-gram repetition: 'Type Required Descr' (8 times)",
        "High n-gram repetition: 'string Yes unifie' (14 times)",
        "High n-gram repetition: 'since int No' (16 times)",
        "High n-gram repetition: 'int No times' (7 times)",
        "High n-gram repetition: 'No times in' (7 times)",
        "High n-gram repetition: 'times in ms' (7 times)",
        "High n-gram repetition: 'in ms the' (7 times)",
        "High n-gram repetition: 'No the maxi' (5 times)",
        "High n-gram repetition: 'No extra param' (7 times)",
        "High n-gram repetition: 'extra param speci' (6 times)",
        "High n-gram repetition: 'param speci the' (6 times)",
        "High n-gram repetition: 'speci the excha' (6 times)",
        "High n-gram repetition: 'the excha API' (5 times)",
        "High n-gram repetition: 'excha API endp' (5 times)",
        "High n-gram repetition: 'API endp params.until' (6 times)",
        "High n-gram repetition: 'endp params.until int' (6 times)",
        "High n-gram repetition: 'params.until int No' (7 times)",
        "High n-gram repetition: 'ms the la' (4 times)",
        "High n-gram repetition: '- a list' (14 times)",
        "High n-gram repetition: 'a list of' (19 times)",
        "High n-gram repetition: 'list of trade' (7 times)",
        "High n-gram repetition: '( , javascript' (8 times)",
        "High n-gram repetition: 'Required De symbol' (9 times)",
        "High n-gram repetition: 'De symbol string' (9 times)",
        "High n-gram repetition: 'int No th' (4 times)",
        "High n-gram repetition: 'a trade order' (4 times)",
        "High n-gram repetition: 'order Kind: instance' (4 times)",
        "High n-gram repetition: '- an order' (8 times)",
        "High n-gram repetition: 'an order structure' (8 times)",
        "High n-gram repetition: 'order structure See:' (7 times)",
        "High n-gram repetition: 'structure See: https://hyperliquid.gitbook.io/hyperliquid-' (14 times)",
        "High n-gram repetition: 'See: https://hyperliquid.gitbook.io/hyperliquid- docs/for-developers/api/exchange-' (11 times)",
        "High n-gram repetition: 'https://hyperliquid.gitbook.io/hyperliquid- docs/for-developers/api/exchange- endpoint#place-an-order' (5 times)",
        "High n-gram repetition: 'docs/for-developers/api/exchange- endpoint#place-an-order Param' (5 times)",
        "High n-gram repetition: 'endpoint#place-an-order Param Type' (5 times)",
        "High n-gram repetition: 'string Yes type' (4 times)",
        "High n-gram repetition: 'Yes type string' (4 times)",
        "High n-gram repetition: 'type string Yes' (4 times)",
        "High n-gram repetition: 'string Yes side' (4 times)",
        "High n-gram repetition: 'Yes side string' (4 times)",
        "High n-gram repetition: 'side string Yes' (4 times)",
        "High n-gram repetition: 'string Yes amount' (5 times)",
        "High n-gram repetition: 'Yes amount float' (5 times)",
        "High n-gram repetition: 'amount float Yes' (8 times)",
        "High n-gram repetition: 'float Yes price' (4 times)",
        "High n-gram repetition: 'Yes price float' (4 times)",
        "High n-gram repetition: 'price float No' (4 times)",
        "High n-gram repetition: 'float No params' (4 times)",
        "High n-gram repetition: 'No params object' (5 times)",
        "High n-gram repetition: 'object No params.timeInForce' (4 times)",
        "High n-gram repetition: 'No params.timeInForce string' (4 times)",
        "High n-gram repetition: 'params.timeInForce string No' (4 times)",
        "High n-gram repetition: 'string No params.postOnly' (4 times)",
        "High n-gram repetition: 'No params.postOnly bool' (4 times)",
        "High n-gram repetition: 'params.postOnly bool No' (4 times)",
        "High n-gram repetition: 'bool No params.reduceOnly' (4 times)",
        "High n-gram repetition: 'No params.reduceOnly bool' (4 times)",
        "High n-gram repetition: 'params.reduceOnly bool No' (4 times)",
        "High n-gram repetition: 'params.triggerPrice float No' (4 times)",
        "High n-gram repetition: 'float No params.clientOrderId' (4 times)",
        "High n-gram repetition: 'No params.clientOrderId string' (5 times)",
        "High n-gram repetition: 'params.clientOrderId string No' (5 times)",
        "High n-gram repetition: 'string No params.vaultAddress' (5 times)",
        "High n-gram repetition: 'No params.vaultAddress string' (8 times)",
        "High n-gram repetition: 'params.vaultAddress string No' (8 times)",
        "High n-gram repetition: 'of trade orders' (4 times)",
        "High n-gram repetition: 'list of orders' (4 times)",
        "High n-gram repetition: 'of orders to' (4 times)",
        "High n-gram repetition: 'orders to create,' (4 times)",
        "High n-gram repetition: 'object should contain' (4 times)",
        "High n-gram repetition: 'namely symbol, type,' (4 times)",
        "High n-gram repetition: 'symbol, type, side,' (4 times)",
        "High n-gram repetition: 'type, side, amount,' (4 times)",
        "High n-gram repetition: '( , ,' (5 times)",
        "High n-gram repetition: ', , javascript' (6 times)",
        "High n-gram repetition: 'price and params' (4 times)",
        "High n-gram repetition: 'See https://hyperliquid.gitbook.io/hyperliquid- docs/for-developers/api/exchange-' (4 times)",
        "High n-gram repetition: 'id string Yes' (4 times)",
        "High n-gram repetition: 'Yes symbol string' (4 times)",
        "High n-gram repetition: 'string Yes params' (4 times)",
        "High n-gram repetition: 'Yes params object' (5 times)",
        "High n-gram repetition: 'list of order' (9 times)",
        "High n-gram repetition: 'of order structures' (8 times)",
        "High n-gram repetition: ' hyperliquid id' (4 times)",
        "High n-gram repetition: 'hyperliquid id symbol' (4 times)",
        "High n-gram repetition: 'Array<object> - a' (7 times)",
        "High n-gram repetition: 'structures See: https://hyperliquid.gitbook.io/hyperliquid-' (4 times)",
        "High n-gram repetition: 'hyperliquid Returns: Array<Order>' (5 times)",
        "High n-gram repetition: 'Returns: Array<Order> -' (5 times)",
        "High n-gram repetition: 'Array<Order> - a' (5 times)",
        "High n-gram repetition: 'ret params object' (8 times)",
        "High n-gram repetition: '  Kind:' (4 times)",
        "High n-gram repetition: ' Kind: instance' (4 times)",
        "High n-gram repetition: 'structures Param Type' (5 times)",
        "High n-gram repetition: 'Yes unifie symbo' (8 times)",
        "High n-gram repetition: 'unifie symbo since' (4 times)",
        "High n-gram repetition: 'symbo since int' (4 times)",
        "High n-gram repetition: 'No the ea' (6 times)",
        "High n-gram repetition: 'the ea in' (6 times)",
        "High n-gram repetition: 'ea in ms' (6 times)",
        "High n-gram repetition: 'in ms open' (4 times)",
        "High n-gram repetition: 'No the m' (6 times)",
        "High n-gram repetition: 'the m numb' (6 times)",
        "High n-gram repetition: 'm numb orders' (4 times)",
        "High n-gram repetition: 'numb orders to' (4 times)",
        "High n-gram repetition: 'orders to ret' (4 times)",
        "High n-gram repetition: 'to ret params' (7 times)",
        "High n-gram repetition: 'a defau this.w' (9 times)",
        "High n-gram repetition: 'defau this.w if' (9 times)",
        "High n-gram repetition: 'made by the' (4 times)",
        "High n-gram repetition: 'by the user' (5 times)",
        "High n-gram repetition: 'the user Kind:' (5 times)",
        "High n-gram repetition: 'user Kind: instance' (5 times)",
        "High n-gram repetition: 'time to fet' (5 times)",
        "High n-gram repetition: 'structure  ' (4 times)",
        "High n-gram repetition: '  See:' (4 times)",
        "High n-gram repetition: ' See: https://hyperliquid.gitbook.io/hyperliquid-' (4 times)",
        "High n-gram repetition: 'unified market symbol' (4 times)",
        "High n-gram repetition: 'code string Yes' (4 times)",
        "High n-gram repetition: ' hyperliquid code' (5 times)",
        "High n-gram repetition: 'Type Required Desc' (4 times)",
        "High n-gram repetition: 'See: https://hyperliquid.gitbook.io/hyperliquid- docs/for-' (10 times)",
        "High n-gram repetition: 'https://hyperliquid.gitbook.io/hyperliquid- docs/for- developers/api/websocket/subscriptions' (10 times)",
        "High n-gram repetition: 'docs/for- developers/api/websocket/subscriptions Param' (8 times)",
        "High n-gram repetition: 'developers/api/websocket/subscriptions Param Type' (8 times)",
        "High ratio of sentences missing articles: 0.98",
        "High rare word ratio: 0.90"
      ],
      "machine_translation_severity": "critical",
      "machine_translation_confidence": 0.9
    },
    "academic_analysis": {
      "is_academic_paper": false,
      "confidence": 0.0,
      "score": 0,
      "indicators_found": [],
      "citation_count": 0,
      "recommended_thresholds": null
    },
    "content_validation": {
      "passes_academic_standards": true,
      "issues": [
        "Insufficient academic sections: 0"
      ],
      "adjustments_made": [
        "Reference density within academic norms"
      ]
    },
    "symbol_richness": {
      "total_symbols": 192,
      "unique_symbols": 11,
      "financial_symbols": 0
    },
    "min_tokens": 200,
    "quality_threshold": 0.8,
    "table_threshold": 0.6,
    "formula_threshold": 0.7,
    "low_quality_tokens": 1000,
    "reference_density_max": 0.15,
    "citation_density_max": 0.1,
    "formula_density_max": 0.2,
    "table_density_max": 0.15,
    "min_sections": 3,
    "bibliography_required": true,
    "extraction_quality": {
      "tables_detected": true,
      "formulas_detected": true,
      "charts_detected": true,
      "symbols_detected": true,
      "token_count": 4479,
      "quality_flag": "ok",
      "is_academic_paper": false,
      "academic_confidence": 0.0
    }
  },
  "is_scientific_paper": false,
  "content_hash": "f6ea78c7a8ad4134207c6e41d024aba5",
  "file_size": 1534065,
  "extraction_date": "2025-05-26T14:12:02.196757+00:00",
  "enhancement_results": {
    "formulas": {
      "formulas": [
        {
          "formula": "4/17",
          "type": "fractions",
          "position": {
            "start": 523,
            "end": 527
          },
          "context": "etchOrders\nfetchOrder\nfetchMyTrades\nfetchPosition\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt.com/#/",
          "confidence": 0.3,
          "metadata": {
            "length": 4,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "12:55",
          "type": "ratios",
          "position": {
            "start": 532,
            "end": 537
          },
          "context": "s\nfetchOrder\nfetchMyTrades\nfetchPosition\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt.com/#/exchanges/",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": false,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.0,
            "source": "ratios"
          }
        },
        {
          "formula": "1/56",
          "type": "fractions",
          "position": {
            "start": 599,
            "end": 603
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n1/56\n\nfetchPositions\nsetMarginMode\nsetLeverage\naddMarg",
          "confidence": 0.3,
          "metadata": {
            "length": 4,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "2/56",
          "type": "fractions",
          "position": {
            "start": 1295,
            "end": 1299
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n2/56\n\n\n\nendpoint/perpetuals#retrieve-perpetuals-\nmet",
          "confidence": 0.3,
          "metadata": {
            "length": 4,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "3/56",
          "type": "fractions",
          "position": {
            "start": 2141,
            "end": 2145
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n3/56\n\n\n\n\n\nParam\nType\nRequired\nDescriptio\nthe\nexcha",
          "confidence": 0.3,
          "metadata": {
            "length": 4,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "4/56",
          "type": "fractions",
          "position": {
            "start": 2862,
            "end": 2866
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n4/56\n\n\n\ncalculatePricePrecision\nHelper function to c",
          "confidence": 0.3,
          "metadata": {
            "length": 4,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "5/56",
          "type": "fractions",
          "position": {
            "start": 3680,
            "end": 3684
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n5/56\n\n\n\nParam\nType\nRequired\nDescriptio\nparams\nobject",
          "confidence": 0.3,
          "metadata": {
            "length": 4,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "6/56",
          "type": "fractions",
          "position": {
            "start": 4474,
            "end": 4478
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n6/56\n\n\n\nParam\nType\nRequired\nDe\nthis.w\nif not \nparams",
          "confidence": 0.3,
          "metadata": {
            "length": 4,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "7/56",
          "type": "fractions",
          "position": {
            "start": 5228,
            "end": 5232
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n7/56\n\n\n\nParam\nType\nRequired\nDescriptio\nspecific to\nt",
          "confidence": 0.3,
          "metadata": {
            "length": 4,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "8/56",
          "type": "fractions",
          "position": {
            "start": 6009,
            "end": 6013
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n8/56\n\n\n\nParam\nType\nRequired\nparams\nobject\nNo\nparams.",
          "confidence": 0.3,
          "metadata": {
            "length": 4,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "9/56",
          "type": "fractions",
          "position": {
            "start": 6636,
            "end": 6640
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n9/56\n\n\n\nParam\nType\nRequired\nDe\nm\nsy\nparams\nobject\nNo",
          "confidence": 0.3,
          "metadata": {
            "length": 4,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "10/56",
          "type": "fractions",
          "position": {
            "start": 7328,
            "end": 7333
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n10/56\n\n\n\nParam\nType\nRequired\nDescr\ncandl\nrepre\nsuppo",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "11/56",
          "type": "fractions",
          "position": {
            "start": 7870,
            "end": 7875
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n11/56\n\nstructures\nSee\nhttps://hyperliquid.gitbook.io/hy",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "12/56",
          "type": "fractions",
          "position": {
            "start": 8439,
            "end": 8444
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n12/56\n\n\n\nParam\nType\nRequired\nDe\nth\ncreateOrder\ncreate",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "13/56",
          "type": "fractions",
          "position": {
            "start": 9025,
            "end": 9030
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n13/56\n\n\n\nParam\nType\nRequired\nparams.triggerPrice\nfloa",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "14/56",
          "type": "fractions",
          "position": {
            "start": 9705,
            "end": 9710
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n14/56\n\n\n\nParam\nType\nRequired\nDescriptio\nprice and\npar",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "15/56",
          "type": "fractions",
          "position": {
            "start": 10435,
            "end": 10440
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n15/56\n\n\n\ncancelOrder\ncancels an open order\nKind: inst",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "16/56",
          "type": "fractions",
          "position": {
            "start": 11159,
            "end": 11164
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n16/56\n\n\n\nSee\nhttps://hyperliquid.gitbook.io/hyperliqu",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "17/56",
          "type": "fractions",
          "position": {
            "start": 11999,
            "end": 12004
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n17/56\n\n\n\nendpoint#cancel-order-s-by-cloid\nParam\nType",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "18/56",
          "type": "fractions",
          "position": {
            "start": 12410,
            "end": 12415
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n18/56\n\n\n\nParam\nType\nRequired\ntimeout\nnumber\nYes\nparam",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "19/56",
          "type": "fractions",
          "position": {
            "start": 12944,
            "end": 12949
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n19/56\n\n\n\nParam\nType\nRequired\namount\nfloat\nYes\nprice\nf",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "20/56",
          "type": "fractions",
          "position": {
            "start": 13560,
            "end": 13565
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n20/56\n\n\n\nParam\nType\nRequired\nDescriptio\norders\nArray",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "21/56",
          "type": "fractions",
          "position": {
            "start": 14126,
            "end": 14131
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n21/56\n\n\n\nParam\nType\nRequired\nDescri\ndescription\nstrin",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "22/56",
          "type": "fractions",
          "position": {
            "start": 14817,
            "end": 14822
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n22/56\n\n\n\nParam\nType\nRequired\nDescr\nfundi\nrate h\nfor\ns",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "23/56",
          "type": "fractions",
          "position": {
            "start": 15341,
            "end": 15346
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n23/56\n\n\n\nstructures\nSee: https://hyperliquid.gitbook.",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "24/56",
          "type": "fractions",
          "position": {
            "start": 15870,
            "end": 15875
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n24/56\n\n\n\nKind: instance method of hyperliquid\nReturns",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "25/56",
          "type": "fractions",
          "position": {
            "start": 16458,
            "end": 16463
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n25/56\n\n\n\nParam\nType\nRequired\nDe\nsymbol\nstring\nYes\nuni",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "26/56",
          "type": "fractions",
          "position": {
            "start": 17063,
            "end": 17068
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n26/56\n\n\n\nParam\nType\nRequired\nDe\nlimit\nint\nNo\nthe m\nnu",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "27/56",
          "type": "fractions",
          "position": {
            "start": 17629,
            "end": 17634
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n27/56\n\n\n\n\n\nParam\nType\nRequired\nDe\nexcha\nendpo\nparam",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "28/56",
          "type": "fractions",
          "position": {
            "start": 18297,
            "end": 18302
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n28/56\n\nfetchMyTrades\nfetch all trades made by the user",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "29/56",
          "type": "fractions",
          "position": {
            "start": 18993,
            "end": 18998
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n29/56\n\n\n\n\n\nParam\nType\nRequired\nDescr\nAPI\nendp\nparam",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "30/56",
          "type": "fractions",
          "position": {
            "start": 19644,
            "end": 19649
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n30/56\n\n\n\nfetchPositions\nfetch all open positions\nKind",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "31/56",
          "type": "fractions",
          "position": {
            "start": 20247,
            "end": 20252
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n31/56\n\n\n\nKind: instance method of hyperliquid\nReturns",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "32/56",
          "type": "fractions",
          "position": {
            "start": 20662,
            "end": 20667
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n32/56\n\n\n\nset the level of leverage for a market\nKind:",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "33/56",
          "type": "fractions",
          "position": {
            "start": 21128,
            "end": 21133
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n33/56\n\n\n\nSee: https://hyperliquid.gitbook.io/hyperliq",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "34/56",
          "type": "fractions",
          "position": {
            "start": 21877,
            "end": 21882
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n34/56\n\n\n\nParam\nType\nRequired\nDescriptio\namount\nfloat",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "35/56",
          "type": "fractions",
          "position": {
            "start": 22504,
            "end": 22509
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n35/56\n\n\n\nParam\nType\nRequired\ntoAccount\nstring\nYes\npar",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "36/56",
          "type": "fractions",
          "position": {
            "start": 23109,
            "end": 23114
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n36/56\n\n\n\nParam\nType\nRequired\ncode\nstring\nYes\namount\nf",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "37/56",
          "type": "fractions",
          "position": {
            "start": 23516,
            "end": 23521
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n37/56\n\n\n\nParam\nType\nRequired\nDe\nsymbol\nstring\nYes\nuni",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "38/56",
          "type": "fractions",
          "position": {
            "start": 24133,
            "end": 24138
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n38/56\n\n\n\nParam\nType\nRequired\nDescr\nentrie\nreturn\npara",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "39/56",
          "type": "fractions",
          "position": {
            "start": 24698,
            "end": 24703
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n39/56\n\n\n\nParam\nType\nRequired\nDesc\nstruct\nto ret\nparam",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "40/56",
          "type": "fractions",
          "position": {
            "start": 25270,
            "end": 25275
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n40/56\n\n\n\nParam\nType\nRequired\nDesc\nwithd\nstruct\nto ret",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "41/56",
          "type": "fractions",
          "position": {
            "start": 25826,
            "end": 25831
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n41/56\n\n\n\n\n\nParam\nType\nRequired\nDe\nparams\nobject\nNo",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "42/56",
          "type": "fractions",
          "position": {
            "start": 26451,
            "end": 26456
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n42/56\n\n\n\nKind: instance method of hyperliquid\nReturns",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "43/56",
          "type": "fractions",
          "position": {
            "start": 27110,
            "end": 27115
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n43/56\n\n\n\nSee: https://hyperliquid.gitbook.io/hyperliq",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "44/56",
          "type": "fractions",
          "position": {
            "start": 27760,
            "end": 27765
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n44/56\n\n\n\nSee: https://hyperliquid.gitbook.io/hyperliq",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "45/56",
          "type": "fractions",
          "position": {
            "start": 28340,
            "end": 28345
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n45/56\n\n\n\nedit a trade order\nKind: instance method of",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "46/56",
          "type": "fractions",
          "position": {
            "start": 28938,
            "end": 28943
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n46/56\n\n\n\nwatchOrderBook\nwatches information on open o",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "47/56",
          "type": "fractions",
          "position": {
            "start": 29657,
            "end": 29662
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n47/56\n\n\n\nunWatchOrderBook\nunWatches information on op",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "48/56",
          "type": "fractions",
          "position": {
            "start": 30373,
            "end": 30378
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n48/56\n\n\n\nwatchTicker\nwatches a price ticker, a statis",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "49/56",
          "type": "fractions",
          "position": {
            "start": 31158,
            "end": 31163
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n49/56\n\n\n\nKind: instance method of hyperliquid\nReturns",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "50/56",
          "type": "fractions",
          "position": {
            "start": 31912,
            "end": 31917
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n50/56\n\n\n\nParam\nType\nRequired\nDe\nsymbols\nArray<string>",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "51/56",
          "type": "fractions",
          "position": {
            "start": 32514,
            "end": 32519
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n51/56\n\n\n\nParam\nType\nRequired\nDe\norders\nlimit\nint\nNo\nt",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "52/56",
          "type": "fractions",
          "position": {
            "start": 33078,
            "end": 33083
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n52/56\n\n\n\nParam\nType\nRequired\nDescriptio\nsymbol\nstring",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "53/56",
          "type": "fractions",
          "position": {
            "start": 33824,
            "end": 33829
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n53/56\n\n\n\nParam\nType\nRequired\nDescrip\nto fetch\nOHLCV\nd",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "54/56",
          "type": "fractions",
          "position": {
            "start": 34441,
            "end": 34446
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n54/56\n\n\n\nordered as timestamp, open, high, low, close",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "55/56",
          "type": "fractions",
          "position": {
            "start": 35110,
            "end": 35115
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n55/56\n\n\n\nSee: https://hyperliquid.gitbook.io/hyperliq",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "56/56",
          "type": "fractions",
          "position": {
            "start": 35588,
            "end": 35593
          },
          "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n56/56",
          "confidence": 0.5,
          "metadata": {
            "length": 5,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.05,
            "source": "fractions"
          }
        },
        {
          "formula": "hyperliquid\nKind: global class\nExtends: xchange\n+ fetchCurrencies\n«+ fetchMarkets\n+ fetchswapMarkets\n+ calculatePricePrecision\n+ fetchSpotMarkets\n+ fetchBalance\n+ fetchOrderBook\n+ fetchTickers\n+ fetchFundingRates\n+ fetchoHLCy\n+ fetchtrades\n+ createOrder\n+ createOrders\n+ createOrdersRequest\n+ cancelOrder\n+ cancelOrders\n+ cancelOrdersForSymbols\n+ cancelAllOrdersAfter\n+ editOrder\n+ editOrders\n+ createVault\n+ fetchFundingRateHistory\n+ fetchOpenOrders\n+ fetchClosedOrders\n+ fetchCanceledOrders\n+ fetchCanceledAndClosedOrders\n+ fetchOrders\n+ fetchOrder\n+ fetchMyTrades\n+ fetchPosition\nipo conechagethpatnd 16",
          "type": "ocr_image",
          "page": 1,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 606,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": false,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 1.0,
            "source": "ocr_image"
          }
        },
        {
          "formula": "vas. e8 vgn\n+ fetchPositions\n+ setMarginMode\n«+ setLeverage\n+ addMargin\n+ reduceMargin\n+ transfer\n+ withdraw\n«+ fetchTradingFee\n+ fetchLedger\n* fetchDeposits\n+ fetchWithdrawals\n* fetchOpeninterests\n«+ fetchOpeninterest\n* fetchFundingHistory\n+ createOrdersWs\n+ createOrderWs\n+ editOrderws\n+ watchOrderBook\n+ unWatchOrderBook\n+ watchTicker\n+ watchTickers\n+ unWatchTickers\n+ watchMyTrades\n+ unWatchTrades\n+ watchOHLCy\n+ unWatchOHLcy\n+ watchOrders\nfetchCurrencies\nfetches all available currencies on an\nexchange\nKind: instance method of hyperliquid\nReturns: object - an associative dictionary of\ncurrencies\nSee: https://hyperliquid.gitbook io/hyperliquid-\ndocs/for-developers/api/info-\n\npit ot cmlencangestyperind se",
          "type": "ocr_image",
          "page": 2,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 712,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 1.0,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 Ingen\nendpoint/perpetualstretrieve-perpetuals-\nmetadata\nParam Type Required Descriptio\nextra\nparameter\nspecific to\nparams object. No the\nexchange\nAPI\nendpoint\neee >\nhyperliquid.fetchCurrencies ([params])\noe >\nfetchMarkets\nretrieves data on all markets for hyperliquid\nKind: instance method of hyperliquid\nReturns: Arraycobject> - an array of objects\nrepresenting market data\nSee\n‘*_ https://hyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/info-\nendpoint/perpetualstretrieve-perpetuals-\nasset-contexts-includes-mark-price-current-\nfunding-open-interest-etc\n‘*_https://hyperliquid.gitbook.io/hypertiquid-\ndocs/for-developers/api/info-\nendpoint/spotretrieve-spot-asset-contexts\nParam Type Required Descriptio\nparams object. No extra\nparameter\nspecific to\npit ot cmlencangestyperind ase",
          "type": "ocr_image",
          "page": 3,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 803,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 1.0,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Type Required Descriptio\nthe\nexchange\nAPI\nhyperliquid.fetchMarkets ([params])\noe >\nfetchSwapMarkets\nretrieves data on all swap markets for\nhypertiquid\nKind: instance method of hyperliquid\nReturns: Arraycobject> - an array of objects\nrepresenting market data\nSee: https//nyperliquid gitbookio/hypertiquid-\ndocs/for-developers/api/info-\nendpoint/perpetuals#retrieve-perpetuals-asset-\ncontexts-includes-mark-price-currentunding-\nopen-interest-etc\nParam Type Required Descriptio\nextra\nparameter\nspecific to\nparams object. No the\nexchange\napi\nendpoint\neee\nhyperliquid.fetchswapharkets ([paress]\nSee >\npit ot cmlencangestyperind as",
          "type": "ocr_image",
          "page": 4,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 644,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 1.0,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\ncalculatePricePrecision\nHelper function to calculate the Hyperliquid\nDECIMAL PLACES price precision\nKind: instance method of hyperliquid\nReturns: int. ~The calculated price precision\nParam Type Description\nthe price to us\nprice float inthe\ncalculation\nthe\namountPrecisi\namountPrecision ant\nto use in the\ncalculation\nthe\nmaxDecimals 1\nmaxDecimals int\nuse in the\ncalculation\nee >\nhyperliquid.celculatePricePrecision (p\n(=D >\nfetchSpotMarkets\nretrieves data on all spot markets for\nhypertiquid\nKind: instance method of hyperliquid\nReturns: Arraycobject> -an array of objects\nrepresenting market data\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/info-\nendpoint/spot#retrieve-spot-asset-contexts\npit ot cmlencangestyperind 00",
          "type": "ocr_image",
          "page": 5,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 762,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.9,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Type Required Descriptio\nextra\nparameter\nspecific to\nparams object. No the\nexchange\nAPI\nendpoint\neee >\nhyperliquid.fetchspotharkets ([parans]\nSe >\nfetchBalance\nquery for balance and get the amount of funds\navailable for trading or funds locked in orders\nKind: instance method of hyperlsquid\nReturns: object -a balance structure\nSee\n‘*_ https://hyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/info-\nendpoint/spotfretrieve-a-users-token-\nbalances\n‘*_-https://hyperliquid.gitbook.io/hypertiquid-\ndocs/for-developers/api/info-\nendpoint/perpetuals#retrieve-users-\nperpetuals-account-summary\nParam Type Required =\nextra\nspeci\nparams object No spe\nendpr\nparamsuser string No user:\ndefau\npit ot cmlencangestyperind se",
          "type": "ocr_image",
          "page": 6,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 740,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 1.0,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Type Required =\nthissw\nifnot\nwalle\nparamstype string No [spot\nhyperliquid.fetchBalance ([params])\nfetchOrderBook\ned >\nfetches information on open orders with bid\n(buy) and ask (sell) prices, volumes and other\ncata\nKind: instance method of hyperliquid\nReturns: object. A dictionary of order book\nstructures indexed by market symbols\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/info-endpointel2-\nbook-snapshot\nParam Type Required Descriptio\nunifies\nsymbol of\nthe marke\nsymbol string Yes rem\nthe order\nbook for\nthe\nmaximum\namount of\nlimit ant No amount ot\nentries to\nretun\nparams absect_ No extra\nparameter\npit ot cmlencangestyperind 10",
          "type": "ocr_image",
          "page": 7,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 682,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.65,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 eeu\nParam Type Required Descriptio\nspecific to\nthe\nexchange\napi\nhyperliquid.fetchorderGook (symbol, 2\n— >\nfetchTickers\nfetches price tickers for multiple markets,\nstatistical information calculated over the past\n24 hours for each market\nKind: instance method of hyperisquid\nReturns: object - a dictionary of ticker\n(i >\nSee\n+ https//nyperliquid.gitbookio/hypertiquid-\ndocs/for-developers/api/info-\nendpoint/perpetuals#retrieve-perpetuals-\nasset-contexts-includes-mark-price-current-\nfunding-open-interest-etc\n+ -https//nyperliquid.gitbook io/hypertiquid-\ndocs/for-developers/api/info-\nendpoint/spot#retrieve-spot-asset-contexts\nParam pe Required\nsymbols Arrayestringy NO\npac cx cortechngesyperindd se",
          "type": "ocr_image",
          "page": 8,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 709,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 1.0,
            "source": "ocr_image"
          }
        },
        {
          "formula": "vas. e8 vgn\nParam Type Required\nparams object No\nparamstype string No\nhyperliquid.fetchTickers ([eymbols, pa\ned >\nfetchFundingRates\nee) >\nretrieves data on all swap markets for\nhypertiquid\nKind: instance method of hyperliquid\nReturns: Arraycobject> -an array of objects\nrepresenting market data\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/info-\nendpoint/perpetualstretrieve-perpetuals-asset-\ncontexts-includes-mark-price-current-funding-\nopen-interest-ete\nParam Type Required Dr\nsymbols Arrayestring> No tis\npit ot cmlencangestyperind se",
          "type": "ocr_image",
          "page": 9,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 567,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 1.0,
            "source": "ocr_image"
          }
        },
        {
          "formula": "ss, 255008 eeu\nParam Type Required Ds\nm\n¥y\n°\npe\nsf\nparams object No th\n°\nAL\nhyperliquid.fetchFundingRates ([symbol\n— >\nfetchOHLCV\nfetches historical candlestick data containing\nthe open, high, low, and close price, and the\nvolume of a market\nKind: instance method of hypertiquid\nReturns: ArrayeArrayesnts> ~A list of candles\nordered as timestamp, open, high, low, close,\nvolume\nSee: https://nypertiquid.gitbook.io/nyperliquid-\ndocs/for-developers/api/info-endpointécandle-\nsnapshot\nParam Type Required Desc\nunite\nsymb\nthen\nsymbol string Yes ie\nOHLC\ndata\ntimeframe string Yes the l\nof tin\neach\npac cx cortechngesyperindd 108",
          "type": "ocr_image",
          "page": 10,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 623,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.6000000000000001,
            "source": "ocr_image"
          }
        },
        {
          "formula": "ss, 255008 eeu\n\nstructures\n\nSee\n\n‘+ https//nyperliquid.gitbookio/nypertiquid-\n\ndocs/for-developers/api/info-\n\nendpoint#retrieve-a-users-flls\n\n‘+ https//nypertiquid.gitbook io/nypertiquid-\n\ndocs/for-developers/api/info-\n\nendpoint#retrieve-a-users-fls-by-time\n\nParam Type Required Ox\nur\n\nsymbol string Yes m\ny\nth\ntir\n\nsince ant No\nto\ntre\nth\nm\n\nLimit ant No m\ntre\nst\nto\nex\npe\nsp\n\nparams object No th\nex\niG\ner\ntir\n\nyarams.until ant No \"\n\nPp th\ntre\nwi\nac\n\nparamsaddress. string No th\ntre\n\nparams.user string No wi\nac\n\npac cx cortechngesyperindd 1280",
          "type": "ocr_image",
          "page": 12,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 544,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 1.0,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Type Required Dv\nth\nhyperliquid.fetchTrades (eymbol{, sine\naD >\ncreateOrder\ncreate a trade order\nKind: instance method of hyperliquid\nReturns: object - an order structure\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/exchange-\nendpoint#place-an-order\nParam Type Required\nsymbol string Yes\ntype string Yes\nside string Yes\namount float Yes\nprice float No\nparams object No\nparamstimelnForce string No\nparams postOnly boot No\nparamsseduceOnly bool No\npit ot cmlencangestyperind tae",
          "type": "ocr_image",
          "page": 13,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 524,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.8500000000000001,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Type Required\n\nparamstriggerPrice float. = No\n\nparamsclientOrderld string No\n\nparamsstippage string No\n\nparamsvaultAddress string No\n\nhyperliquid.createorder (symbol, type,\n\n(— >\n\ncreateOrders\n\ncreate a list of trade orders\n\nKind: instance method of hyperliquid\n\nReturns: object - an order structure\n\nSee: https://hyperliquid.gitbook.o/hypertiquid-\n\ndocs/for-developers/api/exchange-\n\nendpoint#place-an-order\n\nParam Type Required Descriptio\n\norders array ‘Yes list of\n\n——_—_ orders tp\ncreate, €2c\nobject\nshould\ncontain th\nparameter\nrequired b\ncreateOrdi\nnamely\nsymbol,\ntype, side,\namount,\n\npit ot cmlencangestyperind ase",
          "type": "ocr_image",
          "page": 14,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 639,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.7000000000000001,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Type Required Descriptio\nprice and\nparams\nextra\nparameter\nspecific to\nparams absect_ No the\nexchange\nAPI\nhyperliquid.createorders (orders{, par\n(o—_— >\ncreateOrdersRequest.\ncreate a list of trade orders\nKind: instance method of hyperliquid\nReturns: object - an order structure\n‘Ste ARPS AY PE Ee a ECO TOBE quid:\ndocs/for-developers/api/exchange-\nendpoint#place-an-order\nParam Type Description\nlist of orders to create,\neach object should\ncontain the\nparameters required\no 9\norders Array by createOrder, namely\nsymbol, type, side,\n‘amount, price and\nparams\nhyperliquid.createordersRequest (order\nED >\npit ot cmlencangestyperind sae",
          "type": "ocr_image",
          "page": 15,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 650,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.7,
            "source": "ocr_image"
          }
        },
        {
          "formula": "vas. e8 vgn\n\ncancelOrder\n\ncancels an open order\n\nKind: instance method of hyperliquid\n\nReturns: object -An order structure\n\nSee\n\n‘*__https://nyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/exchange-\nendpoint#cancel-order-s\n\n‘+ https://nyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/exchange-\nendpoint#cancel-order-s-by-cloid\n\nParam Type Required\n\nid string Yes\nsymbol string Yes\nparams object No\nparamsclientOrderld string No\nparamsvaultAddress string No\n\n— >\nhyperliquid.cancelorder (44, symbol,\n(o_O\n\ncancelOrders\n\ncancel multiple orders\n\nKind: instance method of hyperliquid\n\nReturns: object ~an list of order structures\n\npit ot cmlencangestyperind tase",
          "type": "ocr_image",
          "page": 16,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 681,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 1.0,
            "source": "ocr_image"
          }
        },
        {
          "formula": "vas. e8 vgn\nSee\n‘+ https://nyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/exchange-\nendpoint#cancel-order-s\n‘+ https://hyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/exchange-\nendpoint#cancel-order-s-by-cloid\nParam Type Ri\nids Arrayestringy Ye\nsymbol string N\nparams object N\nparams.lientOrderld  °**2°9 > N\narrayeatring>\nparamsvaultAddress string N\n— >\nhyperliquid.cancelorders (dsl, symbol\ned >\ncancelOrdersForSymbols\ncancel multiple orders for multiple symbols\nKind: instance method of hyperisquid\nReturns: object - an list of order structures\nSee\n‘*__https://nyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/exchange-\nendpoint#cancel-order-s\n‘+ https://nyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/exchange-\npit ot cmlencangestyperind se",
          "type": "ocr_image",
          "page": 17,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 793,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 1.0,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nendpoint#cancel-order-s-by-cloid\nParam Type\norders Aeray<Cancelatsonti\nparams object\nparamsvaultAddress string\n— >\nhyperliquid.cancelordersForsymbols (or\ned >\ncancelAllOrdersAfter\ndead man's switch, cancel all orders after the\ngiven timeout\nKind: instance method of hyperliquid\nReturns: object -the api result\npit ot cmlencangestyperind tase",
          "type": "ocr_image",
          "page": 18,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 354,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": false,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.4,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Type Required\ntimeout umber Yes\nparams object No\nparamsvaultAddress string No\nel >\nhyperliquid.cancelAllordersafter (time\nED >\neditOrder\nedit a trade order\nKind: instance method of hyperliquid\nReturns: object - an order structure\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/exchange-\nendpoint#modify-multiple-orders\nParam Type Required\nid string Yes\nsymbol string Yes\ntype string Yes\nside string Yes\npit ot cmlencangestyperind sae",
          "type": "ocr_image",
          "page": 19,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 479,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.7000000000000001,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Type Required\namount float Yes\nprice float No\nparams object No\nparamstimelnForce string No\nparams postOnly boot No\nparamsseduceOnly bool No\nparamstriggerPrice float. = No\nparamsclientOrderld string No\nparamsyaultAddress string No\nhyperliquid.edstOrder (3d, symbol, typ\ned >\n\neditOrders\n\naD >\n\nedit a list of trade orders\n\nKind: instance method of hyperliquid\n\nReturns: object - an order structure\n\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\n\ndocs/for-developers/api/exchange-\n\nendpoint#modify-multiple-orders\n\npit ot cmlencangestyperind 20",
          "type": "ocr_image",
          "page": 20,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 565,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.75,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\n\nParam Type Required Descriptio\nlist of\norders to\ncreate, eac\nobject\nshould\ncontain th\nparameter\n\norders array Yes required b\ncreateOrdi\nnamely\nsymbol,\ntype, side,\namount,\nprice and\nparams\nextra\nparameter\nspecific to\n\nparams absect_ No the\nexchange\napi\nendpoint\n\noe >\n\nhyperliquid.edstorders (ordersf, paran\n\n(oe >\n\ncreateVault\n\ncreates a value\n\nKind: instance method of hyperliquid\n\nReturns: object -the api result\n\nParam Type.——Required —_Descri\nThe ne\n\nname string Yes of the\nvault\n\npit ot cmlencangestyperind 0",
          "type": "ocr_image",
          "page": 21,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 527,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": false,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.15000000000000002,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Type.—-Required _Descri\nThe\n4 ve descr\nlescription string Yes oe\nvault\nThe\ninitial\ninitialUsd umber Yes ive\nvault\nextra\nparam\nspecifi\nparams object No the\nexchat\nAPI\nhyperliquid.createvault (name, descrip\n— >\nOO ———___e\nfetchFundingRateHistory\nfetches historical funding rate prices\nKind: instance method of hyperliquid\nReturns: Arraycobject> -a list of funding rate\nstructures\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/info-\nendpoint/perpetuals#retrieve-historical-\nfunding-rates\nParam Type Required Desc\nsymbol string Yes unifi\nsymb\nthen\nto fet\nthe\npit ot cmlencangestyperind se",
          "type": "ocr_image",
          "page": 22,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 631,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.8500000000000001,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Type Required Desc\nfundi\nrate!\nfor\ntimes\ninms\nthee\nsince int No mee\nratet\nfetch\nthe\nmaxi\namot\nLimit ant No fundi\nrate\nstruc\nto fet\nextra\nparar\nspeci\nparams object No the\nexchi\nAPI\nendp\ntimes\ninms\nparamsuntil int. No the l\nfundi\nhyperliquid.fetchFundingRatetistory (s\n———=D >\nEE >\nfetchOpenOrders\nfetch all unfilled currently open orders\nKind: instance method of hyperliquid\nReturns: Arcaysorder> ~a list of order\npit ot cmlencangestyperind se",
          "type": "ocr_image",
          "page": 23,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 461,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": false,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.2,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nstructures\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/info-\nendpoint#retrieve-a-users-open-orders\nParam Type Required\nur\nsymbol string Yes 3\nth\nsince ant No. m\nor\nth\nlimit int No nm\nor\nfe\nex\nsp\nparams object No\ner\nyarams.user strir No ae\nP ring ‘\nne\n‘Oy\nfi\nparamsmethod string No i\nfi\neD >\nhyperliquid.fetchopenorders (eymbol!,\naD >\nfetchClosedOrders\nfetch all unfilled currently closed orders\npit ot cmlencangestyperind 20",
          "type": "ocr_image",
          "page": 24,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 467,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.75,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nKind: instance method of hyperlsquid\nReturns: Arcaysorder> ~a list of order\nstructures\nParam Tye Required =D\nunifie\nsymbol string Yes\nv ° symb:\nthe es\nsince ant No inms\nopen\nther\nlimit int No ums\norder\ntoret\nextra\nspecit\nparams object No spel\nendpc\nuser é\narams.user stir No defau\nP ° thisw\nifnot\nEe >\nhyperliquid.fetchClosedorders (symbol\n— >\nfetchCanceledOrders\nfetch all canceled orders\nKind: instance method of hyperliquid\nReturns: Arcaysorder> ~a list of order\nstructures\npit ot cmlencangestyperind 80",
          "type": "ocr_image",
          "page": 25,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 519,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": false,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.25,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Tye Required =D\nunifie\nsymbol string Yes ane\nthe es\nsince ant No inms\nopen\nther\nlimit int No numb\norder\ntoret\nextra\nspecit\nobject Ne\nparams ject NO speci\nendpc\nuser ¢\narams.user stir No defau\nPi one thisw\nifnot\neD >\nhyperliquid.fetchcanceledorders (syabo\n——_—eD >\nfetchCanceledAndClosedOrders\nfetch all closed and canceled orders\nKind: instance method of hyperliquid\nReturns: Arcaysorder> ~a list of order\nstructures\nParam Type Required =D\nunifie\nsymbol string Yes sab\nthe es\nsince ant No inms\nopen\npit ot cmlencangestyperind 20",
          "type": "ocr_image",
          "page": 26,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 547,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": false,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.25,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 voi\nParam Type Required =D\nthe m\nume\nLimit int No\norder\ntoret\nextra\nspect\nrams object No\nP exche\nendpc\nuser:\njarams.user_ string No defau\nPi no this.w\nhyperLiquid. fetchCanceledndClosed0rde\n(— >\nfetchOrders >\nfetch all orders\nKind: instance method of hypertiquid\nReturns: Array<Order> -a list of order\nstructures\nParam Type Required ~=— Dt\nunifie\nsymbol string Yes\n° symb\nthe e:\nsince int No ins\nopen\nthe m\nLimit int No numb\norder\ntoret\nparams object No extra\nspeci\npit ot cmlencangestyperind 8",
          "type": "ocr_image",
          "page": 27,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 503,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": false,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.35000000000000003,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Tye Required =D\nexche\nendpc\nuser é\nyarams.user stra No defau\nPi “ serang thisw\nhyperliquid.fetchorders (eymbol{, sine\naD >\nfetchOrder\nfetches information on an order made by the\nuser\nKind: instance method of hyperliquid\nobject go re\nPG iin olin\"? ly\nSee: https//nyperliquid gitbookio/hypertiquid-\ndocs/for-developers/api/info-endpoint#query-\norder-status-by-oid-or-clotd\nParam Type Required =D\nid string Yes order\nunifie\nther\nsymbol string Yes ae\nin\nextra\nspecit\nparams object No speci\nendpc\nuser ¢\nyarams.user stra No defau\nPe “ string thism\nifnot\neD >\npit ot cmlencangestyperind sas",
          "type": "ocr_image",
          "page": 28,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 603,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 1.0,
            "source": "ocr_image"
          }
        },
        {
          "formula": "vas. e8 vgn\nhyperliquid.fetchorder (id, syaboll, p\nED >\nfetchMyTrades\nfetch all trades made by the user\nKind: instance method of hyperlsquid\nReturns: Arrayctrade> ~a list of trade\nstructures\nSee\n‘+ https://nyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/info-\nendpoint#retrieve-a-users-flls\n‘+ https://hyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/info-\nendpoint#retrieve-a-users-flls-by-time\nParam Type Required Desc\nunifi\nsymbol string Yes mark\nsymb\nthee\ntime\nsince int No ume\ntrade\nthe\nmaxi\numl\nLimit int No pom\nstruc\ntore!\nparams object No extra\nparar\nspeci\nthe\nexchi\npit ot cmlencangestyperind 280",
          "type": "ocr_image",
          "page": 29,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 628,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 1.0,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 eeu\nParam Type Required Desc\napi\nendp\ntimes\nparams.until sn No ane\nhyperliquid.fetchiyTrades (symbol, si\n—_— >\nfetchPosition\nfetch data on an open position\nKind: instance method of hyperisquid\nReturns: object -a position structure\nSee: https//nyperliquid gitbookio/hypertiquid-\ndocs/for-developers/api/info-\nendpoint/perpetualstretrieve-users-perpetuals-\naccount-summary\n< eens =—\nunifie\nsymbol string Yes om\npositi\nextra\nparams object No spel\nendpc\nuser\ndefau\nparamsuser string No ee\nif not\n—_— >\npit ot cmlencangestyperind aoe",
          "type": "ocr_image",
          "page": 30,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 537,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.9500000000000001,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nhyperliquid.fetchPosition (eymbol[, pa\nED >\nfetchPositions\nfetch all open positions\nKind: instance method of hyperlsquid\nReturns: Arraycobject> -a list of position\nstructure\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/info-\nendpoint/perpetualstretrieve-users-perpetuals-\naccount-summary\nParam Type Required\nsymbols Arrayestringy No\nparams object No\nparamsuser string No\n— >\nhyperliquid.fetchPositions (Leymbols,\nel >\nsetMarginMode\nset margin mode (symbol)\npit ot cmlencangestyperind sie",
          "type": "ocr_image",
          "page": 31,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 529,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.9500000000000001,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nKind: instance method of hyperlsquid\nReturns: object - response from the\nexchange\nParam Type Required 0\n®\nfn\nmarginMode string Yes >\nig\n¢\n®\ns\nu\nsymbol string Yes u\nP\nh\n4\ne\nP\ns\nparams object No u\ne\nA\ne\nuw\nu\n\"\nparamsleverage string No s\nu\nfn\n«\ned >\nhyperliquid.setNargintode (margintode,\naD >\nsetLeverage\npit ot cmlencangestyperind some",
          "type": "ocr_image",
          "page": 32,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 347,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": false,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.2,
            "source": "ocr_image"
          }
        },
        {
          "formula": "ss, 255008 yeu\nset the level of leverage for a market\nKind: instance method of hyperisquid\nReturns: object - response from the\nexchange\nParam Type Required\nleverage float Yes\nsymbol string Yes\nparams object No\nparamsmarginMode string No\nEe »\nhyperliquid.cetLeverage (leverage, eym\n—— »\naddMargin\nadd margin\nKind: instance method of hyperisquid\nReturns: object -a margin structure\npac cx cortechngesyperindd sae",
          "type": "ocr_image",
          "page": 33,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 410,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": false,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.1,
            "source": "ocr_image"
          }
        },
        {
          "formula": "vas. e8 Ingen\n\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\n\ndocs/for-developers/api/exchange-\n\nendpoint#update-isolated-margin\n\nParam Type Required -_Descriptic\nunified\n\nsymbol string Yes market\nsymbol\namount o!\n\namount fost. Yes margin to\nadd\nextra\nparamete!\nspecific to\n\nparams object. No the\nexchange\napi\nendpoint\n\noe >\n\nhyperliquid.adeMargin (symbol, anount{\n\n—— >\n\nreduceMargin\n\nremove margin from a position\n\nKind: instance method of hyperliquid\n\nReturns: object -a margin structure\n\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\n\ndocs/for-developers/api/exchange-\n\nendpoint#update-isolated-margin\n\nParam Type Required -_Descriptic\nunified\n\nsymbol string Yes market\nsymbol\n\npit ot cmlencangestyperind ase",
          "type": "ocr_image",
          "page": 34,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 720,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 1.0,
            "source": "ocr_image"
          }
        },
        {
          "formula": "ss, 255008 yeu\nParam Type Required -_Descriptic\nthe\namount of\namount float_—_-Yes\nmargin to\nremove\nextra\nparametet\nspecific to\nparams object. No the\nexchange\nAPL\nhyperliquid.reduceNargin (symbol, anou\n—————= »\ntransfer\ntransfer currency internally between wallets on\nthe same account\nKind: instance method of hypertiquid\nReturns: object - a transfer structure\nSee: https://nypertiquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/exchange-\nendpoint#lt-usde-transfer\nParam Type Required\ncode string Yes\namount float Yes\nfromAccount string Yes\npac cx cortechngesyperindd 280",
          "type": "ocr_image",
          "page": 35,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 575,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.75,
            "source": "ocr_image"
          }
        },
        {
          "formula": "vas. e8 vgn\nParam Type Required\ntoAccount string Yes\nparams object No\nparamsvaultAddress string No\nhyperliquid.transfer (code, mount, fr\n(——D >\nwithdraw\nmake a withdrawal (only support USDC)\nKénidainstancemmennodeats hyper1iquid >\nReturns: object ~a transaction structure\nSee\n‘*_ https://hyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/exchange-\nendpoint#initiate-a-withdrawal-request\n‘* https://hyperliquid.gitbook.io/hypertiquid-\ndocs/for-developers/api/exchange-\nendpoint#deposit-or-withdraw-from-a-vault\npit ot cmlencangestyperind sate",
          "type": "ocr_image",
          "page": 36,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 551,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 1.0,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Type Required\ncode string Yes\namount float Yes\naddress string Yes\ntag string Yes\nparams object No\nparamsvaultAddress string No\nEe >\nhyperliquid.nithdraw (code, amount, ad\n— >\nfetchTradingFee\nfetch the trading fees for a market\nKind: instance method of hyperliquid\nReturns: object -a fee structure\npit ot cmlencangestyperind ans",
          "type": "ocr_image",
          "page": 37,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 346,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": false,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.15000000000000002,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Tye Required =D\nunifie\nsymbol string Yes ane\nextra\nspecit\nrams object No\nP e exche\nendpc\nuser ¢\narams.user stir No defau\nPi “ thisw\nifnot\neD >\nhyperiquid.fetchtradingFee (symboll,\nED >\nfetchLedger\nfetch the history of changes, actions done by\nthe user or operations that altered the balance\nof the user\nKind: instance method of hyperliquid\nReturns: object -a ledger structure\nParam Type Required Desc\nunifi\ncode string No curre\ncode\ntimes\ninms\nsince int No thee\nledge\nentry\nLimit int No max\nrumt\nledge\npit ot cmlencangestyperind ase",
          "type": "ocr_image",
          "page": 38,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 551,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": false,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.2,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Type Required Desc\nentri\nretur\nextra\nparar\nspeci\nparams object No the\nexchi\napi\nendp\ntimes\ninms\nparamsuntil int. No the |\nledge\nhyperliquid.fetchledger (code, since,\nED >\nfetchDeposits\nfetch all deposits made to an account\nKind: instance method of hyperisquid\nReturns: Arraycobject> -a list of transaction\nLi >\nParam Type Required Desc\nunifi\ncode string Yes curre\ncode\nthee\ntime\nsince int No en\ndepo\nLimit int No the\nmaxi\numl\ndepo\npit ot cmlencangestyperind sate",
          "type": "ocr_image",
          "page": 39,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 481,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": false,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.2,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Type Required Desc\nwithe\nstruc\ntore!\nextra\nparar\nspeci\nparams object No the\nexchi\nAPI\nendp\nthe l\ntime\nparamsuntil int. No to fet\nwithe\nhyperliquid.fetchnsthdravals (codel, 8\naD >\nfetchOpeninterests\nRetrieves the open interest for a list of\nsymbols\n‘GGA hyper Liquid >\nReturns: object - an open interest\nstructurehttps//docs.cext.com/#/?id=open-\ninterest-structure\nParam Type Required Dv\nui\nsymbols Arrayestring> No “\ny\npit ot cmlencangestyperind se",
          "type": "ocr_image",
          "page": 41,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 467,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.55,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Type Required Ds\ne\nparams object, No PS\npe\nhyperliqutd.fetchopentnterests ([syabo\nED >\nfetchOpeninterest\n“et ieves the open interest of a cont sit >\ntrading pair\nKind: instance method of hyperisquid\nReturns: object - an open interest structure\nParam Type Required Descriptio\nunifies\ncoxt\nsymbol string Yes re\nsymbol\nexchange\nparams absect_ No specific\nparameter\noe >\nhyperliqutd.fetchopentnterest (symbol\n—— >\nfetchFundingHistory\nfetch the history of funding payments paid and\nreceived on this account\npit ot cmlencangestyperind ose",
          "type": "ocr_image",
          "page": 42,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 551,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": false,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.25,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nKind: instance method of hyperlsquid\nReturns: object. ~a funding history structure\nParam Type Required Descriptio\nunifies\nsymbol string No market\nsymbol\nthe earlies\ntime in ms\nsince ant = No to fetch\nfunding\nhistory for\nthe\n‘maximum\number of\nlimit ant No funding\nhistory\nstructures\nto retrieve\nextra\nparameter\nspecific to\nparams absect_ No the\nexchange\napi\nendpoint\noe >\nhyperliquid.fetchFundingHistory ([symb\n—ED >\ncreateOrdersWs\ncreate a list of trade orders using WebSocket\npost request\nKind: instance method of hyperliquid\nReturns: object - an order structure\npit ot cmlencangestyperind ws0",
          "type": "ocr_image",
          "page": 43,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 607,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": false,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.2,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 Ingen\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/exchange-\nendpoint#place-an-order\nParam Type Required Descriptio\nlist of\norders to\ncreate, eac\nobject\nshould\ncontain th\nparameter\norders array Yes required b\ncreateOrdi\nnamely\nsymbol,\ntype, side,\namount,\nprice and\nparams\nextra\nparameter\nspecific to\nparams object. No the\nexchange\nAPI\nendpoint\neee\nhyperliquid.createordersts (orders[, p\nel >\ncreateOrderWs\ncreate a trade order using WebSocket post\nrequest\nKind: instance method of hyperlsquid\nReturns: object - an order structure\npit ot cmlencangestyperind 480",
          "type": "ocr_image",
          "page": 44,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 598,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.65,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 Ingen\n\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\n\ndocs/for-developers/api/exchange-\n\nendpoint#place-an-order\n\nParam Type Required\nsymbol string Yes\ntype string Yes\nside string Yes\namount float Yes\nprice float No\nparams object No\nparamstimelnForce string No\nparams postOnly boot No\nparamsseduceOnly bool No\nparamstriggerPrice float. = No\nparamsclientOrderld string No\nparamsstippage string No\nparamsvaultAddress string No\n(aD >\nhyperliquid.createorderns (ayabol, typ\n(=D >\neditOrderWs\npit ot cmlencangestyperind ss",
          "type": "ocr_image",
          "page": 45,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 530,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.75,
            "source": "ocr_image"
          }
        },
        {
          "formula": "ss, 255008 yeu\n\nedit a trade order\n\nKind: instance method of hypertiquid\n\nReturns: object -an order structure\n\nSee: https://hypertiquid.gitbook.io/nyperliquid-\n\ndocs/for-developers/api/exchange-\n\nendpoint#modify-muttiple-orders\n\nParam Type Required\nid string Yes\nsymbol string Yes\ntype string Yes\nside string Yes\namount float Yes\nprice float No\nparams object No\nparamstimeinForce string No\nparams postOnly boot No\nparams.reduceOnly boot_-—=‘NO.\nparamstriggerPrice float =—-No\nparams.clientOrderid string No\nparamsvaultAddress string No\n— »\npac cx cortechngesyperindd 56",
          "type": "ocr_image",
          "page": 46,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 569,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.8,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nhyperliquid.edstorderts (1d, symbol, t\ned >\nwatchOrderBook\nwatches information on open orders with bid\n(buy) and ask (sell) prices, volumes and other\ncata\nKind: instance method of hyperliquid\nReturns: object ~A dictionary of order book\nstructures indexed by market symbols\nSee: https//nyperliquid gitbookio/hypertiquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\nParam Type Required Descriptio\nunifies\nsymbol of\nthe marke\nsymbol string Yes the mat\nthe order\nbook for\nthe\nmaximum\namount of\nlimit ant No amount ot\nentries to\nretun\nextra\nparameter\nspecific to\nparams object. No the\nexchange\napi\nendpoint\neee\npit ot cmlencangestyperind se",
          "type": "ocr_image",
          "page": 47,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 653,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.5,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nhyperliquid.natchorderBook (syabol[, 2\ned >\nunWatchOrderBook\ntunWatches information on open orders with\nbid (buy) and ask (sell) prices, volumes and\nother data\nKind: instance method of hyperliquid\nReturns: object ~A dictionary of order book\nstructures indexed by market symbols\nSee: https//nyperliquid gitbookio/hypertiquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\nParam Type Required Descriptio\nunifies\nsymbol of\nthe marke\nsymbol string Yes the mat\nthe order\nbook for\nextra\nparameter\nspecific to\nparams object. No the\nexchange\nAPI\nendpoint\neee >\nhyperliquid.unmatchorderBook (symbol,\nDP >\npit ot cmlencangestyperind ase",
          "type": "ocr_image",
          "page": 48,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 642,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.6000000000000001,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 eeu\nwatchTicker\nwatches a price ticker, a statistical calculation\nWith the information calculated over the past\n24 hours for a specific market\nKind: instance method of hyperisquid\nReturns: object -a ticker structure\nSee: https//nyperliquid.gitbookio/hypertiquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\nParam Type Required Descriptio\nunified\nsymbol of\nthe marke\nsymbol string Yes ume\nthe ticker\nfor\nextra\nparameter\nspecific to\nparams object. No the\nexchange\nAPL\nendpoint\nee >\nhyperliquid.vatchticker (symbol, para\n—_— >\nwatchTickers\nwatches a price ticker, a statistical calculation\nWith the information calculated over the past\n24 hours for all markets of a specifi list\npit ot cmlencangestyperind 80",
          "type": "ocr_image",
          "page": 49,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 719,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.6000000000000001,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nKind: instance method of hyperlsquid\nReturns: object -a ticker structure\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\nParam Type Required Dr\ny\nsymbols Array<strir ‘Yes th\ni rrayestring> te\nth\nfo\ne\npe\nSE\nparams object, No th\ne\nAL\ner\nED >\nhyperliquid.vatchTickers (symbols[, pa\no_O\nunWatchTickers\nunWatches a price ticker a statistical\ncalculation with the information calculated\nover the past 24 hours for all markets of a\nspecifi list\nKind: instance method of hyperliquid\nReturns: object -a ticker structure\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\npit ot cmlencangestyperind sane",
          "type": "ocr_image",
          "page": 50,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 705,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 1.0,
            "source": "ocr_image"
          }
        },
        {
          "formula": "vas. e8 vgn\nParam Type Required Ds\nsy\nth\nsymbols Arrayestring> Yes e\nth\nfo\ne\npe\nSE\nparams object, No th\ne\nAL\ner\nED >\nhyperliquid.unmatchtickers (symbole,\nED >\nwatchMyTrades\nwatches information on multiple trades made\nby the user\nKind: instance method of hyperlsquid\nReturns: Arraycobject> -a list of order\nstructures\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\nParam Type Required =D\nunifie\nsymbol string Yes om\nwere\nsince ant No the es\ninms\nipo conechagethpatnd sie",
          "type": "ocr_image",
          "page": 51,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 521,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.75,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 vgn\nParam Tye Required =D\norder\nthe r\nlimit int No ums\nstruct\nretrie\nextra\nspecit\nparams object No spect\nendpc\nuser é\narams.user stir No defau\nPi “ thisw\nhyperiquid.vatohtytrades (symbol, 2\n=D >\nunWatchTrades=== »\nUunWatches information on multiple trades\nmade in a market\nKind: instance method of hyperliquid\nReturns: Arraycobject> -a list of trade\nstructures\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\npit ot cmlencangestyperind sate",
          "type": "ocr_image",
          "page": 52,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 500,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.8500000000000001,
            "source": "ocr_image"
          }
        },
        {
          "formula": "ss, 255008 eeu\nParam Type Required Descriptio\nunified\nmarket\nsymbol of\nsymbol string Yes the marke’\ntrades\nwere madi\nin\nextra\nparameter\nspecific to\nparams object. No the\nexchange\nAPI\nendpoint\nee >\nhyperliquid.untiatchTrades (symbol, pa\n(ome\nwatchOHLCV\nwatches historical candlestick data containing\nthe open, high, low, close price, and the\nvolume of a market\nKind: instance method of hypertiquid\nReturns: ArrayeArrayesnts> ~A list of candles\nordered as timestamp, open, high, low, close,\nvolume\nSee: httpsy//nypertiquid.gitbook.io/hypertiquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\nParam Type Required _—_Descrip\nsymbol string Yes unified\nsymbol\nthe ma\npac cx cortechngesyperindd 80",
          "type": "ocr_image",
          "page": 53,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 694,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.55,
            "source": "ocr_image"
          }
        },
        {
          "formula": "sv 12580 Ingen\nordered as timestamp, open, high, low, close,\nvolume\nSee: https//nyperliquid.gitbookio/hypertiquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\nParam Type_——Required —_Descrip\nunified\nsymbol\nthe ma\nsymbol string Yes were\nOnLy\ndata fo\nthe len\nof time\ntimeframe string Yes each\ncandle\nreprese\nextra\nparame\nspecific\nparams object_—No the\nexchan\nAPI\nendpoi\nEE >\nhyperdiquid.unmatchoHLcv (symbol, tine\nED >\nwatchOrders\nwatches information on multiple orders made\nby the user\nKind: instance method of hyperliquid\nReturns: Arraycobject> -a list of order\nstructures\npit ot cmlencangestyperind see",
          "type": "ocr_image",
          "page": 55,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 608,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": true,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.65,
            "source": "ocr_image"
          }
        },
        {
          "formula": "vas. e8 Ingen\nSee: https//hyperliquid gitbookio/hypertiquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\nParam Type Required =D\nunifie\nsymbs\nbol string Ye\nsymbol tring Yes om\nwere\nthe ei\nsince ant No inms\norder\nthe r\nlimit int No ums\nstruct\nretrie\nextra\nspecit\nparams object No spect\nendpt\nuser é\narams.user stir No defau\nPi “ thisw\nifnot\nel >\nhyperliquid.vatchorders (eymbol{, sine\naD >\nipo conechagethpatnd see",
          "type": "ocr_image",
          "page": 56,
          "confidence": 0.5,
          "source": "ocr_image",
          "metadata": {
            "length": 417,
            "has_greek_letters": false,
            "has_superscript": false,
            "has_subscript": false,
            "has_fractions": true,
            "has_integrals": false,
            "has_summations": false,
            "complexity_score": 0.8,
            "source": "ocr_image"
          }
        }
      ],
      "statistics": {
        "total_formulas": 111,
        "text_source": 58,
        "pdf_source": 0,
        "ocr_source": 53,
        "avg_confidence": 0.481981981981982,
        "complexity_distribution": {
          "simple": 69,
          "medium": 11,
          "complex": 31
        },
        "formula_types": {
          "fractions": 57,
          "ratios": 1,
          "ocr_image": 53
        }
      },
      "extraction_metadata": {
        "config": {
          "preserve_context": true,
          "context_chars": 50,
          "min_formula_length": 3,
          "max_formula_length": 1000,
          "extract_financial_symbols": true,
          "validate_latex": true
        },
        "patterns_used": [
          "inline_latex",
          "display_latex",
          "equation_env",
          "align_env",
          "eqnarray_env",
          "math_env",
          "displaymath_env",
          "bracket_inline",
          "bracket_display",
          "percentage",
          "currency",
          "scientific_notation",
          "ratios",
          "fractions",
          "greek_letters",
          "probability",
          "expectation",
          "variance",
          "correlation",
          "volatility",
          "returns",
          "derivatives"
        ]
      }
    },
    "images": [
      {
        "id": "vector_2_104",
        "page": 3,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          183
        ],
        "bbox": [
          560,
          1445,
          1080,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descriptio params object No extra parameter specific to",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733587,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_2_672",
        "page": 3,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          306
        ],
        "bbox": [
          560,
          164,
          1080,
          470
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descriptio extra parameter specific to params object No the exchange API endpoint",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733589,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_3_171",
        "page": 4,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          306
        ],
        "bbox": [
          560,
          1019,
          1080,
          1325
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descriptio extra parameter specific to params object No the exchange API endpoint",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7335896,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_3_604",
        "page": 4,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          163
        ],
        "bbox": [
          560,
          56,
          1080,
          219
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descriptio the exchange API",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7335904,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_4_524",
        "page": 5,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          477
        ],
        "bbox": [
          560,
          352,
          1080,
          829
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Description the price to us price float in the calculation the woe . amountPrecisi: amountPrecision int . to use in the calculation the . maxDecimals 1 maxDecimals int + use in the calculation",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": true,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7335908,
        "is_financial_chart": true,
        "relevance_score": 0.8
      },
      {
        "id": "vector_5_114",
        "page": 6,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          291
        ],
        "bbox": [
          560,
          1337,
          1080,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required D extra speci arams bject No P opsee exche endp params.user string No user @ defau",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7335916,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_5_643",
        "page": 6,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          306
        ],
        "bbox": [
          560,
          56,
          1080,
          362
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descriptio extra parameter specific to params object No the exchange API endpoint",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7335918,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_6_192",
        "page": 7,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          595
        ],
        "bbox": [
          560,
          1033,
          1080,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descriptio unified symbol of . the marke symbol string Yes to fetch the order book for the maximum amount of limit int No an order bool entries to return params object No extra parameter",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": true,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7335923,
        "is_financial_chart": true,
        "relevance_score": 0.8
      },
      {
        "id": "vector_6_615",
        "page": 7,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          216
        ],
        "bbox": [
          560,
          56,
          1080,
          272
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required De this.v if not walle params.type string No [‘spot",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733593,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_7_69",
        "page": 8,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          383,
          269
        ],
        "bbox": [
          562,
          1359,
          945,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "symbols Array<string>",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7335937,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_7_80",
        "page": 8,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          324
        ],
        "bbox": [
          560,
          1304,
          1080,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required symbols Array<string> No",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7335944,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_7_655",
        "page": 8,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          196
        ],
        "bbox": [
          560,
          56,
          1080,
          252
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descriptio specific to the exchange API",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "iVBORw0KGgoAAAANSUhEUgAAAJYAAAA5CAIAAABbKUWOAAARC0lEQVR4nO1caVyc1bl/znlnmBkgMCzDADMsgewJxEBWsmNWExM1al1aa5u2Xu/V6q3e+3P7tbdVa1qr19pal1Stmqg3m4kmmNTswZDEQAh7IBC2YYDZ93m3c+6HFyYTNiFkyIfO/wsvZ855lvOc5TnPed4X2Ww2AEAIQShBCKGUMgwTUi7BEASBYZhQ69UHY68mAMgAICYmJtSqchzH83xUVFRIuQTD5XKpVCqZTDZmHOFmqAkAMtSLkLIZGy43l+PNYjroICWEUACggPEYyUQplXgCAEKAMb7hLERCAADBsIhTSimlg9WkAJSQ4dAhlFJKgQJCCONh9SQFIIQwAxEnhPQZJYOaMFg4KhkTACFEKQUAQIhSioJLenHd9kYIMcw1bWkQb4wQ9HQrDLMj+qNPpxBCEUaolyxCCKD3D6WBnpIURAgRQhHqURkhhIY3yDBC0NsnUsNgOgHV+hCXRJUqIEAAgBAED6mAVAOYkBCKMSo+V37o5JmY6KgH71yTqtUA9AgRsFD/h2Aph6Nbnyaths5te76OVCn9LJeVrrvn9hU9gvfy7u3WEdG+Ch/Lfvj5l4ZO0/KC2SsWzwXoGQrXkkUAQAEQQlV1jY0t7RtXLw38JtUnhGCMfX720ImSO1YvG4KjVPN0aUXRkW+jIlW3r1w8Y3I2obSHDqU4SJvAuEQIeby+XQeO/mjTbRhfoy5C6ODxkgR17OyZUwPDa4BxJJm36Njp1KTETH3q7/7373an60LVJbfHCwDdZmtjS7vT5blY0+BwugHA6fZcamyxO1zN7UZDZ/d193F0lKpgdm5pRS3DYK0mHgF4fH6z1W6y2ivrLhNCEUJdJuvFmoaRUpY0sljtxecublp3698+3nX5ShsvCOfKqzmORwg5XZ6KmgY/y7k9Xp/fz/O8w+lmGMwwDMvxTa2GLpMFAM5frHG6PBhjp8vzzamz+w8Xfx9fAICTZy5ER0Xm5055/g9vN7UYMEKlFXUWmwMjZOg0lVfXi6IIAGWVdcZus5/lrrR1tBu7lcoIQRBsDtfF2gaW5cqr659+6c8mq51hMMIIIVRR22Cy2AeehRKUioiZ0yZl6FO+/ObkoRNnauqveL2+zfdvfOrFP69cPFeXnFTT0GSy2F54YvPzf/ibOmZcq6EzK0Nn7DK/8uxjumTNiOaiVDNeHbtsQf7Jsxfm5+UUHSmeN2v69t1FV9qMXWZLpEqZoUvZtO7WN/7+qVzGTMrKeOSHd5HhbUUBYMyMi44cF6VKiIt1e32/f/NDj8//9bHT929c/dp72zFC6bpkrSY+OTFhYlba7qJjKxfPs9gcX/7z5Af/9+V//duPtu052G22Ekrv27Dy/c/2YYZRKiJgGKuOIkI+ITNt1ZL5tQ3Nx0pKj58pq6lvopRuXL3ko51F2Rm6hLjYbXuKmlo61ixfYOy2nCgpvf+O1cYus6HL9PTv3sjK0ImE6JO1J0rKViya22W2yjCz/YuDp85eIIQ8sfm+QbtApVC8+s4nv31966MPbcrPmZqVnmq2OQydpmkTM5/82f23TJ+UnaG3OVxdJmtUpOq1Xz+ZGK9+5j9+PG1yVlNLO/QO/BFBJIQQ4vZ4E+JitZqEHV8ddnl82Zn6WdMn//Wl/27r6Nrx1Tdenz8hTl3TcAVGvukyGHn97KPPblmQlxMZqTxdWpGeqjV2mz/dd2j10vl/fOGXbo+X5wVAiGEYQojP73e43HaX67GH7ymYnXvweEm6PtnmcH64Y//qZQte/82TCOFhiuFjWQDQxKvbDJ0nSkr1KRqT1WaxORgG506ZIAhic5tx66vPb7qt0GKz/+fPH7itsKDV0MmynFaT8OoLTygjIjQJ6vUrFq1ZtsBidTS3G8+VV7+z5dkVi+ftPXRyUBO6vN4fbFj5zpZn82ZMeeaVv8jlcgpUxjAAIIrkuS1vIYSAgkzGIACO5xFCokhYjgvsmiOF5Cjyguj3s/esX7H1072JCeq0lCSEkcliAwSxMdGJ8eq71i7/1c8fAAAYoQn9LKeJV7+75bmzF6pa2zu1ifHLFuQ/99hP1OOinS53Z7dZGnVOl9vYbfb6/CC55YSKIuE4PipSOX/WjOd/+dOsDJ3N4TR0drvcnuHw5XkBKHU43QePlxTMyWUYnJ877dnHHl6zdMGvn9y8q+joweOn5XK5zeHy+lhCqEhEjuMJpQCgUir8ftbh8kSqlDa7S/pVJmMooVa70+n2qJQRAyykUs+kahMzdCkYI6A0b8aUqrrLaalahSJCl5yEMZ5zy/SqS426lCQZw6SlJmOE0nVamYzRaTXjolQj6tk+yNAnY4x1yRp9SlLO5Gw/yx048m31paa71xXOmTn9f15/7+1Pdq9fsThDn0IJGaZPKEGpVKhjx2Vn6ufOmt5psszLm/HXf+xYOGfmptsKX37zg8PF51KSNMsLZr/8lw9ioqPycqYolQqtJkGliFAplTHjotYsL9j62d4Zk7I3rFz8p3e2lVbWTc5KD7iFA7NEAAD6VO2+f548cebCisVzVy2Zb7LYP9ldNG3i+EVzbvls36G42HFrCxfKZbJHn9uy/tbF6TptdGQkwzBpqVqVUlHf1Prkb1/Pz5m6dnnB3kMnPtq5PyUpMTMtNVWb+MRvXktKiHvqkQfBbrdLYaH+CC53ebyUUlEUr5a4PX1KhgDLsm63ezg1RVEklB4p/m7z0y8Korhz/+Ff/+ldr88fqGCx2YdDx+l08jzfv1xSShBFSqnZahcEkVLKC8L5izWPPPMKpdTt8fKCQK9Vv5e1g2U5SinH85JIfeoMqCYhxO50+/xsoL7N4ZT+tdp7HqRCQRCChaxtuLL56ZfsDlcvcc7j9QV+dbjcIiGUUmS324cZYKP06tJFKUUI0WEvmsOPPEmUi78rj1fHTps4vqXdyPHCxPFpokhGFGQYIsDWI3yvGyIdorxef83lK/k5U3qc9X6qSWcAGNJ/GVpNyf+S2PWRBwaayk6Xp7GlfdaMyYQQhK45XgSIDGVCSmmALO13eA8qQQBXe2Qw9UYUPKTXHgT7PAyobX8MaMJeISUm16gToNlHtUCdYO6BOn0kGVDN/pX70JEmAwT4BsUW+useLLP0IBssphdc2L/CtSUoUDJY544ochio971hhKGIINT/yNErJPSZY4MrO3C1Eak5RMk1AQX0PbzQIBVkPM87nc5QR0EFQRBFUTrDjg38fr903zRmHOFmqAkAMoZhVCpVqE3IcZwgCCrVqJzVEUEURaVSOfaXTaNRM7BU0t6Ibb/gJUjbVnChDCEkl8uvj+VIhRvLDpXJZHK5fIxn4WBqXt3PAODq3gbQu3wO4SIFVxuQpmzo9jcKklscUhY3neMQTPvveX28Fen5TFllTHTU5AmZ2/ccpJSsWjo/WZMwxL4Lg4W5w7hRkKzJcvypc+VtHV0cL1xqbPnuYg0AIIQqahrKq+sRQj4/e7yk1NBpStVq4uNidx84Wt/UmqFPkVbT8ur60opaQggA7Nx/5K2Pdrq9Pqfbc7yk1OnyDBXmDmP0oJQghN//bB8ApKdq9x48ZuyyYAaZLLbEOPX5ylqW5ax2R1OLATNYn5LU2Nwep47xs2ycelzt5WaW41vaO06evTBn5jSOF5SKCJPV1m22ejy+bXuKkpMSz5RVPf6Te8MmDCGkA9+sGZNLyiqlE876lYsy01Lf+Xh3c5tRqYhQx0R3dJkpwE9/sAEAKmobNQlMzpRsjhc08XG1l5urLjX94oE749Qx0iycMSl7QX4OBapUKB68c8272/Zcbm4PmzCEkA7gudMmCILw+b5DWRn6jk5TU6shJSmBUEopFMzOjVQqXt/6acOVtqTEOEEUeF7wc5zPzzIMI4hidFTk8TNlBfk5MeOiVUqFz+9vbu/QaTXdFmtLu9FqdybExYT3whBCclXOX6wtq7p0+8olgKDo2Olus21t4cK1ywvsTtehEyVyueyutcu/OHisqdWQO2VCSnJihj55QqZel6zJTtetX7HIYOw++u15iWB+7lSLzeFjuXWFi3YVHV06P0+foh1BjHQ0CCchAsCuoiNTsjJnTMm+sUzDC2nI0XPSQGhd4SKGwVLMGgAoJQAIY0QI7X9gD24OvUFuiVRQmBdhHPZIxwTSyU+lVFxb2LOLYYyGuPLpE7/tH+YNmzDkkDpdEESW4yQrYowlD1OaRqOkH3ZnQggpUtPRZXK6PTaHc1fRUYyxdLrAPbgBLkh4FoYKtDcp+62PdmGMHrxzTVNL+9uf7E5NSty4eumpc+VVdZfn5+XMmjF5lAHO8CwMFaRrW4zQtImZBfm5CepYQSQbVi6pbrhSXl1/8NjpDF3KR7sOCKO+mQrPwtACIaRSKsen6yJVyvRUrS5Zo0/WGLvNSoUiSRP/0KbbZKO+SwnPwpAjKlL51TenmloN0pHA6fZOykqPjlKZrXbJuxnljUr4aH8jMaCavCCUV9dn6lMi5PLYmGiz1Z4Yr7baHRdrGiZlZeiSNcF5ZdeBsAlvJG7KK6LhhXQsEEg3hd5lM5AOCgCBtyqvD2ETjgUC6X006DmQio4xCr7sD94aB3zukxsQNmHIEZxagYLmnJTd5Gc56e6+f+olBGVXBD9L1AJWDJsw5EAIdXSZLTYHAPj8LMbI52cBwOX2tBo67S7XsdPnDZ0mj9cHADaHs9XQKTX0+dm2ji6Jgs/Pthg6BVFECJksNmO3+Woe6c1R618DUtr82bKqC9WXfH525ZJ5xd+VF+TlllVdWjo/b/uer9P1ycsLZhs6TfsPnzJZbE9svq+ssq6moTkrQ5eh0+4+cCw6KjIzLWXJvFkf7vgKY6xP0c7Jnfr18dOCSArycubOmk4ICc/CkIICwOHiczHRUQBgczg3rFzy9Mtv3rFmaWllbeGiOQ/dvS5SpUzWxD/yw7vi1bE2pzs7I02XrDEYu81WR/7MqU898qDJYj9+pnTZgtmPP3wvz/PHz5TKGFmUStnc3gEAlIZnYeihUiq0moTCRXMS1LGnzl2Ykp1R39Qql8s6TRZBEFiOwwwmhCiU8qq6y5V1l2dOmyQSghDGCPtZDmNECXW43G0dXYIgRiqV8hj5wvxcdew4AGAG/CxGGDcK0na1YdWS8ur6o8Xn243d3RbbH59/vLbhyqzpkxtbDO9//qXX55+QkYYxTk3SZGfoE+LUnSbLpPHpsTFRmgS1TMZoE+MLF85pbG7bf6TY4/OtWjq/pd1YdPRbm8MJQ7/ZdGPxL360p5QKgiiX9xWG4/mIYaTS84JQVllXWdcYHam6b+MqSinPCxERPQ3DC2nIIR0DJPtdGw5Fkv0C7/VJhdL3ZYLf96OEsiw3IVO/cPZMqTBgPwibcAwQ/C5gYLUjlAYWvv7v9QWXSAZbMj9vMPrhvXAsEGw8juddHi8e4dZFCOnN1eiLsAlDC6nfy6rqdu4/AgAdXeYX33h/6/a9/9ix3+PzfbzrwDDpBDI2BvjpRskaxhA4X1Fb/F05ADjd7rRU7a9+8YCx21xaUedwDeuzJ0MjbMIQglLAGFtsjujIyEVzb6m61BgXG2PsNp86V84LQnqqNviV/+tG2IQhhLSKVtQ2lFXW1Te2nDpXroiIcLg8VpvjZ/ffkZyUyPHC6LmEPdIQAiEkElJaUffvP747QR373qdfXKypnzZp/MbVSwHA5nCyHDd6LmEThhAYI14Q169YlJWuA4B7b19BCU3XJYuEYISioyLvWrt89FzC0ZkbicGjMwAj/mbccBHeC0OO3s/99ty2BwdopHyMIdoOJ7ktvJCGHMGf+x3sp8EwnNUxPAtvMqx2p3RfPyDajV3f+yGi/wd3qXP1btjeqAAAAABJRU5ErkJggg==",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733595,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_8_516",
        "page": 9,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          210,
          250
        ],
        "bbox": [
          735,
          253,
          945,
          503
        ],
        "quality_score": 0.5,
        "ocr_text": "object",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7335954,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_8_530",
        "page": 9,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          598
        ],
        "bbox": [
          560,
          56,
          1080,
          654
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required params object No params.type string No",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "iVBORw0KGgoAAAANSUhEUgAAAIIAAACWCAIAAACdJscnAAAQQUlEQVR4nO2daWwc133A35uZPbnL5bkkxVMiKYqSaB22jsiSKNk6YzuWKsdB6hhF2gRJiiIIUKD+UgTIhyAo3KJnUARRG9eGrVi1U8mKbN0XSVESSYkURVEUxWN5i1xy752d671+eLsr3qa41wPyfh+o0ezse/95vzl3d/5/6Ha7OY4DqUNRFEEQIIQpjGEhMMaapgmCkOiOBJ7nLRZLortZBL/fbzabU7spLARCSBTFtLS0RHf0HJ41hAAGHAfp2XIxxghjMs3BZASGMUAIAQg4jlu8M4QwhGDekBDG3Mz5z6GBj2ywGGMAAIQQk7ggJH9h5CVCEgYFQsjP7CUaAOkdYxzfMCAEPP9sx422P31MIAAYA6Lp2fxpS3JzQlqqBlVVr9266/MHX3n5JZs1fBCDJK7o35lDTwJKEGStnC737bsdRoNeUdUXa6pzszOiAZAF4r4pBMXQtZstHM+9unOLwPOk/elbN/kHQnC/s7u0sMCWHhmraUv2OIZW5OWajIZos19/RCY+h0YnPv/ySlAM/cOv/2d4bKJ/aBQAIIak4bFxl8fX0z8UkmQMwNjE5Pika2LS5ZxyJ+HIhTTkcnt/+8mpXseQLMuahrw+v9PldgyPkdXu7htUNQ0AgL+uqa/vCyEAQEv7o7qm1se9juOfnIIQdvU4VE3jIBwYHnO63JqGxJCkqKoYknr6h7z+gMvjGxuf1DStu28QAMBBODjy9N/++9MptxdM23eXujcgjEpW5O/d8eK1xparN5tb7j86tGd7/9Boj2No/65tt1s7zEZjeVnh5bomDIDJaEAI/f1P/zLDZo37YYFAdn97Ttb3jh2emHLl5+U86OoZm5j8+NR5vSAERPFbB2qdU66bze35uVnv/fVf8DwH4hEGB2GG1WLPyQoEQydOnW9obltVUlRalH+z+T7k4L6dW90e39rVK5taO9OtZpfH94t/Pl67fZNzyt07MLxh7Wp7duaNW3e9Pr9ON2Pkl3p9YjQY2juf/PqDz37450cK7Dkmo35obAJj/ON3j5UWFeRmZTinXOMTU2+/se/lLS+8eWB3RVnR2MRk7Ku9OBhjfyDo9flrqsrrm9putrSXFRXUfmPzL/72Rxeu36q73VpdWcbzPEIofCaLGYNe1zMw/MWFuldefulqY/P6qnIxFLrS0PxPP/9ZeWmRc8ot8LzZZJQVxeXxuj3eNRWlb+zfdftex4a1lV6f/1pjyz/+/Geba9aEJGl6s0vVEBTF8rKiX773k7Kigo8+PyvJiqZpqqbJsvLxqXN9g6MAAISxLCuSJKuqKoak6afrBAEh5Hne5fFVrizJyrQNjoxt3bjuXkfXJ6fObVhbWVRgN+h0B2u36/U6EKcTldvr/8bmmr/5/rc/OHmmMM+u0+nePFibl5v1wckz3X0Dhfn29q6ez7+8KoYkTUMI4VBI4jjOnpOZZjK9vm9XdlbGh5+dbe3onnWB/vUHJXJIyc/N/vbrryKEcrIyfvDdI5Nu7/qqckVRilfk/fC7Rxrvtq8qWZFuSUu3WlaWFKaZjfn2nAJ7Dkjk9RJpV68T3j32TYSQ0aDfvX2TXic8etL/Z4f2HjlYOzYx9cXFG4qqxqc7CAEAL1RXFBbYqyvKeI7Ly8m6WHdHUdSfvHvszKU656RnXdUqWVG8Pv+LL1Qrippps2Zn2dItaT/9/ncu1t8BAPzonaNnLtW9c/Rgli2dNBpu3efz4ZTi8/k0TYuxkSm391+On5AV5cGjJ40t7Rjj2Nskjfj9/rnzEUJzZ56+cN3pci+vI+jz+ZZyF02WJrtS9D4uerdADr7Tt3xytbqUXSH2u2iE0Ky3axrieY6MF4Rw2Y3PvYvGGGMAOAgRQgBCjBCEHIQAIcTzPIgMDuQgCN9AYI7jEMIYh4Mkb5x197fUK6Xp1+DR+7jotTKJYMbyz7O2MR64wqsXuXjHOHyHRc4csbQ8N7DoKITVRtrneR5jDCHkZyoni3McBODZknM7EhRF8fl8scQaI5IkhXcm+sAYK4pC7hgSiiAIQmo/2gMAsI/2hETc8T8XMEIKY1iIpMVG4zb4JwjTQAVMAxUwDVTANFAB00AFTAMVMA1UwDRQAdNABUwDFTANVMA0UAHTQAVMAxUwDVTANFAB00AFTAMVMA1UwDRQAdNABUwDFTANVMA0UAHTQAVMAxUwDVTANFAB00AFTAMVMA1UIJDn9FIYQcoDWATyxGcyHrrSNC0YDCa6m0WQZRkkJd3MMiDPviWho9Q/+wYhNJvN1GoQRdFsNie6o9SfG8gT16mOYn6SFlvqNTAA00AJTAMVMA1UwDRQAdNABUwDFTANVMA0UAHTQAVMAxUwDVTANFAB00AFTAMVMA1UwDRQAdNABUwDFTANVMA0UAHTQAVMAxUwDVTANDwfGANSdzG+vySbR0P0x7PPJgAgVVTI38hL4TkAABSZSAjT13ahXjCOQ2m3JQAh4GC4jAupbYgQil3HPBqiVVieTYBwKdBoQdDoNKmNwkUm4gnGAGGASLHLyECTXsj86AKkIGZSfgQ76fJ09TggBE/6h5xTbjJEsf/+drYGjHH/4Oidex2apj2dmLp970FIkgNi6OHjvqfOqbsPuoZGxwHAT/oHH3T19A4MP+jqAQD0Dgy3PeyO8889IQQcBBz0fHkfKyoZaLFzBAUkMj+6AIBQdfqxFJ+KVgtB1s4XCP7y338XFEOdT/rHJqZ8gWB9U2tQDIFpJQ2XwbPaPqQ0zcSU6+NT56pWlTqGRndu3Xi/88m402UyGhxDo6/v2+lyexvutG7ZuLa1oxshZDDoNU2TZPn0+RtvHthNNso4gDGAUB5yOT+6mXG4RuwY8VzptP94L1C1id9cL/rVW8F7Du+1R9nf2SY+Gg3cdWS9vWXs/a+EbEvB3x3mTAYAEliMlOO4DdWVZy/Xp1stCGl/vFSvE/iTZy5979hhPoaCLLPfGRSlDWsr33rtldFxZ3f/oM2aRlTv273N4wsoqsrzfCAY2rR+9c6tG7dtWldVXqYTdG/s3/WoxxGS4lRyDwEAwOTvb6fvWeO70QUAzjq62fWHFn1pNp9tUcY8E79rkEfck5/eER+OZByuARo21RTbDtZwZgPAOKFHp0BA3LC2sqKs+IsL18WQpKrqW6+9KslyUAzFUmhxtgaT0XDvQdfH/3euevXK7t6BSbfXajFzHIcQ6h0Y7hsYMRr0RoNe1ZCsKKqmIYRkRQmKocGRp6IkkbNWjKtKxtFYaffVPxayLVAveK506vLTOZNesJmgjjdW2oUsi2VHOeSg99ojzqQzFGf56h5rHhHAeJRhXRidTgiGQpvWV60qKUy3Wgx6/fETp7IybBazCWO8/A0gWn6PPGA0NPr0/f/8aGB4DGPsDwQHR54qqipJsqKqGOPBkac+f0BWFFlWFEVVFJVUn+zuG5hye5dXeW6R8nvB9iEUUlSvGLjnQLLqa+geeO9/taCEZDXYPoQ0TfUEgw+GMcZIUYMPhjRRXl4MCzG3/J6qaiFJQghpCKmapqhqV48j9lJ/s8vvBcWQzx/Iy82eW9MuQSy9/J7kmOTNeiHXmoSoCCkrYm82Gc0mI8aY4zhyhzCjEnek7uEscKRGeJyjQxhwkatVDhpKs+d5CUQuDMicpIPjUYl5niqI0XZhuKDiMxbqL1FPrpFhhZF6i+SsQ6ajL0UjTIUDEKd1n0cDnU8DAgDidDlMI+wzJSpgGqiAaaACpoEKmAYqYBqogGmgAqaBCpgGKmAaqIBpoAKmgQqYBipgGqiAaaACpoEKmAYqYBqogGmgAqaBCpgGKmAaqCD1GsjzGqmOYn6SFpuAEEpOUvaFUFVVluXk/FDzeUEIqaqahPEREEIkdX+qIOtJ5w6BMSZbSaI7EnQ6XRJ+Krs4KQ9gEYLBYDIKB+BUJ+3H1FczSUJHNB6R/wRhGqiAaaACpoEKmAYqYBqogGmgAqaBCpgGKmAaqIBpoAKmgQqYBipgGqiAaaACpoEK4q8h5d8jJRqygvFdyXlSl5DvwsiXwwhjkleRpJWJJuyZPtYk9xgA4eST0xdD4bycGEDIQUhafo5v/zEAcGbOSTwnj150ztyXEgNZQRgZFjId43fp84wIx3Ecye4JIR+ZIHOiL3HTiLwlHIfH54+GRRKDcpEcmdHll0Q0ax7JMBkegzmLwUhy1gQ7INvW4MjTz85egRA2NLf1DoxERybGxmfvDbKiXK5vck65X925VRRDd1o7dm3bhBBqud+5fk3F416HzWqtqS5vaGoLBENWizkohg7Wbq9vauUgt2/XVsfw2L8eP/Havl3FBfaKsuK2zscY4Y7HvTVrKtZXlV+4cVsQ+L07XtTrdF8fGoSaV+TMBnXCG2gbTK+t4kx6zSNCgdMCcrDVYTuwHoUULKt8uglLKgopvM0U43AsISj4h6+uvrShOhAMhSSpq8dRd+de7fbNlStLYslvNTsB6LjT1dXrOLRnx9nL9UcO1WKMG5rbbFaLwaAvzM+ddLkbW9olRfYHREHgJUlGCN3v7G5qfXjk0B4Ioc2aVlVRVl1Reu7aLX9QHBgac7rcO7dsuNPa8bjX4fb6XR5fYX7u+qry6OFuLhhhyMFAc7/zw4aM1zdiWRn/zXXjqlx5xD154lbuX+1Wx33B9kHrrtUjvzoLec62f12gdUB6Mp77g92mtSsSmmZMlpVvHdjV0NQGIMjOtHV09ezdseXC9cbiFflGg37Zzc4+RCCMy4oKSlbkSZJ84fptDSGAMQe5dVXljS3tfYMjer0eYFxYYC8rLlhZWmhLt1rSzO8e++YfL9WPTUzqBJ1O4Avz7eUlhWcv12/bvC4701ZSmG8w6IOilGmzHj20Z1VJIQBgkVS+4UO9rPLpJuWpJ+2llemvrDGuzpcHJrPf3mrZusryciUUeNXpF3Kttv3rXKfv6Qts1toqxelb9kAskZAkW8zm/bu2nr/aqGmapqGyonwOcpqmgRjO27M1GA36m83tJ89cPLhne2a6FWFcXlqUk52h1wm52RmKopWsyMvLzbZZ0yxms9lotGdnchzX0v5o9aqS7r7B0fEJa5q5oaltw7rVgiDk23O6+wb/6/enK8uKjx7aExBDvQPDSzoiAcBnmKFRB3mOTzdp3pCvodu4Ol/ItgAMvFceSv3OYNugaU0BNAq2A+vlUc/kJ42C1bjccVgqtnRLps1qz8l65+ihgrzcypXF//HByZrqirT4JgAdHhv/9PSF581fKSvK9P8ihM5crLvT2oExPnH6vBiSoi+RRKLTWSQBKFK0+afJ8hoK/19DEx82jLz/leoTMcYY4XgxNwFoOACE5p1eNrMTgCKENaTpBAHNdBu9SsMzbgvCyWfD8yGEkXOM2+vLSLcCABRF1ekEvHBqygUTgJJc09MzTi9ytZoY5k0AGh2HWX9j6Wj2lRLHQY4TwHzH7miu+lmzp78anSAOAAA6nTDfu5YAecv0N857tRoFYwCSkbd++jgsMCbPTaI+zEjBrXSyagckgkRpoPIH2vTCPtqjAqaBCpgGKmAaqIBpoAKmgQqYBir4f27thgcR2X+HAAAAAElFTkSuQmCC",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7335958,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_9_123",
        "page": 10,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          390
        ],
        "bbox": [
          560,
          1238,
          1080,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Desc unifie symb . then symbol string Yes to fet OHLC data timeframe string Yes the L of tin each",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7335963,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_9_559",
        "page": 10,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          347,
          217
        ],
        "bbox": [
          691,
          187,
          1038,
          404
        ],
        "quality_score": 0.5,
        "ocr_text": "object No",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7335973,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_9_572",
        "page": 10,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          348
        ],
        "bbox": [
          560,
          56,
          1080,
          404
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required De m sy 2 pe SF params object No th 2 Al",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7335978,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_10_297",
        "page": 11,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          212,
          401
        ],
        "bbox": [
          868,
          655,
          1080,
          1056
        ],
        "quality_score": 0.5,
        "ocr_text": "extra parar speci No the exch API endp time: in ms No the L cand",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7335982,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_10_403",
        "page": 11,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          1000
        ],
        "bbox": [
          560,
          56,
          1080,
          1056
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Desc cand repre supp ‘4m’, “thi” times in ms since int No thee cand fetch the maxi limit int No amot cand fetch extra parar speci params object No the exchi API endp times in ms params.until int No the li cand",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7335985,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_11_127",
        "page": 12,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          208,
          249
        ],
        "bbox": [
          562,
          993,
          770,
          1242
        ],
        "quality_score": 0.5,
        "ocr_text": "params",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733599,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_11_177",
        "page": 12,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          1177
        ],
        "bbox": [
          560,
          451,
          1080,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Di ur symbol string Yes m sy th . tir since int No to tr th m ae ne limit int No tr st to ex pe sp params object No th ex rN er tir arams.until int No in p . in th tr wi ac params.address string No th tr params.user string No wi ac",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7335992,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_12_108",
        "page": 13,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          759
        ],
        "bbox": [
          560,
          833,
          1080,
          1592
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required symbol string Yes type string Yes side string Yes amount float Yes price float No params object No params.timelnForce string No params.postOnly bool No params.reduceOnly bool No",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": true,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7335997,
        "is_financial_chart": true,
        "relevance_score": 0.8
      },
      {
        "id": "vector_13_140",
        "page": 14,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          220,
          406
        ],
        "bbox": [
          601,
          1222,
          821,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "iVBORw0KGgoAAAANSUhEUgAAAFEAAACWCAIAAAApAPNtAAACSUlEQVR4nO3WMY7qMBSF4bHjJCAoKBBKCzWBJbAMVskyEOwAiYoqCRISEEARcbBfYQ0LePHMIJ3zFZT2/SGOEcaY2+22Xq+LojDGfLUmhNBaTyaT0+l0v9+llO3XbDlP0zTj8TiKovl8PhgMVFmWq9Uqy7IwDH3tUdd1kiSXy+V8PgdB4GXZNvNorZMk2e12+/1+uVyqzWaTZVmv1/PyI7s9jDFCiCAIlFKf0GytFUJ0u90syzabjcrzPIoiY4y11tc2bin7zdey7eeJoijPcxmGofsa/nqw32CMCcNQpWl6OByklL4eQiGElNJ9Ol6WbT+PMaZpmul0qtI0vV6v2+22qiovz6EQ4vl8aq2rqno8Hkqp9mu2nKeua621EGKxWMxmM6G1VkoVRXE8Hn1tY62N47hpmtfr9Qmnxp3k4XA4Go2aphFaa2utr4vqrSzLfr//5w/2W1mWnU7HzaO+vm8wjy9YKaV7tqMo+oT3tptHKRXHsbX2R+5PdzmHYeguBe/r/8c8Ukr3Z8Faq37uvLmVP+E8O+95PuW8/SY2Y2AzBjZjYDMGNmNgMwY2Y2AzBjZjYDMGNmNgMwY2Y2AzBjZjYDMGNmNgMwY2Y2AzBjZjYDMGNmNgMwY2Y2AzBjZjYDMGNmNgMwY2Y2AzBjZjYDMGNmNgMwY2Y2AzBjZjYDMGNmNgMwY2Y2AzBjZjYDMGNmNgMwY2Y2AzBjZjYDMGNmNgMwY2Y2AzBjZjYDMGNmNgMwY2Y2AzBjZjYDMGNmNgMwY2Y2AzBsTmf1xP1GbOM/F5AAAAAElFTkSuQmCC",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336001,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_13_190",
        "page": 14,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          526
        ],
        "bbox": [
          560,
          1102,
          1080,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descriptio orders Array Yes list of = orders tB create, eac object should contain th parameter required b createOrd namely symbol, type, side, amount,",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336006,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_13_485",
        "page": 14,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          365
        ],
        "bbox": [
          560,
          56,
          1080,
          421
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required params.triggerPrice float No params.clientOrderld string No params.slippage string No params.vaultAddress string No",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": true,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336013,
        "is_financial_chart": true,
        "relevance_score": 0.8
      },
      {
        "id": "vector_14_104",
        "page": 15,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          521,
          339
        ],
        "bbox": [
          560,
          1084,
          1081,
          1423
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Description list of orders to create, each object should contain the orders Array parameters required by createOrder, namely symbol, type, side, amount, price and params",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": true,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336018,
        "is_financial_chart": true,
        "relevance_score": 0.8
      },
      {
        "id": "vector_14_431",
        "page": 15,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          266,
          217
        ],
        "bbox": [
          682,
          187,
          948,
          404
        ],
        "quality_score": 0.5,
        "ocr_text": "object No",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336023,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_14_466",
        "page": 15,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          348
        ],
        "bbox": [
          560,
          56,
          1080,
          404
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descriptio price and params extra parameter specific to params object No the exchange API",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": true,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733603,
        "is_financial_chart": true,
        "relevance_score": 0.8
      },
      {
        "id": "vector_15_248",
        "page": 16,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          450
        ],
        "bbox": [
          560,
          638,
          1080,
          1088
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required id string Yes symbol string Yes params object No params.clientOrderld string No params.vaultAddress string No",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336032,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_16_436",
        "page": 17,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          417
        ],
        "bbox": [
          560,
          382,
          1080,
          799
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type R ids Array<string> Ye symbol string N params object N . strin params.clientOrderld ing » . N Array<string> params.vaultAddress string N",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733604,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_17_287",
        "page": 18,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          254,
          698
        ],
        "bbox": [
          826,
          175,
          1080,
          873
        ],
        "quality_score": 0.5,
        "ocr_text": "Array<CancellationR object",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "iVBORw0KGgoAAAANSUhEUgAAADcAAACWCAIAAAD1+YdaAAAFIUlEQVR4nO3cTW8bRRjA8efZsb1x3NhJmjRtQiGhaktpi0CtkJAQLwJVQkJCqsSJD8B34MQ3QNw4AAekigMSKggOLUiU0lIk2rTQF0jSqglOUid+jdfr9e7MznBYO3GTuk3LkzRCz//g2N7x7C+2dq1IO0Hf94UQsLWLCSG2vtJ63IB1xUq6WEkXK+liJV2spIuVdLGSLlbSxUq6WEkXK+liJV2spIuVdLGSLlbSxUq6WEkXK+liJV2spIuVdLGSLlbStVlKA2AMQOv2IeugbJ/UrHkYDWiONCt3Vsa0gaKHCIAI0Lpd3qrNypyrdrfyZCdl+6S45mE0oDkSTagh1IDYNqYNhAiIquSqUg0MBPMV7auVrRauzGnMXbtDaI1cq9QGDDg/T1S+/wMAGhM5lXfCpXpjIqfrQTBbCp2GCUJdD6J5g2wp/+nZ/Oe/qEItyJZMqP3pgsw7AODdmAdjVKGmynU5X1785AxoU/76Uu3cpJGhfztvlC6fHPduzKu8U/7mMiAG2ZIquWGt4d/OB3Pl3EenSl/9rl0/tvajRgTn3KRROnlgOP/Z2cH3X6ucvJwYGwhdv3jiQvdzu9GOAYDoSbrjM8l9Q/boQPqNA86Zicqpq6nnnwzmKiKTtFI2Aqi8s3T6GnbFhz94276SBYE9r+zXru/fWsx9/MP2916qj8+ITLfYZgezpWCuXP72cizTrcqubsj4zl7TkDLvFE5cuPu9NAYtVAUHEEUm6Y7PZN463LVnByZE//EjarEqF6rxobT2pSq53YdH7N39saG0P11YOn3dz5Z0PfBnit0vPBkf7JF3KqI/pQOlPWnv7vcnF2oXb/szRffStHd11pvMaTcwvky9+DQYg3Y8mCt7V2ctO659CcLqeXlfWHFFX0r0dIWOj0qpVdcThU4DEKy4kAVXpBIik5QL1fhgT1j1vImcPTZY+e5K+s2D9lPbo/HeX/MIEN/V25haiA/3WskEGINxUf9zNnV0VM5XwELLjjWmFuzRAVVyjdKJJ/r8bDG5d6cJTZAtxga2NW4uJp8dVoWalUzE+lNGa+NJ0dutPYkC76F8QNrIvBMfSjcPQwsf/JL/XAelWf6BgK2jLzpBRKzomZYbEACwecYBbL4++h2aW1uviGbG1hHQ3NC2tTlDa+9gOivvXztxU3qk757NJQJ/j1PGSrpYSRcr6WIlXayki5V0sZIuVtLFSrpYSRcr6WIlXayki5V0sZIuVtLFSrpYSRcr6WIlXayki5V0sZKumOd5lrXVrSil3Pr/UyeGiLjpVzg8bFv9s45iJV2spIuVdLGSLlbSxUq6/k/KlRUKdz+pH2VRxCO0DuXyKojozvLCCdykC6yhk1L7EkJd/elv79ocIMo7lfqVfwBRNyQgmiA0gVKVujs+Y1S4CcrVKxQAQNf84pe/ib6UKtSqP97of/eony3pqgfCKnxxPnPskMwtiXTSSibKJ8dHPnwnPpgGaFv/sQGtXqEAADJf1YEyMpR5x9471Li1mDl2CISoX5w2Mgxmiroh4zvS9thA8tBIdKX/hhJh9XuJCAbsscHkwRErEUsdGXV+vZl+/UDt/JSRqu/4EdHX3fPqfu/6vPYCe88OezInc0ti79BGX8G+rqvqa+enup7ZFdu+beMc96+DMjrFIBht0GqtKjJgjMZoqQK0rT7Y+D9B73H0NAUAAIACm2gEQES0Iv2qYRtdB+WqNkvTcf+Pd/frjJV0sZIuVtLFSrpYSRcr6foXKLFwpSM//ssAAAAASUVORK5CYII=",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336044,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_17_288",
        "page": 18,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          263,
          514
        ],
        "bbox": [
          562,
          175,
          825,
          689
        ],
        "quality_score": 0.5,
        "ocr_text": "orders",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "iVBORw0KGgoAAAANSUhEUgAAAE0AAACWCAIAAAAUkpILAAADDUlEQVR4nO3c20vTYRzH8ef7bNmFh0Xn7EBSNiSLzhZIJBElQZQFXRRd1l9V0E10BDvSAUMkKC9UQgyphS5PWdrUNt38zefbxa8NpWEI5danz+vq2W+/wfNmv2e/3Tw/SSaTgUDAoJN0Ov0/dFpVzfccFoPN9wQWCTuxsBMLO7GwEws7sbATCzuxsBMLO7GwEws7sbATCzuxsBMLO7GwEws7sbATCzuxsBMLO7GwEws7sbATCzuxsBMLO7GwEws7sbATCzuxsBMLO7EsrNO5f3Uzd+5O59Tfn65qMgNVVWvFHzvn/DM1I3ukMOXoVDXWioioqogREWOMiIhI8+s2VRURa39+UDKyRwpTjsmJmLfvPkT7h0QkMTnVHelNpqYnvida3rQ3v24Tkdj4RGtHl5dOG2OiA5/7h77EE5Nv2jsn4gljTGE+qCA4+4Vzzlp7++GLsYn4yLexhvq6ltYOz0sfrd1//3nLutUrgoHAaGz8+p1Hy5eFOrsjNbu3X7v14NLZk1dv3t8R3rqxfE1ZSXG+SuY35/u01qrq+56+yxfOnD5+pLWjq6hoyZWLDX2Dw3uqw5fOnVy/dnV3pPfraGzl8pCqjsbG6w7t210dLl+zaiqVCpWW+ld1vmLmMafTn6UY0/NpMBLtW1ZW4nnpse/xpUVLogNDQ8MjfYPDobKS0uLiXdu3XThzQkTik1NO9WJDfTKVutH4VERmZmbyFTOPHOvz/Kljjc+av4zEjh2u2bp5QzBgD+7Z4Zx71PRq786q6vCWqsqKu4+bPvb2b1q/trJioxW59+Tl9LR3tPaAMaYwf5DE87xgMPj7E/9xOQqzd04RUaNWxBjjnIoYVbXWOudmL0L/DpQdL8q0FyxHZ+aGaYwxYn7O2/+H4L/165VZsHlZhbiW/gZ2YmEnFnZiYScWdmJhJxZ2YmEnFnZiYScWdmJhJxZ2YmEnFnZiYScWdmJhJxZ2YmEnFnZiYScWdmJhJxZ2YmEnFnZiYScWdmJhJxZ2YmEnFnZisYW/tfqPCHqeV+CPmvkjfgAhIgkofXWRjwAAAABJRU5ErkJggg==",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336047,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_17_294",
        "page": 18,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          840
        ],
        "bbox": [
          560,
          121,
          1080,
          961
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type orders Array<CancellationR params object params.vaultAddress string",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336051,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_18_78",
        "page": 19,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          299
        ],
        "bbox": [
          560,
          1313,
          1080,
          1612
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required id string Yes symbol string Yes type string Yes side string Yes",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336056,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_18_351",
        "page": 19,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          263,
          250
        ],
        "bbox": [
          562,
          295,
          825,
          545
        ],
        "quality_score": 0.5,
        "ocr_text": "params",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336063,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_18_367",
        "page": 19,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          576
        ],
        "bbox": [
          560,
          56,
          1080,
          632
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required timeout number Yes params object No params.vaultAddress string No",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336068,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_19_376",
        "page": 20,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          825
        ],
        "bbox": [
          560,
          56,
          1080,
          881
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required amount float Yes price float No params object No params.timelnForce string No params.postOnly bool No params.reduceOnly bool No params.triggerPrice float No params.clientOrderld string No params.vaultAddress string No",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": true,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336075,
        "is_financial_chart": true,
        "relevance_score": 0.8
      },
      {
        "id": "vector_20_77",
        "page": 21,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          174
        ],
        "bbox": [
          560,
          1412,
          1080,
          1586
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required __ Descri The nz name string Yes of the vault",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336078,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_20_420",
        "page": 21,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          821
        ],
        "bbox": [
          560,
          56,
          1080,
          877
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descriptio list of orders to create, eac object should contain th parameter orders Array Yes required b createOrd namely symbol, type, side, amount, price and params extra parameter specific to params object No the exchange API endpoint",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": true,
        "base64_thumbnail": "iVBORw0KGgoAAAANSUhEUgAAAF8AAACWCAIAAAA3ycPeAAAdwUlEQVR4nO19V3NkyZVe5vXlvS+g4NFooN20m57hOO6QM1SMuEspKOlBipD0ohf9Af0MRUgvUmxIsauHjaXRUjRDzgx72NPTPe270Q1fMAWU9/b6ezP1cIFCoWAGDTQZjNs8gSjcqsp7buapk+dLc85J2G63SZIEJyIIIUJI13WapjHGJ2Ni8NF1HSF0Sj4GK03TAAAURZ2SFQCAIknSYrF032MAAMYQwmPejxBSFIXjuP1fGZU7JitN03RdZ1n2BPcCADAA3aKapiGEGIY5WU16iep7DwEAEAIAkCF4bLwzpLZTBu4+6Yjfp1sGYWzwwRgACOBBFe3js3svwjvV2v5vfIUQhrBbK0wQxGGsutyMz/HOb2/UBWNk3GtUkiB26wwB6Gf62a17f/sP/y9bLBMQEhASBDTIuDb+jv4RDD7rW9n//r9/8vc/+1QQpS4fgoAGvyNuBwCIsvz3P/vNLz+/jTDefijc/oMQCqL0fCG5zXC7VsSj54v1ZruPD0IIADC7kPyvf/sPXz94tt2QnSYZ7SAIYi2VyRUrBqt2R2i2+dmFpFFoV3eMSqcyeafD9pNffREPB4N+bzpXHIyGN9LZc2fG5pbXeEGEEP7oBx8EfR58SAc0jFEsHAz43OlcKVsob2byC8mNeCR4Zmzo17//+p998Nb05CjCmDhETI1mJ1so15vtL+88ml9e+871i6sbGUVVx4biXrczV6xomv5/fv7pYCy8mNwYGohijH/75d3/8p//w77fCQAAVta3rl6YSqYyCKGF5MZoIp7OF69dmH6+tBr0e4rlGk1R0ZD/l59/FQn6ny8mB2PhoYHorXtPXiyt9etOvdkSBOnNS+cWV1Off3UfQsBxzNJq6ubdRzRFcSwLIVxLZcCRfQoAwDK0y+mYGh/6xWe3ZheT0ZBf07T/9r/+URTlcq0BwG4/3U8MQ+VLFZKAz5eSHUH84vYDhqF0Hd17MpfOl1bWt9a3sgCDcrWeyuQfzi7UG63rl2ZEWT6QGyRgNBQIB3y/vnk3X6pU601N039z847Vwp0/My5KUiwceDK3lIhHGq02Q9MXpieeL64ur25enJ7YlY6hCONDg//x3/zQbrMoijo5mpgYSbQ6PMey40MDI4PRiZHBieFBl8MOjjZyEAIAGJo+PzVOU9T5M2OzC0lIEP/6h9/zepyTo4mdIgeTpun/4gcfXJiedFitsXDgo/dupHOlrVwhHgk9erYwPBiNhvyJgciVC2dDfu9H774pyUq+XHU5bPuqAQAAPrfz7372G4TQv/uXP/C4HDNnRi0cGwx4G832N0+eT0+O+jyucMB/5+Gs3+e5MD3+bG5lemIkFPA+ml0AgiDgvaTrOsZY0/TuJ6qq4kNI0zRRFPd/jhDCGFfrzV98dqtSrf/y89s6QhjjDi+omra/vKIokiTt/7zNCwhhRVF/8btboiTJstLLXxQlVdU0XVcUtZeVLMu9Nenw220UREmSZeOtoqqiuP3E9c3MF7fvd8t0L6Aoigfi8TEJIaSqaheJ+6gXaI+m/TB8YtI0DWNM0/TpWVGqqvbBIYQQf9s4qtutdF3XNO3AXnYEq/3lDel0bzxO1fcx3+ZqsOp+1b04Trv6iIJ7Ida4Pv7AiSAIAyMPrP3xWXXhFr/MWPSw5xq1wvsGgS87IKQoijqNEho/+OnV2BgHUFT/6PRkrDDGr4QV8bLK1keGATt9PV4VnwNZabp+GHOMsa6jw1gRh31hDmq1O49fLGXzZV6UeEHcSOcKpSoAAGHc6vCCKP3dT3/d6vAYgwOl9wrU78+ZNE1vd3inzXr30SxBEM1Wx2m3hYO++09eVOtNgiAwBi6HHYCDjZ3JdQdAIMlKOl+KBP2djkBR5GAsDAAoVxuRoL/Ni1PjwwRxKJaZXHdcDofP4wr4PCRBhII+v8fdaLUBABdnJpZXN7/71mVFVcHhWAYFQehd33lZ0nVdVdXTjCcNUlUVIXTYqPJlWWGMX3ZguR/+gel71v4xIdiZ/+poD1T1jvu6hU0uHQihrKiqqkEIJVnRdXT30fNWqy3LCkkQsqJqmi6IEgCgVK1nC2WEEC9KXTGZ2e5gjFsd/ta9JzaLRdM1m8WiatpWrigrytpmZjQRlyRF0TSOoT96/8bzhWS10UxEw+l86Z1rF8NBH8bYzLoDIaw3WhzDMgxVLNei4YAkK1OjQ/PL65FggKFpp8N2+dyZbKGsqtpALBQNBjqCGAsHMvkiAABjU/csjPFALGy1sjaL5YO3rkSDAb/XLSvqjz5+3+20jw3HRxMxCMHQQJQgiYDXQ9NkLBzkRenc1BgAgCDgXzDrKDKz7gBwwPzA2OTYA2E7exXdi+6ryaUDIVBUVZRkHSGEkKppBAFFSQYAbGbysqLqOtpdaYHQgHlRkiGEkiSbG7OAIIo37zyaGBlcTaV9Hvfc8tqFs+MQwlyhXKrWz0+NrW1mHDbrJx++o+n6p1/ebTTb33376r0nLwai4XqzZWbdgRCUa3WCIOLREMexoizTFEVAuLGVqzVaI4MxWVaaLT4U8KmaJsvqWioTjwRXU+lmqzO7sOJ1O82tO3ggEkql88n1zTOjCbvVSkAYDQcbrc70xIiqaSRBXJye8Hlcdx7Ovnv90vtvvkEzNEmQiqKenRheWd/6C2YBAAAviDbrAUIws+6ALjbtTA10hAwfCkgQCCFyZ7vBEI2xdw66+wWvAWZBTdcxQi+WViu1BgHhZrZAEARGiCQIUZLLtUapWsfGyBjuOA0QxPZGu4l7Fsa4I4hf3n1kt1pb7U6rw0+ND7M0XahUS+X6+MiAKMmtNi8pyr/65MMD90LMrDsQwkqtYWFZhqbavHBpZjJbKJeq9dWNdGIgktxIz0yOTowMjgzEwEHjRmBu6RiYRVMUyzLXL81sZQvnzowACN6+etFm4b73zvUnL5ZYlhEkCWPc9dzpJTP3rP1fVevNSq1huDn00mFbjKbHrF1nD4yxz+PyeVwIob5N18PWlc3cswAAEAKEULFce764ahgWSVaMjRoI4fzKeqPVRgh98/hF30KqQSbXnWa789sv785Mjt15NFuu1v1e9/pWdiASdDkdBAFT6RxFkfefzmfypWuXpvffbmbdwRhzLGOzWpfWUtcuTFMk8XR+eXI0Mb+ykSuW11IZHaHVjbTDbo2FA5qm7+dgZt2BEBKQcNitPtoVDfs1zRMM+FbWtz5+/8bSWspiYSMhv6Jq9WbLZuEY+gBRvF6YdRzChk0CAJhbd8D2GG/PMmB3rcuQAt42xpAgIAZ7fKlNvuoOdhzPkTHz3PaeAgCAQrmq6wjpSNPRVq5AEBAhBAGQFaXaaC6tbVZqDQhN3bMwxqIk37zzKDEQyRXKFEk67Nb1zWw46Jtf2fjRx+89eDY/PjSo6VqpUq/Um//8w3carfavfv/1UCySzhcvn58yc8+CEBbLNZah/W5XvlhhGHp+ef2tK+cXkhvnp8bqzXahVGUZBunIarUMxsL5YjkeDZ0ZTVg4Nhz05UtVM0sHYxyLBFc2tmrNFsvQBITvvfmG1cKdOzNaKNeq9eZgLDw5klA0lWMYgiAsHMsyNNIRx7LhoN9m4czcs07PyuRWGeM9+1O7Tr8AGF67Ox7fu7iGtku+HvtZXQg3Jp8AAF3XIQDdYBsj+AcAoCNUqTeM2BbDIczMdgcAIIjS57fvW1j24vTk/Wdz8UiwUm0MDUSX1lKJWHhtM6uqWsDnCQd9s/MrFgvXbHcuTU+8WFwdjEfabd7k0ml3eKfDDgB+OLvQbLWrteb5s2PNdidfrPC8OBgLd3iBIsmbXz+IhgJupz0c9M0trdksXLlWH4pFTC4dhmHmltZuXD7ncth1pCdikVDAm9rKDcbCA5GQw25VNI0iSI/bUa42ZiZHZxeSU+PDHUGIhYMMTR+FWYalOtp3/o+EWQd68R2fVRezeEEslKqjQ/GT1WqP7nTjPrqvoGeq8tJ1xXg7yKb3FYDt2NAjqc+F72RiAgDYrJbRofi23wXAho3GeLsqBAG340t3Zp69D0J9Vrk37gNCmM4VSZKMhvy9CnTcKA9sAIbBt+f1GJQrVkRJZmjKwrF+r/slHnoI7ayo71knVVUtnSsn4hHQI5T5lfXRRLwjCB1eHIrv2B3j8Y9mF3PF8kgilitW/B7Xg2fzl2YmHz6bt9ssLMvKktwWxO+/e93CsYf9mhghSBC1nz6yTEcJlka8TLqtWqVDh5xanacCDkhTAGDKYzssdgtj7HU7f/7plzarxeNyFMtVj8tJEMR3375yArkIonTr3pNQwLuwsnF+arxSa0iSnBiIuJ32ar0JIfHZV/ejQf/C6kY44KVI6sGz+ZF/G+vwwq8+/3p6cpToilNRtWyxNJqI37r3JOjzVGqNN984l1zfarQ6NE1X682ZqTFBEMvVutGIA2sDIYF11Pr9Av8o1fx8AdBk87M5pOrtO6vl/3mr/dVy+X/8AasHrMJ1CWHMscxQPOJ22FPpvMNuYxmm1mgKonSCKJNGq2Ph2FyxwrHM+laWoSmLlVtMbmQL5a1cMZ0rUBTJi1KHFxvNDi+K56fGFVXVNHT5/FSj1d7VHZqi4uHgZjb/wY3Lfq8HQrCayty4cmFjKxsPB8IBH8cyDofNGEQd7DqPMYBQq3S8P74KGQpgbDkT0RuC/dpwqylwM3E67NJqAh10YoThQftHAABjMDYQDdEUZbdbNU2PhvzVRhPjbQPxUl3MbrUMREMsw8wtr105P/Xg2XyuVLk0PZFK52cmRzVdZygq4PdUavWL05PJja1mm7daOL/X9XwhmYiHjzXP2r/F0aVvwSxjx2SnE4lLeTrkpNy23SwAO3TYPAshhAEgiZcY0x84z+oGeM+vrE+ND/cFe2MA8M5Iupf2SGc/ZvUgV/+FQQdLB2EjKcIewAJHGeb90jGw8gTGuFc63cQVfcjb2xzQY5UNIXbbvkdafZjVe9u3boztIQIeAFhwe1J4zEb25pM4MRkgjTA2uMHtLBEIQthsd/DOmuHaZuYff/XFi6VVYqfV8yvruo7+tGPlU7f2pQhjoKrql988HoiEiuWq1+taWds8OzGiqFqz1V5NZS6fnyqUKjRFtTrCx+/fuHnnYa3R4hhG1bTF1RRJkGaeo0MIssUyQmh0KC6rSqlSa7Y6rTafK5TXUpnhgSgviOtbWQihoigWjqVIstpoAQBUTZuZHP3y7kMzz7MwxpGgf355fX55bTQx4LBZNU2PR4LZQnlmchRhTJLE2NDAxMhgLBz4ya++mJkctXCcx+V4+GxBUdXvvXv9tVgbPAxSDNJ1/bD8TGbWHbDjwW4A0DZ47kYcQwABASFJkoad3n+7me0O2Inc314A7HELNHIMEBAqqprcSPeuE/aSyXVHkpWbdx5SJHnlwtSDp/PDg7H1zYwoKzarZXpi5N6TOY/LjjFQNc3CsTaOCwa8vb3P5LpTb7ZJkuQ49uncSrXeevBs3mq12m0Wq4X7zc07mq6pmma3W6v15lf3ntjtVrB3QGdy3bFy7FA8YuXYhdUNq4UdiIa8HpexGeG02wqlytmJkY10zudxFUqc1cKhvfOJ1wKzDiNN1wkICYKYXUgG/d5I0NcHaibXne70Cu8krTPaboiAIkkDwS6cHTfK9yGXye1Od3rVTVpnkCBKqUwebAdaA14Q1zezYF/qH5PrTocXb99/Gg0HvB6XIIi5YrnV4RmajoUCdx4/v3h2wut2rqbS0VCgzQvDg9G+nmVm3TF8tDuCKErynQfP1jYziqJaWI5jmeRG+vK5qUarfevek/HhwWfzy1YLu39AaHLdoWnaYmGddhvLMvFIiGMZQwQel3Mzk/f7PFcv+OaW165dnMkWSl/df/rWlfO9+mJyzMIYa7pOQOLh7MK1i9O97v7dTmSgOEIoWyjHwoHXDtF1hEiC2JlhGUlOMUkQBy6YGoW2fQ1OX5s/Z8IYy4piLEvvzLAgQcDtTwAwRJMvVYxsGMlU2piRGbeb3O7kipV/+t0frl+aGYpHNjP5XLGciEc5lp5dXP3+u9ddDvvc0lqt2YoEfaqqLSQ3SpW6oqhLq6mP379hs1pMLh2WZabGhjiW+e0fvvG4nLFIaDWVLpRrQZ9bECWXw44wrjdbBAEzudLEyCBC+Kt7T4J+ryQr5peOw2YRRNnjcmIMRgajt+49efvqhaDfQxBEtd7UdRQN+ZMbWwxNn5saS26k3U771Piw1cLlipUOL5jfKus62khnMQZOu7Vab52dGAYASLLcbPMcy1gtHISQIkkAgKppNEUBACRZabY6HMeYXzp9hBA2lgT3fnjAVh8wvVXeTwdGOBIEYeRkJHc2aQyfFfNL59HzRYokKZJMZfIEAc+Oj9SbrVabTwyELSzXEYRsoUxAWGu2KJL8wQdvgZ4cYCYf73QEsViuPpxdSOeLJEkwDH3/6Vy13rRY2E9vftNsdx48W5AVBQDQ6QhjQwN9Uy2T644sK5VaIxEPh4N+lqEBBn6Pu1Jr1Jvta5emH79YCnjdiXjEGDdnC6VGq31pZpLeySD72lllYGR+RYgiSVXV6J6gNUVRs4VyIh7pbuGbXHfw7uIgMKDK2LqiSFLXEU1TPfl0MU3TfUs8Jrc73Z0sY/cqnSt2c2Ub8AR3z8kguouqW7mCITOT646iqrfvP7VauKDfmytWvG7naiqTLZRCfu/KRvqv3r5qs3IPns1bLRxCeCtXuPHGuSdzS+lc6d//+BNget2pN1oYAFXTb917GvR7MvnS4xeLl2Ymv344y/NCs90WRKlUqd1/MpfJF/0e188//dLjcsYjQYwRhGbXHYamN7Zyk6OJC2fH3U5HyC9bOPb5QjIRC9M0FQ0FytVGqVqPR4PRUMDldCiKWihXKZI0hs4mx6xWh59bWrt+aYYkd/0eO7xot1k6vGCzWiEEuq53XUUhhJKsMDRtDKlNLh2D+hLkdj0DEcYA497TA16v3T6DehsMez4hIASHuEcaZHLpqKp259EsxzJT48OzC8mhgWiuUAr6vIVydSAWSq6ndaT7PW6OZdq8cO1ifyoMk0un1mhqut7mhecLyUy+lMrkRwdjoizPr6xn8iWP28kLIgQQYSxKsqwoDE2/Lrt9AACGode3chzLSoqCdH0gEoxHgvli2WGzRsP+RDw8OhQP+r2xkJ8XREXV+tz4Ta47JEFOjw+/efkcSRCKojIMDQAYjIU1Xad7DisRJXl8ZJChadBnpP6oZyAdn/5Mz0DSNE1RlBPfr+u6ruund0rvPQPp9Kx6XCdPRRQ4ReRc995X4LK/Q6fk8wqrBE5/BhJJkhDCV3UG0ivpDoZlfSWsTH4G0ilZmhyzIAS8KGGMWZqmaWp5bZOiyGgooKiqriOH3UofecyWyaXTavM//fXv7TZr0O/p8CLGmCSJxWTq3JnRhdUUBODj928YsawH3m7y0WBHEHhRGhuO6zrayhYS8bDDZnU57RiArUze8LvAh9tvM8/RDeuzkNxgaMrpsBMQCqJUa7aioYCFYxdWNgajoWg4cMTBlGaWznEK94VAgp51DPNnReujXlg0Bp/botk74Np5fQ2k0+rwHV7QNL3WaEFonGLdaXV446C6ZrvDCyIEoNXmG6323PIaQqjV7gAA6s22yTGr2Wp/dvsBS9MXpycezi64nXZJVidHE4+eL4QDvkK5JslyyO+1Wbml1U2H3UYQsFpvLiZTsbAfY7MjuqxoHqeDpqmHswvNNi9K8uXzU5l8qdHq0CR1ZjTREUSGpp7OLQ/FI8GAV5SUTK4wNhTDAMTDQZNLh6aplY2tD79zbTQRzxZK0VDAYbdRJOF02EJ+L0vTGtJJgkjEwpvZwlhiIJnaevPSuUq9EY+GKJI0OWbJiiqIksflOBkrk1tllqF7RWPglPFqOHoDAERJ7ls86aaZM3nPAgC0eYGhKFXTSJK0cGyrwzvttlqjpaiqoqjPF1c1Xfubj96v1ptOh02U5Gy+dGZsqFpv+jwuk0un0Wr/4ndfvfnGzPzKus3CMQyzlkpHQgELxw4NRPKlSrXedDvtdx8/b7X59958I1+qfPPkhSBKW7niaCJm5p6FMbZZLEG/5+n8cjjgIylyMbk+NBBRVNXrdlo5rt5oTU+M+Lzu5PpWNOSnKNJptyVikWq9GQn6CubOcwohxAD4vG6fx/VsfuWv3r76xsyZlfXNaxdnns4vu5z2K+fPGqtuEyOD88trrTYf9Hu3soWQ37e+lblx+dwfE7O6cYZHzPN2aH/OuBMvfe6fZ6ma1uHFEyDXS+vOMVoKAMLbSWa2L/ryxxleREc8Au9Of4xPTpcVjaYoj8vRTVDUTXCw56EYG+Ej3SxyEMI9dkfT9XZHAAA02x0AgKpqvCC2eQEAIMmKIEqCKEEAeEE8MIP+LhEQAKDVeOMCCQqAcFtehrCObGmHF//pd3/o8OLzhRVV1dq8cGLRCKK0vpl9Orec3EgTEGq6rihqb4KDLnV9v3YiSIndXAYIYYKAX9x+0Gx3Lp6dSKVzFgvXbHWmxoaW1lI2q6XNC/Vm2261hAO+VCb/o4/fJ0niwEpjVW9/nSSsTPv2ivvjc3pHQh2JHQlKq0VuNChv1QiW5B+lgv/pA8hQB4rJODzu1r3HLofjzqPZSr3x3vU3Aj7PCTSoWm/evPtoMBZ+/GKxVK1Va81KvfHjTz6026zgGNy6OeO2348NDTx4Nl+uNbL5kt/nVjU9V6ikc6WQ3zsxMhgK+GiasnLsZiYPt9NF9QoGAwCUTE1aynfurkKK7DxYpwMOrKLa/33c+nKp/utZrGgAQGhlAElgcPCauCBK19+YUVRtcXWDIAivy1Wq1gE4pPSR5LTbRhNxh8367vU3csVKuVqfGBmkKQoeb0tnT77BfKnCMfR3376a3NhKxCNWC6dp+uRYIh4J2Syc0Rhd1xVFDfg8vTLdJggBAEzcy02EqYBdzdapsEtriRhjzycX1HKbibil9bL14qDekREvky7LgWbMbrMOxaOXz03lSxVRlErV+uRIAoD+4IbjkN1msVpYl8Pu97q/c/Vitd7AGHDscXdc92BWrlCOhgMv9fhvnWdJywU65CTd1qP5/InXBvHenHV9v1H37R7MioYDO1OM3qODDk7XdZRm9qS65ibD21x6MQtjcEi+wZ2H4q47BD6R1mzz2UU90Jszbr9odocfPfbogCywfTefpGK9LTcCVftTyH0L0z0rmC///F0+AGi6jjGgKRIAqCPE80ImX4IAnBkbkmSFJEmGpozJl6bpsqLYrBZRki0cC/qk80r2nvdV8E+aJ66XjLNmf/G7WyzLhIM+QZRtVouu6wQB55bWmm3e43K8WFqNhgIb6dxoIibJSqPVCfo8LxZX37p6/tyZMTPPsyAE9Wa7VK0PRkOCIC2srFfrjdFE3MJyb105X67Wl9c2G61OrlS+cfnc0uomwCDgcz+dX/b73C6HHWNT79hgjBHCj18sOWwWm9WCAeYFqVSpDURDbqejwwvZQplh6IDXbbdZRUleS2Uev1j864/eK5Sql2YmrX85T6KXkhtpXhAvTk90PzHzHL2Pura2z0OjaxjHhweMC2PmAMwtHSMWdnltU1HVWCjwxdcPY5EgTZFTY8MOuxVj0Odb0M3x0I0dNbN0DK1YWkuJomzhWIamao2moqgTI4OHFO/HVzNjFgFho9Wp1Vuqpi2vbQmidOPyObvNqmnHdVA0te4AIMvKD7//rsNum51feefaRafDNjIYs1k5cLxx2OuFWcdZA3mNIh+78HSgu+/utz2uhq9RJEB3KksQhCjJEEJN1+88nFU1zXgrKypCKJ0tiJKsKCrCOJ0ryjsO3Ga2OxgDUZZ++dltm5Vz2G25QnlqfLhSa+aKJUVVq/XWyGC0Um+QkAgGvNV6a2V9Mxryv1ha++TD7yTikf687iYjCEGt3soVyz6Pq9FsX7kwde/JC5uVi4UDrTY/OTJ4/9m8y2FHAK+mMtli6ezEsKyo8UjIOAAFQmhmq4wx1nV07+mLoM/LsQzHsh1B2MzkOZbNFsoA4A/fufZ0fsVutcTCQV4QXA67omrZQsnndo0ND2CMzSydI8psZvOJaORbl45Oa3de1ZLQqwqSAPuqtH/lGgOQiEWOw4rSNE0QhBNXBWOs6/rpw2MQQgghTdNOyQfsHFeoquoRZY65+fP/ASZcKa5ZLA04AAAAAElFTkSuQmCC",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336082,
        "is_financial_chart": true,
        "relevance_score": 0.8
      },
      {
        "id": "vector_21_85",
        "page": 22,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          305,
          185
        ],
        "bbox": [
          562,
          1443,
          867,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "symbol string",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733609,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_21_90",
        "page": 22,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          212,
          238
        ],
        "bbox": [
          868,
          1390,
          1080,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "Required Desc Yes unifie symb then to fet the",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336094,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_21_94",
        "page": 22,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          240
        ],
        "bbox": [
          560,
          1388,
          1080,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Desc symbol string Yes unifie symb then to fet the",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336102,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_21_473",
        "page": 22,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          266,
          216
        ],
        "bbox": [
          724,
          414,
          990,
          630
        ],
        "quality_score": 0.5,
        "ocr_text": "object No",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336109,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_21_540",
        "page": 22,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          574
        ],
        "bbox": [
          560,
          56,
          1080,
          630
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required _Descri The ae . descri description string Yes of the vault The ar initiall initialUsd number Yes of the vault extra param specifi params object No the exchar API",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336116,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_22_309",
        "page": 23,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          212,
          401
        ],
        "bbox": [
          868,
          688,
          1080,
          1089
        ],
        "quality_score": 0.5,
        "ocr_text": "extra parar speci No the exch API endp time: in ms No the L fundi",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336118,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_22_411",
        "page": 23,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          1033
        ],
        "bbox": [
          560,
          56,
          1080,
          1089
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Desc fundi rate | for times in ms . . N the e since int ° fundi rate 1 fetch the maxi amot limit int No fundi rate struc to fet extra parar speci params object No the exchi API endp times in ms params.until int No the li fundi",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336123,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_23_226",
        "page": 24,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          865
        ],
        "bbox": [
          560,
          271,
          1080,
          1136
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required symbol tri Yes a y string sy th since int No m or th ae nt limit int No or re ex s params object No F ex er us de params.user string No th nc 9 . ‘fr params.method string No de ‘fr",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336123,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_24_339",
        "page": 25,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          714
        ],
        "bbox": [
          560,
          205,
          1080,
          919
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required De unifie symbol string Yes symb' the e since int No in ms open the r we numb limit int No order to ret extra specit arams bject No p opsec exch endpx user @ arams.user tri No defav P . string this. if not",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336128,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_25_86",
        "page": 26,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          260
        ],
        "bbox": [
          560,
          1343,
          1080,
          1603
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required De . unifie symbol string Yes symb the e. since int No in ms open",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "iVBORw0KGgoAAAANSUhEUgAAAJYAAABLCAIAAAAdw+lEAAAWnUlEQVR4nO1deXBUx5nv7nfMSBqNRtLoFjrQzSEZcYsbc4ON8UGMY8d24ly1qayT2tpKarPZbKpSSTbruJLYzhovJMaGGBuDbWzAYDBgDAIkdN/3iNE10tzXm3mve//o0WMQss7RMN7Sr1Svevq919/39ff6+r6vW9BkMgEAIIQgZCBJEkIomCx5vV6O44JGjiJQYrIAALVaHVIqdDgcHMfxPB8ccoQQq9WqVquDQ05GoMRk4TACwlZAEHyW7ksNBEpMdlJPE0IwIRAAAgCD0DRpTweUE5qGEKIZUICE8cQlxYQAAhAanQ0CAMEYBaLGMMYAAEIAQj71T06FEEJmuLIIIZQ5BCEhhBBA79DSCfFVMASAEBIQ7r+KE39+gB+5sat1XPhrjhAiF0vTECFACK1EQgiCEEBApYYAAAAJwbSREUIghDBANTCiJgkhE1Uh5aPPMLT/8AmPx7t2RfGWtcuBT0PAvz+gCf8OIrB9FMYEIXirpumDTy+qwsPcgrCkaN6OjatkKiOr1VenEwWV1Ol2/89bx/sGBtcuL961abXc42FCkCytH8WLV8tFLG1avcxPagQAwBgjhFxu4eS5y3sf2jxlqSlXgsfzl7+9O2g0p6cmPf/ELl7BI0pmgkUAAFo7u7t7+h/f+eCBdz4sq26oaWxraOmAEAwazdUNLUMmc3O7rrymEQBgczib23UNrZ0DQ6abVfVTZv1e0HpLTYrbvqHkZnV9xpxkbYwGADBoMvcODHboesqqGwAAEMLG1s6K2qapfT5DRsutmsYX9j1y8OhHLR3dRrP18vUKUZIQhDp9343KOrfgGTSaBcFjszvNVluYUqHgeJvDWVnXPGS2uNzCpdJbDqcLIWQwmj86d/ns5evTl91ic5Teqtm3e+vgkPlXL7+BIDRZrJPrSBnEJMbF5mWlq1URVfUtLre7orbpO0/u/uDsJYvV/uzjO6saWqrrW7rWLBsYMt2orEMI8Rzn9Yot7bqn9myTJMww0+1PaAuI18bEa2Myz6TMy5l7+MTpRfPzXnvzmM3usNocCKHqhpb5uXPfPn4aAFDSVrhv99bJkmYZRqngrXZHUrxW3zew//BxAGBZVX3JksID73zEMEzRvBybzbFtw0p9/2BP70ByYpzT5T74zkdXy6pefOGpk599AQg5c7F03+4tfzl4NEqtUvA8GG5M0xE/PjamaF5O0bycZ1/8VWNb518Ovjs5FYYpFWXVDT/9z5dXL31g16bV56/cYFm2u7c/TMG/+JPvJsbHGs2WDp2+1zDk8Xj/6dknunv7PR5xYX7WkQ/OTIfve0EHJKvdkZWeoooIP/Lhpxq1KiZKnZWRumXt8hf/44/tXXqOZZVKhb7XQN+YVPkQQVGSfvH71+iX16HrKVlSOGg0H/vkwosv7FMq+PdPXQAA8Byn4DkIodPldrkFl1v49b/8ABBSWde8Y2NJe5f+vY8/e3jLmoc2r/nxv78EAjGmyJO4SFXEtfKa3oHBybUJu9NZkJPx6m/+9dkndv7+tUMd3b0RYUqEoFvw8Cx79MOzZy6WRkepRUkihLgFj8stEIJtdifGk6vBcQEhRAi53G4AwZ5t6/904J2iebmqiDCXy329ok4TFalRRybGxT7z2I5vProN3DMLGBeC4ImKVB146ZdXbla16/TJCXFb16380fN7w5SKDp2+sa2LQQgTou8ztLTr3B4PxtgripIk2Z0uxKCoyIh1y4tffGFfckKcrqe/tqndbLUDvznXFEGI3eG02hx/f/fjqEhVflY6z3GTE0wTFTk/NwshJGG8Y2PJkMkcER6WGBebOzcNIrh80YIwpcLhdM2dk5KalBCtUSfHxyXGaTVRkTmZc8Cd4T9gKCrIxZgUL8xPTYwrLMhmGObQ+6eOnjz33BO7nnlsR59h6I0jJ/oGhgAAk6268PCwtOSElMS4LWuX8xyXlZH6578drWlse37vQ6cuXD303ieIYXY+uOrtE6dbO2/nZ6VrYzSpSfHZGXMUPJeTmbZqadGrh45dvl7x+K6Nze26A//4cGlRwfR70YjwsNjoqJ//7tWWDt1PvrtvRfHC4gV5wGw2Y4zJlCBN9cWxYbfbBUGY+PNvHDnx89++Qgj54/7Dh4+f9r/l8XrHfR1jbDabv+qWnHYLHjl94WrZL/7w17HL93/eV9rdPycrpgzBcxfRyY2FwG9AptNr+nPEFYCRvT6Z9gc4BjML87P3bNsAAHhsx8bwMCUAAGPfmoxj2SmTviMOhIAQBc/RKkMILZqfm56SSAih5QMAIIQEAHmliDFR8Jx/TgBrgOdYWUCMMTSbzVO2kU52yTVBBNBGOpGKI4RYrdaoqKjpF/VVz49aUVMT0/+zoEBgGtOkGbIqTtZySL56oJtIOROkNeKxccdW/+dHJTA1Aym8hxPW6/VaLJaQMnMLgsCyLMMwwSFHCHG73cGvAUEQGIZh2UmPZSPAsiyrUqlCSoUIIZZlg+lsIoSoVKrgkJMRKDFZCGHQvvcJgq75Am4Z/yrQQSto5GQESkyf6T0QLM1iBiHrCGNM/U0yptsRzyI4kEe6e1vt/XTbzuJe0NYmX2W0dnY7nC4AQHl1Y1l1gyhK8jOzKgwt0NYmX2V09w6IknT2Uunl67esNodbECCEkiRBCGc70lABnVV9ePbSzo2ry2oaYjTqvoGhuqa2IZP1had2hyuVZovt9MVraSkJja0dBdkZPf2GC1+WsSwzdRVS7/nE879eIITIMSUgiEGaLR3dooT7BgYRhA0tHRtKlvT0G8qq6o1ma3KidlnRvMWFBZV1zZ23ey9eKy/IzqhqaB1dhTTGSWZdthP6xAMAQUj1RPysghDSiXIQ9SdH7NzNPZg2D9Rwcq90spl0muWPAaWC83olQohaFaGN0bhcbpdbYFmGxvJwHBsRrqST0uTEuIUF2aOzgu6Oj6MpuV9GEBICLl4rp7fod0oDqgghl0pvOV3CzEkIMCESBoT49Ec9kXKmrD+agwkAgEjYd3dixQMAqhpablbVQwjrmtoraptk6WZuBUmrMT0l8eU3jrR1dasiwjmOxRgjBikVfJhSgRAKUyoYhFiW0URFriheUFZdX9/cMbqzqbm9q7apzWiyeDxeQojRbHG63E1tXV23e/V9hpqGVkLI715988uyqo7uHkIIxrisukHfN0AI+d0rbw6ZLISQKXuiJu6F8Rrto7x+ox17xYmTG+FsorXROzD4s9++4nC6/uu1Qz19hqr6ltaObkLIoNF8rbzG7nCSaQjo4/MrxNTp+zxeLybE6xUxxpIkiaLkFUXqVcYYi6JEneo6fV9Pn+GujpSGW1XUNb938twj29ZfKr2lUPBLi+Z9eqnU5RYghK0d3VkZKb39gyzLAEAaWjrOfH7t+W88dKOizuF0nbk4+PSe7dGayMlGOUz4QwUAAndTn+2L5si1eaLJ3vPrk9rnVkU/uth2uclVo4/atsDd3O8o7wwvTnfc6nLc7FDmJKg3FhiPlYlGh2ZnIZ8SPXrf6wcIoYRxYlzshpWLf/nfr+/Zvr6pvaulo9tksa5bUXz+ys15uXPnpqdEhIfNkKtmTnICTbAsA+4ehlmGAQAwjG8Io0/e1SdACAkBSfGx2hiNIHjWlyxp1+lLb9XOz81kGPTMY9sXF+ZvWr18x8ZVOn1fbHTUd57cvWvT6sulFYNG87effHjNskXl1Y3hSiVCM2OxIwQAMHT0hrNW72rq5VOiueSosAUpEKHBt66ycSomOkKRFSca7ZBBpg9uAQRtl5sG37rq7bWIBpv9WhsAgEwgBIRBiBCycdUSURSXP7Dg4rXyGI1arYrgOC53bprD6YwIUxJC4My4ash4HT5trHcGZv97dPiLVkc+uXvLiTMXBUFIToi7cLVsYX62xWZ3utwul+AWBIvNTghxON3dPf0VtU05mXPcHk+Hrqet63acNtpstZks1pmQDUBAMFEWJHJalatWz6fGIJWSS9QAjLk4dey+FVxcJJ+kIR5JNDogx0Rtms/Gqrz9FkVGrDIvcVJzHDrmxcVGMwzSqCNjNOpHtq2fn5O5df1Ki9XxwaeXaGMNuIjEz7kP/Fb3tHunV9nZ6+NzxPsAgP5B4wdnLq1aWhQXG52dkZoUH8swTFFBjlKhmJ83NzY6Ki0lKSsjdXFh/rFPzicnxpUsKdz14OqPzl4OVypXLSnKzpxTXd9Cywu4hBBCRhVGIAgvTAWEqBZnGPZ/jj1ixNIM7BAAAcYT5ZBjrOfqIhalQxbxGdro3cWOqm7D/15iVIrJ0lpaNB8A8I2HN9e3dFy8Wu5wuU+d/5LnuY0lSwCYepz4OAIi32yS+E8hEZKvvQODn18rp2lCyFhee7fg+euhYw9tXpOdMSfgvI6BwO5skqwuw8Er2CXEf289G6MCYOT4RSbmtQ84RohJm5fJYi2rbpifMxcimBSvtTucdqdLFKUOnT5nblpja+e83LluQXjr2Kk1yx7Iy85I0MaMMj+mbRljwjDoqT3bqP7wnXYNhps2/cO+V4bTeLgTmClg4ls8yGmaGObel0nzCWHUYYn/vDn557vYWBWAk5t/+EmHZdlpMqAiATDcZf3pwDtGsxUh9Pb7pweN5is3qs5fufnme5/0Dxp/8+eDZqv98PHTCp7vNxhNVtuBf3x4u3dgFBXSlR9CkGPZBG0MZRfdsdqB4aZN/3yhG3L6zpaDGQKCAELfwEbTNDHMvS9T3vZAhnd+TL7e/aRDsuzylqLAgpa4fuXiwSEzAWDdiuLTn191CUJO5py8rPTHdz6Yn5XxyNZ1CgVvstgWF+bv3rJOG6M5/8WNcVapZGYiz4KKYTtT4MNYAwo6sBUW5CQnaA+fOL1s0fxbNY0sw2ijo0xWq93hcrkFCWOH04Ug1PcZ6pvbzVbbooX549hIv/b6+/qAbhC7WVlvtNie2PkgACAzLTk9NUkbE7180QKlgl+/cjGD0LrlxWkpiblZaaUVtXt3bc6YkzStIMQZwn3ZqH3fpzMjUNPYevl6xfeffpQdMyyGTCEUeBYzCowx3WM7Ny0lPzuDZRg6d0IQUtsZvdIlKR2fWRCSvWUwWbqP4t9LWrahR4SHyc9Av1v06r8DmSWEiKIYUlqktt1gRrBRisEhJyNQYrKSJDmdzpBSoSAIoih6vd7gkCOEeL1ep9MZHHIyAiUmy7Js8I9cGRsMw3AcF+SzfCIjI4NJDgROzFCMIyUzbd+5r+QCTnc2gi20QFVKLXkTfGVWhaGF4YAdQN1JsstJunuruxzTPdJfOIv7CKohScIQQp2+72pZ9R13EvVA+T0pb8aYjSMNIRBCvF7xpf2HFy3Ii9dGX6+o9YpibmZaUoK2Xafv7O5ZvfQBnudo3EhlXbPLLaxcvHBgyDTbCkMImBCLzW6zOziW1fcZLDb72ydOd97ufe/kZz39g6+/fRwAACH4/Gr51bLqG5V1py586fF4ZlUYKiCEKBX8grzsHRtXhSkVSwoLHt68VqOOrKpvESUpNjoqThtNh8aahhaFgkuKj40ID7M7XLMdaciAAACAxWYrr2lUhSudbreEsc3uXJiX1apU5GamRUer6biYGK/1eL3LHlgQGxP1b79/bbYVhgrofGXzmmUd3fqIiPCSxYUMQiVLFi4vXrAwP/v8lzcNQyaEECFk95a1LMtcKi33esXvfXPPrLMpRJ1NE8f4XvtpEvj6QpY9mJWAMZYkLBtufOFIGMtrRAAAuZMDMB7PXxhSrfMOZujAm7shr8mCWQkjHBf+DqY7jAEgH1A7Mo6UQv4EBI+nXacH8rfg+y7kTd9EzgwqCPHpj1BLFOVmKtFNY8DrFS1WO9XioNFChs+RDvh5gDJonev0fVabA98dEEzpkrt2cdzpG0aPYKNxqB6PSFUoh6YBv/hXenrzTByKPQ4glCxOgAk9RcenThSw6CZaMx6v92e/fcVktgIA/v7uSXKP+AEHVUh3b7/FZkcQjthcRsPmkJw7vFMOjDgugfYb/Qbj8dMXYmM0m1YtU/K8zeE89sl5i9WeGBf7xEOb3jv5mU7f9+TuLb0Dgzcq6zLTUnZsKAlmb+O5bTKfrtZ+qwQAKPZbGE04CuMNB79Q5iaqVmYhBReQPhZCqFDwB4+e/On3nkIIiaL0/ifndT39q5YWrV5aNCOBfQQACCCAYUrFF9cr61s6TBbrc0/sSoyPBQCcuvBl1+0+SZKiNZE9/YPff/rR67dqm9p1a5c/MEpA/u2+gXadfvXSBwggZdUNNrtDd7v3u089cru3v7S8xmA0/+j5vRzHvvPRuez01LMXS83DHU6ARRpFSAIAsH3R5LjejnjWcOBy70uf9v7htNA1aD1fbz5VLRrt8mPThMPlXlo0LzMt+a33T6UmxZfeqnG63D985tGzl0odTtdMfK+0AqsbWkwWW1VD89oVixYtyLtys5LevV5Ru2f7eqfbvTAvOz01qa6praaxdU5S/PzcrJGDJyFk8cL85/c+9Pd3T/YbjGpVhIRxalJCRHhYTHSU0WyNjoqkpw3yHJs+J/lHz+/VqFUgOBMfCAEAsftWcAlqAKFkdSX8eBOKUKBwhXpjQfwP1/PJ4+89myAYhIZM5ke3b2jX6WubWjHG6sgIdaRKqeQFjxfM2DRVwfMQwqhIVVJ8bHyMRs7XqCPjtTHJCdqkBG1UpErweH/87W8YhsxHPjgzshVCCDu7e2sa25RKBQFEwXPMsFFcFKXFC/N1Pf37Dx+3O1zzcuberKwbMpqDd24SIQAA47EyR1mn8Xg5VHBAlJCCAwCw8er+l88J7QYQoP4AQqhU8ACAHzz9GISoeEF+e5f+tUPHUhLiYjRqjGcqQprnOYQQx7KSJAEIeN7n0+c5ThQlhJAoYZZhGISultdIWGIYNMouX0HwNLR0mC02QgiNIKano7rcAiHE7RYaWzsFwUMIqW/uMAyZSKAx9i5fd6fB1dzn7jSIZif2iKLFSff0Oqp0otVFyD1Ht46HUY+UxcNSk+HDYZ0ud3N71+SKHhOjiikIHkmSBI8HYyyKomf49Fi3IBBCBI9Hwtjj9Yqi1GcYam7XkbF3Nt27+iJBic8PKesM8W3GDHw4/8xaZ6jm7+WZLjaIn9niPlhv7uxdoj+H82dmxSbrj4SYrYoM1/7o1pkxmhrd4DTuYzMIePcGaTk9Yys23x4pAALfEkeDfGizT0nD/5FqRL68kJt1NoUc5P8MJSuJ+B2WQu6x+c06m0ILhICrZdVtnbchhCaLray6obG1E0IoiuKVm5W6nj4IoWHIdP1WbdftXvr8rApDBdT6eujYxx06/bsfn2vp6H7jyInWzu5/fHi2uV139KNznd29h977pLlD98f9R3r6Da8fPm6x2iGcVWHIACEoSVjX0//NR7dvXbeyrLo+WqN+8uEtOzaW3Kisa+vSx2jU8doYl8udmpywZ/uGzDnJQ2YLmO1IQweEEIQgg1BtU1tNU1tSvNbrETu7e25U1udlZUSqIuJjYx7Zun5OcoLFapMwdjjddEY6q8IQAoTwW4/v+OJ6hSo8bO3yRQaj6fjpz/Oy0pcWFTy8Zc31ytqy6nqe59etKGYQKllSGKOJAgDMBl6EbuDF628ff+GpRxiExjYszLbC0AK17VEf+3N7dwHfclDO94/G8FkaZteFoQX/NZ/Cr4He7f6l0Ri+nyy5P1aysSDbfP9fkgs4XWgymYJjvJ4g6DKWbvsIWrWKojj9f7wzKQRQzP8DXX6oZS8lbgMAAAAASUVORK5CYII=",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733613,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_25_395",
        "page": 26,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          714
        ],
        "bbox": [
          560,
          56,
          1080,
          770
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required De unifie symbol string Yes symb' the e since int No in ms open the r we numb limit int No order to ret extra specit arams bject No P opsec exch endpx user @ arams.user strin No defav . il . p 9 this.v if not",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336133,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_26_140",
        "page": 27,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          523
        ],
        "bbox": [
          560,
          1105,
          1080,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required De unifie symbol string Yes symb' the e since int No in ms open the r we numb limit int No order to ret params object No extra specit",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336137,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_26_398",
        "page": 27,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          475
        ],
        "bbox": [
          560,
          56,
          1080,
          531
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required De the r we numb limit int No order to ret extra specit arams bject No P opsec exch endpx user @ arams.user strin No defav . il . p 9 this.v",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733614,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_27_138",
        "page": 28,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          562
        ],
        "bbox": [
          560,
          1024,
          1080,
          1586
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required De id string Yes order unifie the r symbol tri Yes y string order in extra specit arams bject No P opsec exch endpx user @ arams.user strin No defav . il . p 9 this.v if not",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336147,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_27_487",
        "page": 28,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          249
        ],
        "bbox": [
          560,
          56,
          1080,
          305
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required De exche endp¢ user ¢ ; N defau params.user string (o} this",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336152,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_28_91",
        "page": 29,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          305,
          196
        ],
        "bbox": [
          562,
          1432,
          867,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "params object",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336156,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_28_177",
        "page": 29,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          738
        ],
        "bbox": [
          560,
          890,
          1080,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Desc unifie symbol string Yes mark symb thee since int No time an to fet trade the maxi we numt limit int No trade struc to ret params object No extra parar speci the exchi",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733616,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_29_140",
        "page": 30,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          510
        ],
        "bbox": [
          560,
          1024,
          1080,
          1534
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required b unifie symbol tri Yes symb y strang marke positi extra specit arams bject No p opsee exch endpx user @ arams.user tri No defau Pp . strang this. if not",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336164,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_29_494",
        "page": 30,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          249
        ],
        "bbox": [
          560,
          56,
          1080,
          305
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Desc API endp time: til . N in ms Pparams.untl int [e} the L:",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336164,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_30_168",
        "page": 31,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          444
        ],
        "bbox": [
          560,
          751,
          1080,
          1195
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required symbols Array<string> No params object No params.user string No",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336168,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_31_137",
        "page": 32,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          217,
          249
        ],
        "bbox": [
          562,
          1011,
          779,
          1260
        ],
        "quality_score": 0.5,
        "ocr_text": "params.leverage",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336168,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_31_148",
        "page": 32,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          217,
          250
        ],
        "bbox": [
          562,
          760,
          779,
          1010
        ],
        "quality_score": 0.5,
        "ocr_text": "params",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733617,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_31_163",
        "page": 32,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          217,
          315
        ],
        "bbox": [
          562,
          444,
          779,
          759
        ],
        "quality_score": 0.5,
        "ocr_text": "symbol",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336173,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_31_179",
        "page": 32,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          1057
        ],
        "bbox": [
          560,
          205,
          1080,
          1262
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required OD n n marginMode string Yes b [i c U n s tl symbol string Yes t p h d U e p s params object No t e A e tl l re params.leverage string No s t n (",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733618,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_32_204",
        "page": 33,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          262,
          249
        ],
        "bbox": [
          562,
          783,
          824,
          1032
        ],
        "quality_score": 0.5,
        "ocr_text": "params.marginMode",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336183,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_32_209",
        "page": 33,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          262,
          250
        ],
        "bbox": [
          562,
          532,
          824,
          782
        ],
        "quality_score": 0.5,
        "ocr_text": "params",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336185,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_32_231",
        "page": 33,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          760
        ],
        "bbox": [
          560,
          274,
          1080,
          1034
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required leverage float Yes symbol string Yes params object No params.marginMode string No",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.73362,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_33_85",
        "page": 34,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          174
        ],
        "bbox": [
          560,
          1426,
          1080,
          1600
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required _ Descriptic unified symbol string Yes market symbol",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336202,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_33_483",
        "page": 34,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          543
        ],
        "bbox": [
          560,
          202,
          1080,
          745
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required _ Descriptic unified symbol string Yes market symbol amount of amount float Yes margin to add extra paramete specific to params object No the exchange API endpoint",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336204,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_34_74",
        "page": 35,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          411
        ],
        "bbox": [
          560,
          1198,
          1080,
          1609
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required code string Yes amount float Yes fromAccount string Yes",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733621,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_34_428",
        "page": 35,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          263,
          217
        ],
        "bbox": [
          817,
          262,
          1080,
          479
        ],
        "quality_score": 0.5,
        "ocr_text": "extra paramete. specific to No the exchange API",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336216,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_34_476",
        "page": 35,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          423
        ],
        "bbox": [
          560,
          56,
          1080,
          479
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required _ Descriptic the amount of amount float Yes . margin to remove extra paramete specific to params object No the exchange API",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336216,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_35_499",
        "page": 36,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          263,
          250
        ],
        "bbox": [
          562,
          262,
          825,
          512
        ],
        "quality_score": 0.5,
        "ocr_text": "params",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733622,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_35_515",
        "page": 36,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          541
        ],
        "bbox": [
          560,
          56,
          1080,
          597
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required toAccount string Yes params object No params.vaultAddress string No",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336223,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_36_227",
        "page": 37,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          263,
          249
        ],
        "bbox": [
          562,
          552,
          825,
          801
        ],
        "quality_score": 0.5,
        "ocr_text": "params",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336228,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_36_260",
        "page": 37,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          899
        ],
        "bbox": [
          560,
          56,
          1080,
          955
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required code string Yes amount float Yes address string Yes tag string Yes params object No params.vaultAddress string No",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336228,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_37_99",
        "page": 38,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          212,
          343
        ],
        "bbox": [
          868,
          1285,
          1080,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "time: in ms No thee ledge entry No max num ledge",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336233,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_37_129",
        "page": 38,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          516
        ],
        "bbox": [
          560,
          1112,
          1080,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Desc unifie code string No curre code times in ms since int No thee ledge entry limit int No max numt ledge",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336235,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_37_424",
        "page": 38,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          444
        ],
        "bbox": [
          560,
          56,
          1080,
          500
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required De ifi symbol string Yes unine symb' extra specit arams bject No P opsec exch endpx user @ arams.user strin No defav . il . p 9 this.v if not",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733625,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_38_127",
        "page": 39,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          466
        ],
        "bbox": [
          560,
          1162,
          1080,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Desc unifie code string Yes curre code thee : . time since int No to fet depo limit int No the maxi numt depo",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336252,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_38_386",
        "page": 39,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          212,
          401
        ],
        "bbox": [
          868,
          187,
          1080,
          588
        ],
        "quality_score": 0.5,
        "ocr_text": "extra parar speci No the exch API endp time: in m: No the L ledge",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336254,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_38_414",
        "page": 39,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          532
        ],
        "bbox": [
          560,
          56,
          1080,
          588
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Desc entri retur extra parar speci params object No the exchi API endp times in ms params.until int No the le ledge",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336257,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_39_128",
        "page": 40,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          466
        ],
        "bbox": [
          560,
          1162,
          1080,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Desc unifie code string Yes curre code thee time since int No to fet withe for limit int No the maxi numt",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733626,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_39_393",
        "page": 40,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          212,
          401
        ],
        "bbox": [
          868,
          187,
          1080,
          588
        ],
        "quality_score": 0.5,
        "ocr_text": "extra parar speci No the exch API endp the L time No to fet withc",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336261,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_39_418",
        "page": 40,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          532
        ],
        "bbox": [
          560,
          56,
          1080,
          588
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Desc struc to ret extra parar speci params object No the exchi API endp the le time params.until int No to fet withe",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336264,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_40_62",
        "page": 41,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          207
        ],
        "bbox": [
          560,
          1271,
          1080,
          1478
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required D U ; a symbols Array<string> No m sy",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336268,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_40_356",
        "page": 41,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          212,
          401
        ],
        "bbox": [
          868,
          220,
          1080,
          621
        ],
        "quality_score": 0.5,
        "ocr_text": "extra parar speci No the exch API endp the L time No to fet withc",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733627,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_40_388",
        "page": 41,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          565
        ],
        "bbox": [
          560,
          56,
          1080,
          621
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Desc withe struc to ret extra parar speci params object No the exchi API endp the le time params.until int No to fet withe",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336276,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_41_259",
        "page": 42,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          326
        ],
        "bbox": [
          560,
          803,
          1080,
          1129
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descriptio unified . CCXT symbol string Yes market symbol exchange params object No specific parameter",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336278,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_41_456",
        "page": 42,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          174
        ],
        "bbox": [
          560,
          56,
          1080,
          230
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required D e) params object No SE Dé",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336278,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_42_447",
        "page": 43,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          860
        ],
        "bbox": [
          560,
          167,
          1080,
          1027
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descriptio unified symbol string No market symbol the earlies time in ms since int No to fetch funding history for the maximum number of limit int No funding history structures to retrieve extra parameter specific to params object No the exchange API endpoint",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336283,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_43_424",
        "page": 44,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          820
        ],
        "bbox": [
          560,
          202,
          1080,
          1022
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descriptio list of orders to create, eac object should contain th parameter orders Array Yes required b createOrd namely symbol, type, side, amount, price and params extra parameter specific to params object No the exchange API endpoint",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": true,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336287,
        "is_financial_chart": true,
        "relevance_score": 0.8
      },
      {
        "id": "vector_44_201",
        "page": 45,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          1068
        ],
        "bbox": [
          560,
          202,
          1080,
          1270
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required symbol string Yes type string Yes side string Yes amount float Yes price float No params object No params.timelnForce string No params.postOnly bool No params.reduceOnly bool No params.triggerPrice float No params.clientOrderld string No params.slippage string No params.vaultAddress string No",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": true,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733629,
        "is_financial_chart": true,
        "relevance_score": 0.8
      },
      {
        "id": "vector_45_132",
        "page": 46,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          1068
        ],
        "bbox": [
          560,
          382,
          1080,
          1450
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required id string Yes symbol string Yes type string Yes side string Yes amount float Yes price float No params object No params.timelnForce string No params.postOnly bool No params.reduceOnly bool No params.triggerPrice float No params.clientOrderld string No params.vaultAddress string No",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": true,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336292,
        "is_financial_chart": true,
        "relevance_score": 0.8
      },
      {
        "id": "vector_46_214",
        "page": 47,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          741
        ],
        "bbox": [
          560,
          788,
          1080,
          1529
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descriptio unified symbol of the marke symbol string Yes to fetch the order book for the maximum limi . N amount of imit int ° order bool entries to return extra parameter specific to params object No the exchange API endpoint",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": true,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.73363,
        "is_financial_chart": true,
        "relevance_score": 0.8
      },
      {
        "id": "vector_47_214",
        "page": 48,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          524
        ],
        "bbox": [
          560,
          788,
          1080,
          1312
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descriptio unified symbol of . the marke symbol string Yes to fetch the order book for extra parameter specific to params object No the exchange API endpoint",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336302,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_48_370",
        "page": 49,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          523
        ],
        "bbox": [
          560,
          535,
          1080,
          1058
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descriptio unified symbol of . the marke symbol string Yes to fetch the ticker for extra parameter specific to params object No the exchange API endpoint",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336307,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_49_438",
        "page": 50,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          211,
          249
        ],
        "bbox": [
          691,
          585,
          902,
          834
        ],
        "quality_score": 0.5,
        "ocr_text": "object",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733631,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_49_459",
        "page": 50,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          523
        ],
        "bbox": [
          560,
          313,
          1080,
          836
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required De ur sy th symbols Array<string> Yes to th fo 2 pe SF params object No th 2 Al er",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733631,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_50_102",
        "page": 51,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          291
        ],
        "bbox": [
          560,
          1337,
          1080,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required De unifie . symb symbol string Yes mark were since aint No the e in ms",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336318,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_50_422",
        "page": 51,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          211,
          250
        ],
        "bbox": [
          691,
          328,
          902,
          578
        ],
        "quality_score": 0.5,
        "ocr_text": "object",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "iVBORw0KGgoAAAANSUhEUgAAAH8AAACWCAIAAAB4lMAOAAAGwUlEQVR4nO3dfYwU9R3H8c/3Nzuzu7d3t+w9sHfiQQkHCREjBNQAKa0FOZM+2EoV4yXaxlbbhGLEf0hsTNo0PqZp03+06UPSaFMaFNpqUEsNtVQTVHKtwGlAaA7uAXnY3du73Z19mN+3f+wWOIRG7whf2Pu+/rqbnZlM3jPzm4d/hjKZjOd5UJed7/uhcDgciUSkt2Q6YmbDzNKbMU0xs5HehmlN60vS+pK0viStL0nrS9L6krS+JK0vSetL0vqStL4krS9J60vS+pK0viStL0nrS9L6krS+JK0vSetL0vqStL4krS9J60vS+pK0viStL0nrS9L6krS+JK0vSetL0vqStL4krS9J60vS+pK0viStL0nrS9L6krS+JK0vSetL0vqStL4krS9J60vS+pK0viStL0nrS9L6krS+JK0vSetL0vqStL4krS9J60vS+pK0viStL0nrS7rE9TmwsBf/lIh+ZGSiS1yfHANDF/95suu1zIGd7MJXrinXZ8Y5381J/6Uv+0Y/+BOxmMEIxv3zz4yJi194IjMMkWNqf9eRqdW3DCIQIahFOfmb3ae37AEROeZsaGYQ+QePH7jxx2Nvf4TqAMXnLG7/t6vOmVjbfwwQ5fcPje48AAA06dPnShSa0tKGKpk8GXKao7UJETc0o4ErQTBaCLU21mZjWL9kmiLJjbeG57YBABEIICqfGncaPNPgVWerTqykcuQ5TmMEAJcrzDj9wtujOw/ElswxMc94ITh1crMwqfrMALhiR57aMfrX/SCa8dXFHZt6yJCJuNl/HvronudKA6nEHUs7N/WQ6/iHTwxs+gMZQ45pWtHtzUoQIRj3h3/y8tibB8k17fevartvJYBgzB9+4pWx3QfJmJY7lyU3rCmPZI49us0/9DECe+S+X8ENdT2xLrrwGlj+fxeYq8Rk6jODDI387PWTv93d9cx6LpaPbX7RxLzk97/EloNMIbFhtR3zBx/bHv5cW+v6m5x4Q1vv8vJQevjJHeWTY9WVDP5w2/ieI7OfvLPwwfDgY9sj85ONK7pHnt6R2vru7J/eXTk1fnTTFrdzRuIrN7R/a+XpLXvy+4fa719FUc9NxoEpXMCvJJ+9PjMZ4mIl/dLe9u+salm3FEC+byD90nvJ793CxXJ89cK23uUAsrs+HH1tX+v6m9yZTa1331weypz45ZtkAKB4NJV9o7/p8wuCcd9piZmol3l1X+OK7vS2vZ0P9yS+tgQAlwMTdSnsNq+5Ltd31D98KnHH0rObURcXgEmO+zZf4lLFvbaFywEI7qyEfesQlwIKGTiGywEMuZ3x0mAK1WssEGQLtYstEGTysCgePnniub+DbcPirsj8mVwObLHidsS5HIB55oNfBMAVS4a4WAYQZH0TdckhmOk97pvmqJOI5d450n7vCgC5voFQezOFQ2xhx31yHQD5fYMN180CAAaFJjwHuMlmONS8dlHnIz0ACv3DobZGMLvtTbm+geoxfnTz1tj117b2LgcAIq4ETlO4Pg75Mz57fSJYJoc6Hrp1YOPvBxziYjD+j4Nzf/1tALCc/lMfRZ6vpHLFQ8e7Hl8HoHb7bxmE6j5wO+Lt3/3C8ad2lI6liJF5/f05P78nftv1yQ2rj23eagvlSiaf3Xkg8eUbqjdCsWVzP352138e+B05lPjG0njPIrZM0/OqWy2YuH2J0xxNb99LkdC8Fx5oXDkfQMs3lzWvXlgeyXBg5z3/YOPN88CongqmMQzL1YcADrjjB2u8rkT2b/1wnDm/6I2vXQTm1t7lTiKWeeXfoXh0wZ83NiyeDQaY42sXzX7mruyuD028wetKoE6GfVA+n49Go5NZlHlCgwveAlqGoUL/cGkoPbbrg9TW9xa8+nCkO8mBJWMucN9y3jrP+7e+5HK5KTxtEXFgq6c/Wz7zJoAtExHobLr0y/9K/XGPiXqzfvT1SHeSuTbzBRY/s04GAxPGluozcPVNw9U/5lRN4dj/1GyhFGQLoUSMvKk9WteXqR37n5qJeibqARcZnaaxy3IwMmovcTT9RJelPqFO3gxcanXy0HiV0vqStL4krS9J60vS+pK0viStL0nrS9L6krS+JK0vSetL0vqStL4krS9J60vS+pK0viStL0nrS9L6krS+JK0vSetL0vqStL4krS9J60vS+pK0viStL0nrS9L6krS+JK0vSetL0vqStL4krS9J60vS+pK0viStL0nrS9L6krS+JK0vSetL0vqStL4krS9J60vS+pK0viStL0nrS9L6krS+JK0vSetLMlS/n9a4whFRqFAoBEEgvSXTke/7/wVzEVjhbnciMwAAAABJRU5ErkJggg==",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733632,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_50_444",
        "page": 51,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          524
        ],
        "bbox": [
          560,
          56,
          1080,
          580
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required De ur sy . th symbols Array<string> Yes to th fo 2 pe SF params object No th 2 Al er",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733632,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_51_449",
        "page": 52,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          519
        ],
        "bbox": [
          560,
          56,
          1080,
          575
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required De order the r we numb limit int No struct retrie extra specit arams bject No p opsec exch endpx user @ arams.user tri No defav P . string this.",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336326,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_52_96",
        "page": 53,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          181
        ],
        "bbox": [
          560,
          1447,
          1080,
          1628
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descrip symbol string Yes unified symbol the mai",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336328,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_52_616",
        "page": 53,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          557
        ],
        "bbox": [
          560,
          56,
          1080,
          613
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required Descriptio unified market symbol of symbol string Yes the marke trades were madi in extra parameter specific to params object No the exchange API endpoint",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733633,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_53_348",
        "page": 54,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          266,
          216
        ],
        "bbox": [
          715,
          774,
          981,
          990
        ],
        "quality_score": 0.5,
        "ocr_text": "object No",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336333,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_53_491",
        "page": 54,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          934
        ],
        "bbox": [
          560,
          56,
          1080,
          990
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required _ Descrir to fetct OHLCV data fo the len of time timeframe string Yes each candle represe timeste inmso since int No the ear candle fetch the maxim limit int No amount candle: fetch extra parame specific params object No the exchan API",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "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",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336338,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_54_378",
        "page": 55,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          708
        ],
        "bbox": [
          560,
          310,
          1080,
          1018
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required _ Descrir unified symbol the ma symbol string Yes to fetct OHLCV data fo the len of time timeframe string Yes each candle represe extra parame specific params object No the exchan API endpoi",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.7336338,
        "is_financial_chart": false,
        "relevance_score": 0.5
      },
      {
        "id": "vector_55_236",
        "page": 56,
        "type": "vector_graphic",
        "format": "png",
        "size": [
          520,
          780
        ],
        "bbox": [
          560,
          202,
          1080,
          982
        ],
        "quality_score": 0.5,
        "ocr_text": "Param Type Required De unifie symbol tri Yes symb y string marke were the e since int No in ms order the r we numb limit int No struct retrie extra specit arams object No p exch endpx user @ arams.user tri No defav P . string this. if not",
        "is_chart": true,
        "chart_type": "unknown",
        "chart_confidence": 0.5,
        "contains_financial_content": false,
        "base64_thumbnail": "",
        "metadata": {
          "source": "vector_graphic",
          "quality_score": 0.5,
          "chart_type": "unknown",
          "chart_confidence": 0.5
        },
        "extraction_timestamp": 1748268700.733634,
        "is_financial_chart": false,
        "relevance_score": 0.5
      }
    ],
    "symbols": {
      "symbols_by_type": {
        "stock_ticker": [
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 538,
              "end": 540
            },
            "context": "\nfetchPosition\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 1234,
              "end": 1236
            },
            "context": "pers/api/info-\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 1444,
              "end": 1447
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nfetchMarkets\nretriev",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 2080,
              "end": 2082
            },
            "context": "\n])\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 2199,
              "end": 2202
            },
            "context": "uired\nDescriptio\nthe\nexchange\nAPI\nd\ni\nfetchSwapMarkets\nretrieve",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 2662,
              "end": 2665
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nhyperliquid\n \nparams",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 2801,
              "end": 2803
            },
            "context": "[\n]\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 3619,
              "end": 3621
            },
            "context": "n (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 3779,
              "end": 3782
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nfetchBalance\nquery f",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 4413,
              "end": 4415
            },
            "context": "[\n]\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "A",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 4728,
              "end": 4729
            },
            "context": "yperliquid\nReturns: object  - A dictionary of order book\nstru",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 5167,
              "end": 5169
            },
            "context": "\n])\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 5294,
              "end": 5297
            },
            "context": "ptio\nspecific to\nthe\nexchange\nAPI\nd\ni\nfetchTickers\nfetches pric",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 5948,
              "end": 5950
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 6575,
              "end": 6577
            },
            "context": "[\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AP",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 6706,
              "end": 6708
            },
            "context": "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nfetchOHLCV\nfetches historical",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "A",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 6899,
              "end": 6900
            },
            "context": "Returns: Array<Array<int>>  - A list of candles\nordered as ti",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "OHLC",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 7143,
              "end": 7147
            },
            "context": "\nYes\nunifie\nsymb\nthe m\nto fet\nOHLC\ndata \ntimeframe\nstring\nYes\nth",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 7267,
              "end": 7269
            },
            "context": " ([\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 7527,
              "end": 7530
            },
            "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 7809,
              "end": 7811
            },
            "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AP",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 8256,
              "end": 8258
            },
            "context": "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nparams.until\nint\nNo\ntim\nin",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 8378,
              "end": 8380
            },
            "context": "tring\nNo\nwa\nad\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 8964,
              "end": 8966
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 9644,
              "end": 9646
            },
            "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 9822,
              "end": 9825
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nd\ni\ncreateOrdersRequest\ncreat",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 10374,
              "end": 10376
            },
            "context": "t (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 11098,
              "end": 11100
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "N",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 11436,
              "end": 11437
            },
            "context": "rray<string>\nYe\nsymbol\nstring\nN\nparams\nobject\nN\nparams.client",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "N",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 11452,
              "end": 11453
            },
            "context": "symbol\nstring\nN\nparams\nobject\nN\nparams.clientOrderId\nstring ,",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "N",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 11498,
              "end": 11499
            },
            "context": "rderId\nstring ,\nArray<string>\nN\nparams.vaultAddress\nstring\nN\n",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "N",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 11527,
              "end": 11528
            },
            "context": "\nN\nparams.vaultAddress\nstring\nN\ncancelOrdersForSymbols\ncancel",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 11938,
              "end": 11940
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 12349,
              "end": 12351
            },
            "context": "s (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 12883,
              "end": 12885
            },
            "context": "r (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 13499,
              "end": 13501
            },
            "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 13816,
              "end": 13819
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateVault\ncreates ",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 14065,
              "end": 14067
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 14308,
              "end": 14311
            },
            "context": "xtra\nparam\nspecifi\nthe\nexchan\nAPI\nd\nfetchFundingRateHistory\nfet",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 14756,
              "end": 14758
            },
            "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 15018,
              "end": 15021
            },
            "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 15280,
              "end": 15282
            },
            "context": "y (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 15809,
              "end": 15811
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 16397,
              "end": 16399
            },
            "context": "(\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 17002,
              "end": 17004
            },
            "context": "s (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 17568,
              "end": 17570
            },
            "context": "rde\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 18236,
              "end": 18238
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 18932,
              "end": 18934
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 19034,
              "end": 19037
            },
            "context": "\n\nParam\nType\nRequired\nDescr\nAPI\nendp\nparams.until\nint\nNo\ntime",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 19583,
              "end": 19585
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 20186,
              "end": 20188
            },
            "context": "[\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "D",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 20361,
              "end": 20362
            },
            "context": "\nexchange\nParam\nType\nRequired\nD\nmarginMode\nstring\nYes\nm\nm\nb\n[",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "A",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 20464,
              "end": 20465
            },
            "context": "\nparams\nobject\nNo\ne\np\nsp\nth\ne\nA\ne\nparams.leverage\nstring\nNo\nt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 20601,
              "end": 20603
            },
            "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 21067,
              "end": 21069
            },
            "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 21424,
              "end": 21427
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nreduceMargin\nremove ",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 21816,
              "end": 21818
            },
            "context": ",\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 22025,
              "end": 22028
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nd\ni\ntransfer\ntransfer currenc",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 22443,
              "end": 22445
            },
            "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "USDC",
            "type": "crypto_symbol",
            "pattern": "stock_ticker",
            "position": {
              "start": 22644,
              "end": 22648
            },
            "context": "ke a withdrawal (only support USDC)\nKind: instance method of hyp",
            "confidence": 1.0,
            "metadata": {
              "type": "crypto_symbol",
              "verified": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 23048,
              "end": 23050
            },
            "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 23455,
              "end": 23457
            },
            "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 24072,
              "end": 24074
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 24229,
              "end": 24232
            },
            "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 24637,
              "end": 24639
            },
            "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 24793,
              "end": 24796
            },
            "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\nthe ",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 25209,
              "end": 25211
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 25371,
              "end": 25374
            },
            "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\nthe ",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "CC",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 25683,
              "end": 25685
            },
            "context": "e\nsymbols\nArray<string>\nNo\nUn\nCC\nm\nsy\n\n\nhyperliquid\n code\n s",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 25765,
              "end": 25767
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "CCXT",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 26103,
              "end": 26107
            },
            "context": "tio\nsymbol\nstring\nYes\nunified\nCCXT\nmarket\nsymbol\nparams\nobject\nN",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 26390,
              "end": 26392
            },
            "context": "(\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 26813,
              "end": 26816
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateOrdersWs\ncreat",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 27049,
              "end": 27051
            },
            "context": " ([\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 27473,
              "end": 27476
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateOrderWs\ncreate",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 27699,
              "end": 27701
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 28279,
              "end": 28281
            },
            "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 28877,
              "end": 28879
            },
            "context": "ress\nstring\nNo\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "A",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 29116,
              "end": 29117
            },
            "context": "yperliquid\nReturns: object  - A dictionary of order book\nstru",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 29506,
              "end": 29509
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\n\n\nhyperliquid\n id ",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 29596,
              "end": 29598
            },
            "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "A",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 29839,
              "end": 29840
            },
            "context": "yperliquid\nReturns: object  - A dictionary of order book\nstru",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 30165,
              "end": 30168
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\n\n\nhyperliquid\n sym",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 30312,
              "end": 30314
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 30856,
              "end": 30859
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nwatchTickers\nwatches",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 31097,
              "end": 31099
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AP",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 31441,
              "end": 31443
            },
            "context": "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nunWatchTickers\nunWatches a",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 31851,
              "end": 31853
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AP",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 32022,
              "end": 32024
            },
            "context": "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nwatchMyTrades\nwatches info",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 32453,
              "end": 32455
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 33017,
              "end": 33019
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 33252,
              "end": 33255
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nwatchOHLCV\nwatches h",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "A",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 33451,
              "end": 33452
            },
            "context": "Returns: Array<Array<int>>  - A list of candles\nordered as ti",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 33763,
              "end": 33765
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "OHLCV",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 33872,
              "end": 33877
            },
            "context": "ype\nRequired\nDescrip\nto fetch\nOHLCV\ndata for\ntimeframe\nstring\nYes",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 34091,
              "end": 34094
            },
            "context": "ra\nparame\nspecific\nthe\nexchan\nAPI\nd\ni\nunWatchOHLCV\nwatches hist",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "A",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 34287,
              "end": 34288
            },
            "context": "Returns: Array<Array<int>>  - A list of candles\n\n\nhyperliqu",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 34380,
              "end": 34382
            },
            "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "OHLCV",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 34681,
              "end": 34686
            },
            "context": "ified\nsymbol\nthe mar\nto fetch\nOHLCV\ndata for\ntimeframe\nstring\nYes",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 34804,
              "end": 34807
            },
            "context": "ra\nparame\nspecific\nthe\nexchan\nAPI\nendpoin\nwatchOrders\nwatches i",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 35049,
              "end": 35051
            },
            "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_stock_ticker",
            "pattern": "stock_ticker",
            "position": {
              "start": 35527,
              "end": 35529
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.7,
            "metadata": {
              "needs_validation": true
            }
          }
        ],
        "crypto_symbol": [
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 538,
              "end": 540
            },
            "context": "\nfetchPosition\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 1234,
              "end": 1236
            },
            "context": "pers/api/info-\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 1444,
              "end": 1447
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nfetchMarkets\nretriev",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 2080,
              "end": 2082
            },
            "context": "\n])\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 2199,
              "end": 2202
            },
            "context": "uired\nDescriptio\nthe\nexchange\nAPI\nd\ni\nfetchSwapMarkets\nretrieve",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 2662,
              "end": 2665
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nhyperliquid\n \nparams",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 2801,
              "end": 2803
            },
            "context": "[\n]\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 3619,
              "end": 3621
            },
            "context": "n (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 3779,
              "end": 3782
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nfetchBalance\nquery f",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 4413,
              "end": 4415
            },
            "context": "[\n]\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 5167,
              "end": 5169
            },
            "context": "\n])\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 5294,
              "end": 5297
            },
            "context": "ptio\nspecific to\nthe\nexchange\nAPI\nd\ni\nfetchTickers\nfetches pric",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 5948,
              "end": 5950
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 6575,
              "end": 6577
            },
            "context": "[\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AP",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 6706,
              "end": 6708
            },
            "context": "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nfetchOHLCV\nfetches historical",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "OHLC",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 7143,
              "end": 7147
            },
            "context": "\nYes\nunifie\nsymb\nthe m\nto fet\nOHLC\ndata \ntimeframe\nstring\nYes\nth",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 7267,
              "end": 7269
            },
            "context": " ([\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 7527,
              "end": 7530
            },
            "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 7809,
              "end": 7811
            },
            "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AP",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 8256,
              "end": 8258
            },
            "context": "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nparams.until\nint\nNo\ntim\nin",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 8378,
              "end": 8380
            },
            "context": "tring\nNo\nwa\nad\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 8964,
              "end": 8966
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 9644,
              "end": 9646
            },
            "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 9822,
              "end": 9825
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nd\ni\ncreateOrdersRequest\ncreat",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 10374,
              "end": 10376
            },
            "context": "t (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 11098,
              "end": 11100
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 11938,
              "end": 11940
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 12349,
              "end": 12351
            },
            "context": "s (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 12883,
              "end": 12885
            },
            "context": "r (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 13499,
              "end": 13501
            },
            "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 13816,
              "end": 13819
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateVault\ncreates ",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 14065,
              "end": 14067
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 14308,
              "end": 14311
            },
            "context": "xtra\nparam\nspecifi\nthe\nexchan\nAPI\nd\nfetchFundingRateHistory\nfet",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 14756,
              "end": 14758
            },
            "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 15018,
              "end": 15021
            },
            "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 15280,
              "end": 15282
            },
            "context": "y (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 15809,
              "end": 15811
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 16397,
              "end": 16399
            },
            "context": "(\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 17002,
              "end": 17004
            },
            "context": "s (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 17568,
              "end": 17570
            },
            "context": "rde\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 18236,
              "end": 18238
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 18932,
              "end": 18934
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 19034,
              "end": 19037
            },
            "context": "\n\nParam\nType\nRequired\nDescr\nAPI\nendp\nparams.until\nint\nNo\ntime",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 19583,
              "end": 19585
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 20186,
              "end": 20188
            },
            "context": "[\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 20601,
              "end": 20603
            },
            "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 21067,
              "end": 21069
            },
            "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 21424,
              "end": 21427
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nreduceMargin\nremove ",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 21816,
              "end": 21818
            },
            "context": ",\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 22025,
              "end": 22028
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nd\ni\ntransfer\ntransfer currenc",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 22443,
              "end": 22445
            },
            "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "USDC",
            "type": "crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 22644,
              "end": 22648
            },
            "context": "ke a withdrawal (only support USDC)\nKind: instance method of hyp",
            "confidence": 1.0,
            "metadata": {
              "type": "crypto_symbol",
              "verified": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 23048,
              "end": 23050
            },
            "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 23455,
              "end": 23457
            },
            "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 24072,
              "end": 24074
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 24229,
              "end": 24232
            },
            "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 24637,
              "end": 24639
            },
            "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 24793,
              "end": 24796
            },
            "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\nthe ",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 25209,
              "end": 25211
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 25371,
              "end": 25374
            },
            "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\nthe ",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "CC",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 25683,
              "end": 25685
            },
            "context": "e\nsymbols\nArray<string>\nNo\nUn\nCC\nm\nsy\n\n\nhyperliquid\n code\n s",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 25765,
              "end": 25767
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "CCXT",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 26103,
              "end": 26107
            },
            "context": "tio\nsymbol\nstring\nYes\nunified\nCCXT\nmarket\nsymbol\nparams\nobject\nN",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 26390,
              "end": 26392
            },
            "context": "(\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 26813,
              "end": 26816
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateOrdersWs\ncreat",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 27049,
              "end": 27051
            },
            "context": " ([\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 27473,
              "end": 27476
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateOrderWs\ncreate",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 27699,
              "end": 27701
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 28279,
              "end": 28281
            },
            "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 28877,
              "end": 28879
            },
            "context": "ress\nstring\nNo\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 29506,
              "end": 29509
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\n\n\nhyperliquid\n id ",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 29596,
              "end": 29598
            },
            "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 30165,
              "end": 30168
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\n\n\nhyperliquid\n sym",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 30312,
              "end": 30314
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 30856,
              "end": 30859
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nwatchTickers\nwatches",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 31097,
              "end": 31099
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AP",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 31441,
              "end": 31443
            },
            "context": "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nunWatchTickers\nunWatches a",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 31851,
              "end": 31853
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AP",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 32022,
              "end": 32024
            },
            "context": "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nwatchMyTrades\nwatches info",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 32453,
              "end": 32455
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 33017,
              "end": 33019
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 33252,
              "end": 33255
            },
            "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nwatchOHLCV\nwatches h",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 33763,
              "end": 33765
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "OHLCV",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 33872,
              "end": 33877
            },
            "context": "ype\nRequired\nDescrip\nto fetch\nOHLCV\ndata for\ntimeframe\nstring\nYes",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 34091,
              "end": 34094
            },
            "context": "ra\nparame\nspecific\nthe\nexchan\nAPI\nd\ni\nunWatchOHLCV\nwatches hist",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 34380,
              "end": 34382
            },
            "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "OHLCV",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 34681,
              "end": 34686
            },
            "context": "ified\nsymbol\nthe mar\nto fetch\nOHLCV\ndata for\ntimeframe\nstring\nYes",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "API",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 34804,
              "end": 34807
            },
            "context": "ra\nparame\nspecific\nthe\nexchan\nAPI\nendpoin\nwatchOrders\nwatches i",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 35049,
              "end": 35051
            },
            "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          },
          {
            "symbol": "AM",
            "type": "potential_crypto_symbol",
            "pattern": "crypto_symbol",
            "position": {
              "start": 35527,
              "end": 35529
            },
            "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
            "confidence": 0.6,
            "metadata": {
              "needs_validation": true
            }
          }
        ]
      },
      "symbols_by_position": [
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 538,
            "end": 540
          },
          "context": "\nfetchPosition\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 538,
            "end": 540
          },
          "context": "\nfetchPosition\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 1234,
            "end": 1236
          },
          "context": "pers/api/info-\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 1234,
            "end": 1236
          },
          "context": "pers/api/info-\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 1444,
            "end": 1447
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nfetchMarkets\nretriev",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 1444,
            "end": 1447
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nfetchMarkets\nretriev",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 2080,
            "end": 2082
          },
          "context": "\n])\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 2080,
            "end": 2082
          },
          "context": "\n])\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 2199,
            "end": 2202
          },
          "context": "uired\nDescriptio\nthe\nexchange\nAPI\nd\ni\nfetchSwapMarkets\nretrieve",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 2199,
            "end": 2202
          },
          "context": "uired\nDescriptio\nthe\nexchange\nAPI\nd\ni\nfetchSwapMarkets\nretrieve",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 2662,
            "end": 2665
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nhyperliquid\n \nparams",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 2662,
            "end": 2665
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nhyperliquid\n \nparams",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 2801,
            "end": 2803
          },
          "context": "[\n]\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 2801,
            "end": 2803
          },
          "context": "[\n]\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 3619,
            "end": 3621
          },
          "context": "n (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 3619,
            "end": 3621
          },
          "context": "n (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 3779,
            "end": 3782
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nfetchBalance\nquery f",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 3779,
            "end": 3782
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nfetchBalance\nquery f",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 4413,
            "end": 4415
          },
          "context": "[\n]\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 4413,
            "end": 4415
          },
          "context": "[\n]\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "A",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 4728,
            "end": 4729
          },
          "context": "yperliquid\nReturns: object  - A dictionary of order book\nstru",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 5167,
            "end": 5169
          },
          "context": "\n])\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 5167,
            "end": 5169
          },
          "context": "\n])\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 5294,
            "end": 5297
          },
          "context": "ptio\nspecific to\nthe\nexchange\nAPI\nd\ni\nfetchTickers\nfetches pric",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 5294,
            "end": 5297
          },
          "context": "ptio\nspecific to\nthe\nexchange\nAPI\nd\ni\nfetchTickers\nfetches pric",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 5948,
            "end": 5950
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 5948,
            "end": 5950
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 6575,
            "end": 6577
          },
          "context": "[\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 6575,
            "end": 6577
          },
          "context": "[\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AP",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 6706,
            "end": 6708
          },
          "context": "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nfetchOHLCV\nfetches historical",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AP",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 6706,
            "end": 6708
          },
          "context": "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nfetchOHLCV\nfetches historical",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "A",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 6899,
            "end": 6900
          },
          "context": "Returns: Array<Array<int>>  - A list of candles\nordered as ti",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "OHLC",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 7143,
            "end": 7147
          },
          "context": "\nYes\nunifie\nsymb\nthe m\nto fet\nOHLC\ndata \ntimeframe\nstring\nYes\nth",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "OHLC",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 7143,
            "end": 7147
          },
          "context": "\nYes\nunifie\nsymb\nthe m\nto fet\nOHLC\ndata \ntimeframe\nstring\nYes\nth",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 7267,
            "end": 7269
          },
          "context": " ([\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 7267,
            "end": 7269
          },
          "context": " ([\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 7527,
            "end": 7530
          },
          "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 7527,
            "end": 7530
          },
          "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 7809,
            "end": 7811
          },
          "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 7809,
            "end": 7811
          },
          "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AP",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 8256,
            "end": 8258
          },
          "context": "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nparams.until\nint\nNo\ntim\nin",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AP",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 8256,
            "end": 8258
          },
          "context": "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nparams.until\nint\nNo\ntim\nin",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 8378,
            "end": 8380
          },
          "context": "tring\nNo\nwa\nad\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 8378,
            "end": 8380
          },
          "context": "tring\nNo\nwa\nad\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 8964,
            "end": 8966
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 8964,
            "end": 8966
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 9644,
            "end": 9646
          },
          "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 9644,
            "end": 9646
          },
          "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 9822,
            "end": 9825
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nd\ni\ncreateOrdersRequest\ncreat",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 9822,
            "end": 9825
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nd\ni\ncreateOrdersRequest\ncreat",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 10374,
            "end": 10376
          },
          "context": "t (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 10374,
            "end": 10376
          },
          "context": "t (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 11098,
            "end": 11100
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 11098,
            "end": 11100
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "N",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 11436,
            "end": 11437
          },
          "context": "rray<string>\nYe\nsymbol\nstring\nN\nparams\nobject\nN\nparams.client",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "N",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 11452,
            "end": 11453
          },
          "context": "symbol\nstring\nN\nparams\nobject\nN\nparams.clientOrderId\nstring ,",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "N",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 11498,
            "end": 11499
          },
          "context": "rderId\nstring ,\nArray<string>\nN\nparams.vaultAddress\nstring\nN\n",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "N",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 11527,
            "end": 11528
          },
          "context": "\nN\nparams.vaultAddress\nstring\nN\ncancelOrdersForSymbols\ncancel",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 11938,
            "end": 11940
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 11938,
            "end": 11940
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 12349,
            "end": 12351
          },
          "context": "s (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 12349,
            "end": 12351
          },
          "context": "s (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 12883,
            "end": 12885
          },
          "context": "r (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 12883,
            "end": 12885
          },
          "context": "r (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 13499,
            "end": 13501
          },
          "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 13499,
            "end": 13501
          },
          "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 13816,
            "end": 13819
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateVault\ncreates ",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 13816,
            "end": 13819
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateVault\ncreates ",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 14065,
            "end": 14067
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 14065,
            "end": 14067
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 14308,
            "end": 14311
          },
          "context": "xtra\nparam\nspecifi\nthe\nexchan\nAPI\nd\nfetchFundingRateHistory\nfet",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 14308,
            "end": 14311
          },
          "context": "xtra\nparam\nspecifi\nthe\nexchan\nAPI\nd\nfetchFundingRateHistory\nfet",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 14756,
            "end": 14758
          },
          "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 14756,
            "end": 14758
          },
          "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 15018,
            "end": 15021
          },
          "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 15018,
            "end": 15021
          },
          "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 15280,
            "end": 15282
          },
          "context": "y (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 15280,
            "end": 15282
          },
          "context": "y (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 15809,
            "end": 15811
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 15809,
            "end": 15811
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 16397,
            "end": 16399
          },
          "context": "(\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 16397,
            "end": 16399
          },
          "context": "(\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 17002,
            "end": 17004
          },
          "context": "s (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 17002,
            "end": 17004
          },
          "context": "s (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 17568,
            "end": 17570
          },
          "context": "rde\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 17568,
            "end": 17570
          },
          "context": "rde\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 18236,
            "end": 18238
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 18236,
            "end": 18238
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 18932,
            "end": 18934
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 18932,
            "end": 18934
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 19034,
            "end": 19037
          },
          "context": "\n\nParam\nType\nRequired\nDescr\nAPI\nendp\nparams.until\nint\nNo\ntime",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 19034,
            "end": 19037
          },
          "context": "\n\nParam\nType\nRequired\nDescr\nAPI\nendp\nparams.until\nint\nNo\ntime",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 19583,
            "end": 19585
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 19583,
            "end": 19585
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 20186,
            "end": 20188
          },
          "context": "[\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 20186,
            "end": 20188
          },
          "context": "[\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "D",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 20361,
            "end": 20362
          },
          "context": "\nexchange\nParam\nType\nRequired\nD\nmarginMode\nstring\nYes\nm\nm\nb\n[",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "A",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 20464,
            "end": 20465
          },
          "context": "\nparams\nobject\nNo\ne\np\nsp\nth\ne\nA\ne\nparams.leverage\nstring\nNo\nt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 20601,
            "end": 20603
          },
          "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 20601,
            "end": 20603
          },
          "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 21067,
            "end": 21069
          },
          "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 21067,
            "end": 21069
          },
          "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 21424,
            "end": 21427
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nreduceMargin\nremove ",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 21424,
            "end": 21427
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nreduceMargin\nremove ",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 21816,
            "end": 21818
          },
          "context": ",\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 21816,
            "end": 21818
          },
          "context": ",\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 22025,
            "end": 22028
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nd\ni\ntransfer\ntransfer currenc",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 22025,
            "end": 22028
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nd\ni\ntransfer\ntransfer currenc",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 22443,
            "end": 22445
          },
          "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 22443,
            "end": 22445
          },
          "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "USDC",
          "type": "crypto_symbol",
          "pattern": "stock_ticker",
          "position": {
            "start": 22644,
            "end": 22648
          },
          "context": "ke a withdrawal (only support USDC)\nKind: instance method of hyp",
          "confidence": 1.0,
          "metadata": {
            "type": "crypto_symbol",
            "verified": true
          }
        },
        {
          "symbol": "USDC",
          "type": "crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 22644,
            "end": 22648
          },
          "context": "ke a withdrawal (only support USDC)\nKind: instance method of hyp",
          "confidence": 1.0,
          "metadata": {
            "type": "crypto_symbol",
            "verified": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 23048,
            "end": 23050
          },
          "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 23048,
            "end": 23050
          },
          "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 23455,
            "end": 23457
          },
          "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 23455,
            "end": 23457
          },
          "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 24072,
            "end": 24074
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 24072,
            "end": 24074
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 24229,
            "end": 24232
          },
          "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 24229,
            "end": 24232
          },
          "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 24637,
            "end": 24639
          },
          "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 24637,
            "end": 24639
          },
          "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 24793,
            "end": 24796
          },
          "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\nthe ",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 24793,
            "end": 24796
          },
          "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\nthe ",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 25209,
            "end": 25211
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 25209,
            "end": 25211
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 25371,
            "end": 25374
          },
          "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\nthe ",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 25371,
            "end": 25374
          },
          "context": "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\nthe ",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "CC",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 25683,
            "end": 25685
          },
          "context": "e\nsymbols\nArray<string>\nNo\nUn\nCC\nm\nsy\n\n\nhyperliquid\n code\n s",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "CC",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 25683,
            "end": 25685
          },
          "context": "e\nsymbols\nArray<string>\nNo\nUn\nCC\nm\nsy\n\n\nhyperliquid\n code\n s",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 25765,
            "end": 25767
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 25765,
            "end": 25767
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "CCXT",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 26103,
            "end": 26107
          },
          "context": "tio\nsymbol\nstring\nYes\nunified\nCCXT\nmarket\nsymbol\nparams\nobject\nN",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "CCXT",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 26103,
            "end": 26107
          },
          "context": "tio\nsymbol\nstring\nYes\nunified\nCCXT\nmarket\nsymbol\nparams\nobject\nN",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 26390,
            "end": 26392
          },
          "context": "(\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 26390,
            "end": 26392
          },
          "context": "(\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 26813,
            "end": 26816
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateOrdersWs\ncreat",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 26813,
            "end": 26816
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateOrdersWs\ncreat",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 27049,
            "end": 27051
          },
          "context": " ([\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 27049,
            "end": 27051
          },
          "context": " ([\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 27473,
            "end": 27476
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateOrderWs\ncreate",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 27473,
            "end": 27476
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateOrderWs\ncreate",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 27699,
            "end": 27701
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 27699,
            "end": 27701
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 28279,
            "end": 28281
          },
          "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 28279,
            "end": 28281
          },
          "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 28877,
            "end": 28879
          },
          "context": "ress\nstring\nNo\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 28877,
            "end": 28879
          },
          "context": "ress\nstring\nNo\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "A",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 29116,
            "end": 29117
          },
          "context": "yperliquid\nReturns: object  - A dictionary of order book\nstru",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 29506,
            "end": 29509
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\n\n\nhyperliquid\n id ",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 29506,
            "end": 29509
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\n\n\nhyperliquid\n id ",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 29596,
            "end": 29598
          },
          "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 29596,
            "end": 29598
          },
          "context": ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "A",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 29839,
            "end": 29840
          },
          "context": "yperliquid\nReturns: object  - A dictionary of order book\nstru",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 30165,
            "end": 30168
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\n\n\nhyperliquid\n sym",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 30165,
            "end": 30168
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\n\n\nhyperliquid\n sym",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 30312,
            "end": 30314
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 30312,
            "end": 30314
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 30856,
            "end": 30859
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nwatchTickers\nwatches",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 30856,
            "end": 30859
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nwatchTickers\nwatches",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 31097,
            "end": 31099
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 31097,
            "end": 31099
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AP",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 31441,
            "end": 31443
          },
          "context": "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nunWatchTickers\nunWatches a",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AP",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 31441,
            "end": 31443
          },
          "context": "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nunWatchTickers\nunWatches a",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 31851,
            "end": 31853
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 31851,
            "end": 31853
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AP",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 32022,
            "end": 32024
          },
          "context": "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nwatchMyTrades\nwatches info",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AP",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 32022,
            "end": 32024
          },
          "context": "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nwatchMyTrades\nwatches info",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 32453,
            "end": 32455
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 32453,
            "end": 32455
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 33017,
            "end": 33019
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 33017,
            "end": 33019
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 33252,
            "end": 33255
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nwatchOHLCV\nwatches h",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 33252,
            "end": 33255
          },
          "context": "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nwatchOHLCV\nwatches h",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "A",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 33451,
            "end": 33452
          },
          "context": "Returns: Array<Array<int>>  - A list of candles\nordered as ti",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 33763,
            "end": 33765
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 33763,
            "end": 33765
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "OHLCV",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 33872,
            "end": 33877
          },
          "context": "ype\nRequired\nDescrip\nto fetch\nOHLCV\ndata for\ntimeframe\nstring\nYes",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "OHLCV",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 33872,
            "end": 33877
          },
          "context": "ype\nRequired\nDescrip\nto fetch\nOHLCV\ndata for\ntimeframe\nstring\nYes",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 34091,
            "end": 34094
          },
          "context": "ra\nparame\nspecific\nthe\nexchan\nAPI\nd\ni\nunWatchOHLCV\nwatches hist",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 34091,
            "end": 34094
          },
          "context": "ra\nparame\nspecific\nthe\nexchan\nAPI\nd\ni\nunWatchOHLCV\nwatches hist",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "A",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 34287,
            "end": 34288
          },
          "context": "Returns: Array<Array<int>>  - A list of candles\n\n\nhyperliqu",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 34380,
            "end": 34382
          },
          "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 34380,
            "end": 34382
          },
          "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "OHLCV",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 34681,
            "end": 34686
          },
          "context": "ified\nsymbol\nthe mar\nto fetch\nOHLCV\ndata for\ntimeframe\nstring\nYes",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "OHLCV",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 34681,
            "end": 34686
          },
          "context": "ified\nsymbol\nthe mar\nto fetch\nOHLCV\ndata for\ntimeframe\nstring\nYes",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 34804,
            "end": 34807
          },
          "context": "ra\nparame\nspecific\nthe\nexchan\nAPI\nendpoin\nwatchOrders\nwatches i",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "API",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 34804,
            "end": 34807
          },
          "context": "ra\nparame\nspecific\nthe\nexchan\nAPI\nendpoin\nwatchOrders\nwatches i",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 35049,
            "end": 35051
          },
          "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 35049,
            "end": 35051
          },
          "context": "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_stock_ticker",
          "pattern": "stock_ticker",
          "position": {
            "start": 35527,
            "end": 35529
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.7,
          "metadata": {
            "needs_validation": true
          }
        },
        {
          "symbol": "AM",
          "type": "potential_crypto_symbol",
          "pattern": "crypto_symbol",
          "position": {
            "start": 35527,
            "end": 35529
          },
          "context": "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "confidence": 0.6,
          "metadata": {
            "needs_validation": true
          }
        }
      ],
      "statistics": {
        "total_symbols": 192,
        "unique_symbols": 11,
        "type_counts": {
          "stock_ticker": 102,
          "crypto_symbol": 90
        },
        "avg_confidence": 0.6567708333333333,
        "most_common_symbols": [
          [
            "AM",
            112
          ],
          [
            "API",
            48
          ],
          [
            "AP",
            8
          ],
          [
            "A",
            7
          ],
          [
            "N",
            4
          ],
          [
            "OHLCV",
            4
          ],
          [
            "OHLC",
            2
          ],
          [
            "USDC",
            2
          ],
          [
            "CC",
            2
          ],
          [
            "CCXT",
            2
          ]
        ],
        "symbol_density": 0.192
      },
      "preservation_map": {
        "__SYMBOL_0__": "AM",
        "__SYMBOL_1__": "AM",
        "__SYMBOL_2__": "AM",
        "__SYMBOL_3__": "AM",
        "__SYMBOL_4__": "API",
        "__SYMBOL_5__": "API",
        "__SYMBOL_6__": "AM",
        "__SYMBOL_7__": "AM",
        "__SYMBOL_8__": "API",
        "__SYMBOL_9__": "API",
        "__SYMBOL_10__": "API",
        "__SYMBOL_11__": "API",
        "__SYMBOL_12__": "AM",
        "__SYMBOL_13__": "AM",
        "__SYMBOL_14__": "AM",
        "__SYMBOL_15__": "AM",
        "__SYMBOL_16__": "API",
        "__SYMBOL_17__": "API",
        "__SYMBOL_18__": "AM",
        "__SYMBOL_19__": "AM",
        "__SYMBOL_20__": "A",
        "__SYMBOL_21__": "AM",
        "__SYMBOL_22__": "AM",
        "__SYMBOL_23__": "API",
        "__SYMBOL_24__": "API",
        "__SYMBOL_25__": "AM",
        "__SYMBOL_26__": "AM",
        "__SYMBOL_27__": "AM",
        "__SYMBOL_28__": "AM",
        "__SYMBOL_29__": "AP",
        "__SYMBOL_30__": "AP",
        "__SYMBOL_31__": "A",
        "__SYMBOL_32__": "OHLC",
        "__SYMBOL_33__": "OHLC",
        "__SYMBOL_34__": "AM",
        "__SYMBOL_35__": "AM",
        "__SYMBOL_36__": "API",
        "__SYMBOL_37__": "API",
        "__SYMBOL_38__": "AM",
        "__SYMBOL_39__": "AM",
        "__SYMBOL_40__": "AP",
        "__SYMBOL_41__": "AP",
        "__SYMBOL_42__": "AM",
        "__SYMBOL_43__": "AM",
        "__SYMBOL_44__": "AM",
        "__SYMBOL_45__": "AM",
        "__SYMBOL_46__": "AM",
        "__SYMBOL_47__": "AM",
        "__SYMBOL_48__": "API",
        "__SYMBOL_49__": "API",
        "__SYMBOL_50__": "AM",
        "__SYMBOL_51__": "AM",
        "__SYMBOL_52__": "AM",
        "__SYMBOL_53__": "AM",
        "__SYMBOL_54__": "N",
        "__SYMBOL_55__": "N",
        "__SYMBOL_56__": "N",
        "__SYMBOL_57__": "N",
        "__SYMBOL_58__": "AM",
        "__SYMBOL_59__": "AM",
        "__SYMBOL_60__": "AM",
        "__SYMBOL_61__": "AM",
        "__SYMBOL_62__": "AM",
        "__SYMBOL_63__": "AM",
        "__SYMBOL_64__": "AM",
        "__SYMBOL_65__": "AM",
        "__SYMBOL_66__": "API",
        "__SYMBOL_67__": "API",
        "__SYMBOL_68__": "AM",
        "__SYMBOL_69__": "AM",
        "__SYMBOL_70__": "API",
        "__SYMBOL_71__": "API",
        "__SYMBOL_72__": "AM",
        "__SYMBOL_73__": "AM",
        "__SYMBOL_74__": "API",
        "__SYMBOL_75__": "API",
        "__SYMBOL_76__": "AM",
        "__SYMBOL_77__": "AM",
        "__SYMBOL_78__": "AM",
        "__SYMBOL_79__": "AM",
        "__SYMBOL_80__": "AM",
        "__SYMBOL_81__": "AM",
        "__SYMBOL_82__": "AM",
        "__SYMBOL_83__": "AM",
        "__SYMBOL_84__": "AM",
        "__SYMBOL_85__": "AM",
        "__SYMBOL_86__": "AM",
        "__SYMBOL_87__": "AM",
        "__SYMBOL_88__": "AM",
        "__SYMBOL_89__": "AM",
        "__SYMBOL_90__": "API",
        "__SYMBOL_91__": "API",
        "__SYMBOL_92__": "AM",
        "__SYMBOL_93__": "AM",
        "__SYMBOL_94__": "AM",
        "__SYMBOL_95__": "AM",
        "__SYMBOL_96__": "D",
        "__SYMBOL_97__": "A",
        "__SYMBOL_98__": "AM",
        "__SYMBOL_99__": "AM",
        "__SYMBOL_100__": "AM",
        "__SYMBOL_101__": "AM",
        "__SYMBOL_102__": "API",
        "__SYMBOL_103__": "API",
        "__SYMBOL_104__": "AM",
        "__SYMBOL_105__": "AM",
        "__SYMBOL_106__": "API",
        "__SYMBOL_107__": "API",
        "__SYMBOL_108__": "AM",
        "__SYMBOL_109__": "AM",
        "__SYMBOL_110__": "USDC",
        "__SYMBOL_111__": "USDC",
        "__SYMBOL_112__": "AM",
        "__SYMBOL_113__": "AM",
        "__SYMBOL_114__": "AM",
        "__SYMBOL_115__": "AM",
        "__SYMBOL_116__": "AM",
        "__SYMBOL_117__": "AM",
        "__SYMBOL_118__": "API",
        "__SYMBOL_119__": "API",
        "__SYMBOL_120__": "AM",
        "__SYMBOL_121__": "AM",
        "__SYMBOL_122__": "API",
        "__SYMBOL_123__": "API",
        "__SYMBOL_124__": "AM",
        "__SYMBOL_125__": "AM",
        "__SYMBOL_126__": "API",
        "__SYMBOL_127__": "API",
        "__SYMBOL_128__": "CC",
        "__SYMBOL_129__": "CC",
        "__SYMBOL_130__": "AM",
        "__SYMBOL_131__": "AM",
        "__SYMBOL_132__": "CCXT",
        "__SYMBOL_133__": "CCXT",
        "__SYMBOL_134__": "AM",
        "__SYMBOL_135__": "AM",
        "__SYMBOL_136__": "API",
        "__SYMBOL_137__": "API",
        "__SYMBOL_138__": "AM",
        "__SYMBOL_139__": "AM",
        "__SYMBOL_140__": "API",
        "__SYMBOL_141__": "API",
        "__SYMBOL_142__": "AM",
        "__SYMBOL_143__": "AM",
        "__SYMBOL_144__": "AM",
        "__SYMBOL_145__": "AM",
        "__SYMBOL_146__": "AM",
        "__SYMBOL_147__": "AM",
        "__SYMBOL_148__": "A",
        "__SYMBOL_149__": "API",
        "__SYMBOL_150__": "API",
        "__SYMBOL_151__": "AM",
        "__SYMBOL_152__": "AM",
        "__SYMBOL_153__": "A",
        "__SYMBOL_154__": "API",
        "__SYMBOL_155__": "API",
        "__SYMBOL_156__": "AM",
        "__SYMBOL_157__": "AM",
        "__SYMBOL_158__": "API",
        "__SYMBOL_159__": "API",
        "__SYMBOL_160__": "AM",
        "__SYMBOL_161__": "AM",
        "__SYMBOL_162__": "AP",
        "__SYMBOL_163__": "AP",
        "__SYMBOL_164__": "AM",
        "__SYMBOL_165__": "AM",
        "__SYMBOL_166__": "AP",
        "__SYMBOL_167__": "AP",
        "__SYMBOL_168__": "AM",
        "__SYMBOL_169__": "AM",
        "__SYMBOL_170__": "AM",
        "__SYMBOL_171__": "AM",
        "__SYMBOL_172__": "API",
        "__SYMBOL_173__": "API",
        "__SYMBOL_174__": "A",
        "__SYMBOL_175__": "AM",
        "__SYMBOL_176__": "AM",
        "__SYMBOL_177__": "OHLCV",
        "__SYMBOL_178__": "OHLCV",
        "__SYMBOL_179__": "API",
        "__SYMBOL_180__": "API",
        "__SYMBOL_181__": "A",
        "__SYMBOL_182__": "AM",
        "__SYMBOL_183__": "AM",
        "__SYMBOL_184__": "OHLCV",
        "__SYMBOL_185__": "OHLCV",
        "__SYMBOL_186__": "API",
        "__SYMBOL_187__": "API",
        "__SYMBOL_188__": "AM",
        "__SYMBOL_189__": "AM",
        "__SYMBOL_190__": "AM",
        "__SYMBOL_191__": "AM"
      }
    },
    "symbol_glossary": {
      "AM": {
        "type": "potential_stock_ticker",
        "definition": "Symbol: AM",
        "occurrences": 112,
        "contexts": [
          "\nfetchPosition\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "pers/api/info-\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n])\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "[\n]\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "n (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "[\n]\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n])\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "[\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          " ([\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "tring\nNo\nwa\nad\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "t (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "s (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "r (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "y (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "s (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "rde\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "[\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          ",\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          " ([\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "ress\nstring\nNo\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\nfetchPosition\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "pers/api/info-\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n])\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "[\n]\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "n (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "[\n]\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n])\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "[\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          " ([\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "tring\nNo\nwa\nad\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "t (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "s (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "r (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "y (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "s (\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "rde\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "[\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          ",\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n[\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          " ([\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "ress\nstring\nNo\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          ",\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "(\n,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt",
          "\n[,\njavascript\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt"
        ],
        "confidence": 0.7
      },
      "API": {
        "type": "potential_stock_ticker",
        "definition": "Symbol: API",
        "occurrences": 48,
        "contexts": [
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nfetchMarkets\nretriev",
          "uired\nDescriptio\nthe\nexchange\nAPI\nd\ni\nfetchSwapMarkets\nretrieve",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nhyperliquid\n \nparams",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nfetchBalance\nquery f",
          "ptio\nspecific to\nthe\nexchange\nAPI\nd\ni\nfetchTickers\nfetches pric",
          "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
          "eter\nspecific to\nthe\nexchange\nAPI\nd\ni\ncreateOrdersRequest\ncreat",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateVault\ncreates ",
          "xtra\nparam\nspecifi\nthe\nexchan\nAPI\nd\nfetchFundingRateHistory\nfet",
          "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
          "\n\nParam\nType\nRequired\nDescr\nAPI\nendp\nparams.until\nint\nNo\ntime",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nreduceMargin\nremove ",
          "eter\nspecific to\nthe\nexchange\nAPI\nd\ni\ntransfer\ntransfer currenc",
          "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
          "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\nthe ",
          "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\nthe ",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateOrdersWs\ncreat",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateOrderWs\ncreate",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\n\n\nhyperliquid\n id ",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\n\n\nhyperliquid\n sym",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nwatchTickers\nwatches",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nwatchOHLCV\nwatches h",
          "ra\nparame\nspecific\nthe\nexchan\nAPI\nd\ni\nunWatchOHLCV\nwatches hist",
          "ra\nparame\nspecific\nthe\nexchan\nAPI\nendpoin\nwatchOrders\nwatches i",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nfetchMarkets\nretriev",
          "uired\nDescriptio\nthe\nexchange\nAPI\nd\ni\nfetchSwapMarkets\nretrieve",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nhyperliquid\n \nparams",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nfetchBalance\nquery f",
          "ptio\nspecific to\nthe\nexchange\nAPI\nd\ni\nfetchTickers\nfetches pric",
          "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
          "eter\nspecific to\nthe\nexchange\nAPI\nd\ni\ncreateOrdersRequest\ncreat",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateVault\ncreates ",
          "xtra\nparam\nspecifi\nthe\nexchan\nAPI\nd\nfetchFundingRateHistory\nfet",
          "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
          "\n\nParam\nType\nRequired\nDescr\nAPI\nendp\nparams.until\nint\nNo\ntime",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nreduceMargin\nremove ",
          "eter\nspecific to\nthe\nexchange\nAPI\nd\ni\ntransfer\ntransfer currenc",
          "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\ntime",
          "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\nthe ",
          "o\nextra\nparam\nspeci\nthe\nexcha\nAPI\nendp\nparams.until\nint\nNo\nthe ",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateOrdersWs\ncreat",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\ncreateOrderWs\ncreate",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\n\n\nhyperliquid\n id ",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\n\n\nhyperliquid\n sym",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nwatchTickers\nwatches",
          "eter\nspecific to\nthe\nexchange\nAPI\nendpoint\nwatchOHLCV\nwatches h",
          "ra\nparame\nspecific\nthe\nexchan\nAPI\nd\ni\nunWatchOHLCV\nwatches hist",
          "ra\nparame\nspecific\nthe\nexchan\nAPI\nendpoin\nwatchOrders\nwatches i"
        ],
        "confidence": 0.7
      },
      "A": {
        "type": "potential_stock_ticker",
        "definition": "Symbol: A",
        "occurrences": 7,
        "contexts": [
          "yperliquid\nReturns: object  - A dictionary of order book\nstru",
          "Returns: Array<Array<int>>  - A list of candles\nordered as ti",
          "\nparams\nobject\nNo\ne\np\nsp\nth\ne\nA\ne\nparams.leverage\nstring\nNo\nt",
          "yperliquid\nReturns: object  - A dictionary of order book\nstru",
          "yperliquid\nReturns: object  - A dictionary of order book\nstru",
          "Returns: Array<Array<int>>  - A list of candles\nordered as ti",
          "Returns: Array<Array<int>>  - A list of candles\n\n\nhyperliqu"
        ],
        "confidence": 0.7
      },
      "AP": {
        "type": "potential_stock_ticker",
        "definition": "Symbol: AP",
        "occurrences": 8,
        "contexts": [
          "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nfetchOHLCV\nfetches historical",
          "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nparams.until\nint\nNo\ntim\nin",
          "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nunWatchTickers\nunWatches a",
          "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nwatchMyTrades\nwatches info",
          "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nfetchOHLCV\nfetches historical",
          "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nparams.until\nint\nNo\ntim\nin",
          "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nunWatchTickers\nunWatches a",
          "rams\nobject\nNo\nex\npa\nsp\nth\nex\nAP\nen\nwatchMyTrades\nwatches info"
        ],
        "confidence": 0.7
      },
      "OHLC": {
        "type": "potential_stock_ticker",
        "definition": "Symbol: OHLC",
        "occurrences": 2,
        "contexts": [
          "\nYes\nunifie\nsymb\nthe m\nto fet\nOHLC\ndata \ntimeframe\nstring\nYes\nth",
          "\nYes\nunifie\nsymb\nthe m\nto fet\nOHLC\ndata \ntimeframe\nstring\nYes\nth"
        ],
        "confidence": 0.7
      },
      "N": {
        "type": "potential_stock_ticker",
        "definition": "Symbol: N",
        "occurrences": 4,
        "contexts": [
          "rray<string>\nYe\nsymbol\nstring\nN\nparams\nobject\nN\nparams.client",
          "symbol\nstring\nN\nparams\nobject\nN\nparams.clientOrderId\nstring ,",
          "rderId\nstring ,\nArray<string>\nN\nparams.vaultAddress\nstring\nN\n",
          "\nN\nparams.vaultAddress\nstring\nN\ncancelOrdersForSymbols\ncancel"
        ],
        "confidence": 0.7
      },
      "D": {
        "type": "potential_stock_ticker",
        "definition": "Symbol: D",
        "occurrences": 1,
        "contexts": [
          "\nexchange\nParam\nType\nRequired\nD\nmarginMode\nstring\nYes\nm\nm\nb\n["
        ],
        "confidence": 0.7
      },
      "USDC": {
        "type": "crypto_symbol",
        "definition": "Cryptocurrency symbol: USDC",
        "occurrences": 2,
        "contexts": [
          "ke a withdrawal (only support USDC)\nKind: instance method of hyp",
          "ke a withdrawal (only support USDC)\nKind: instance method of hyp"
        ],
        "confidence": 1.0
      },
      "CC": {
        "type": "potential_stock_ticker",
        "definition": "Symbol: CC",
        "occurrences": 2,
        "contexts": [
          "e\nsymbols\nArray<string>\nNo\nUn\nCC\nm\nsy\n\n\nhyperliquid\n code\n s",
          "e\nsymbols\nArray<string>\nNo\nUn\nCC\nm\nsy\n\n\nhyperliquid\n code\n s"
        ],
        "confidence": 0.7
      },
      "CCXT": {
        "type": "potential_stock_ticker",
        "definition": "Symbol: CCXT",
        "occurrences": 2,
        "contexts": [
          "tio\nsymbol\nstring\nYes\nunified\nCCXT\nmarket\nsymbol\nparams\nobject\nN",
          "tio\nsymbol\nstring\nYes\nunified\nCCXT\nmarket\nsymbol\nparams\nobject\nN"
        ],
        "confidence": 0.7
      },
      "OHLCV": {
        "type": "potential_stock_ticker",
        "definition": "Symbol: OHLCV",
        "occurrences": 4,
        "contexts": [
          "ype\nRequired\nDescrip\nto fetch\nOHLCV\ndata for\ntimeframe\nstring\nYes",
          "ified\nsymbol\nthe mar\nto fetch\nOHLCV\ndata for\ntimeframe\nstring\nYes",
          "ype\nRequired\nDescrip\nto fetch\nOHLCV\ndata for\ntimeframe\nstring\nYes",
          "ified\nsymbol\nthe mar\nto fetch\nOHLCV\ndata for\ntimeframe\nstring\nYes"
        ],
        "confidence": 0.7
      }
    },
    "academic_analysis": {
      "is_academic_paper": false,
      "confidence": 0.0,
      "score": 0,
      "indicators_found": [],
      "citation_count": 0,
      "recommended_thresholds": null
    }
  },
  "tables": [
    {
      "table_id": "table_1",
      "page": 3,
      "accuracy": 99.99999999999999,
      "whitespace": 0.0,
      "order": 1,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparameterspecific totheexchangeAPIendpoint"
        }
      ],
      "shape": [
        2,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_2",
      "page": 3,
      "accuracy": 100.0,
      "whitespace": 0.0,
      "order": 2,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparameterspecific to"
        }
      ],
      "shape": [
        2,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_3",
      "page": 4,
      "accuracy": 100.00000000000001,
      "whitespace": 37.5,
      "order": 3,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "",
          "1": "",
          "2": "",
          "3": "theexchangeAPI"
        }
      ],
      "shape": [
        2,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_4",
      "page": 4,
      "accuracy": 99.99999999999999,
      "whitespace": 0.0,
      "order": 4,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparameterspecific totheexchangeAPIendpoint"
        }
      ],
      "shape": [
        2,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_5",
      "page": 5,
      "accuracy": 99.2472951441895,
      "whitespace": 0.0,
      "order": 5,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Description"
        },
        {
          "0": "price",
          "1": "float",
          "2": "the price to usein thecalculation"
        },
        {
          "0": "amountPrecision",
          "1": "int",
          "2": "theamountPrecisioto use in thecalculation"
        },
        {
          "0": "maxDecimals",
          "1": "int",
          "2": "themaxDecimals tuse in thecalculation"
        }
      ],
      "shape": [
        4,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_6",
      "page": 6,
      "accuracy": 99.99999999999999,
      "whitespace": 0.0,
      "order": 6,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparameterspecific totheexchangeAPIendpoint"
        }
      ],
      "shape": [
        2,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_7",
      "page": 6,
      "accuracy": 94.85902036093323,
      "whitespace": 0.0,
      "order": 7,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extra specifiexchaendpo"
        },
        {
          "0": "params.user",
          "1": "string",
          "2": "No",
          "3": "user adefau"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_8",
      "page": 7,
      "accuracy": 95.93041387815686,
      "whitespace": 25.0,
      "order": 8,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "",
          "1": "",
          "2": "",
          "3": "this.wif not"
        },
        {
          "0": "params.type",
          "1": "string",
          "2": "No",
          "3": "walle['spot"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_9",
      "page": 7,
      "accuracy": 99.59585770383802,
      "whitespace": 0.0,
      "order": 9,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiedsymbol ofthe marketto fetchthe orderbook for"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "themaximumamount oforder bookentries toreturn"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparameter"
        }
      ],
      "shape": [
        4,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_10",
      "page": 8,
      "accuracy": 100.0,
      "whitespace": 37.5,
      "order": 10,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "",
          "1": "",
          "2": "",
          "3": "specific totheexchangeAPI"
        }
      ],
      "shape": [
        2,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_11",
      "page": 8,
      "accuracy": 100.00000000000001,
      "whitespace": 0.0,
      "order": 11,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required"
        },
        {
          "0": "symbols",
          "1": "Array<string>",
          "2": "No"
        }
      ],
      "shape": [
        2,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_12",
      "page": 9,
      "accuracy": 100.00000000000001,
      "whitespace": 25.0,
      "order": 12,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required"
        },
        {
          "0": "",
          "1": "",
          "2": ""
        },
        {
          "0": "params",
          "1": "object",
          "2": "No"
        },
        {
          "0": "params.type",
          "1": "string",
          "2": "No"
        }
      ],
      "shape": [
        4,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_13",
      "page": 9,
      "accuracy": 92.4512770955986,
      "whitespace": 0.0,
      "order": 13,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "symbols",
          "1": "Array<string>",
          "2": "No",
          "3": "lisun"
        }
      ],
      "shape": [
        2,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_14",
      "page": 10,
      "accuracy": 90.430181480258,
      "whitespace": 25.0,
      "order": 14,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "",
          "1": "",
          "2": "",
          "3": "m sy"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "expaspthexAP"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_15",
      "page": 10,
      "accuracy": 96.20865100541616,
      "whitespace": 0.0,
      "order": 15,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descr"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiesymbthe mto fetOHLCdata"
        },
        {
          "0": "timeframe",
          "1": "string",
          "2": "Yes",
          "3": "the leof timeach"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_16",
      "page": 11,
      "accuracy": 96.49667399890708,
      "whitespace": 12.5,
      "order": 16,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descr"
        },
        {
          "0": "",
          "1": "",
          "2": "",
          "3": "candlrepresuppo'1m', ''1h', '1"
        },
        {
          "0": "since",
          "1": "int",
          "2": "No",
          "3": "timesin msthe ecandlfetch"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "themaxiamoucandlfetch"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparamspecitheexchaAPIendp"
        },
        {
          "0": "params.until",
          "1": "int",
          "2": "No",
          "3": "timesin msthe lacandl"
        }
      ],
      "shape": [
        6,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_17",
      "page": 12,
      "accuracy": 90.45976706998515,
      "whitespace": 0.0,
      "order": 17,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unmasy"
        },
        {
          "0": "since",
          "1": "int",
          "2": "No",
          "3": "thtimto tra"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "thmanutrastrto"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "expaspthexAPen"
        },
        {
          "0": "params.until",
          "1": "int",
          "2": "No",
          "3": "timin thtra"
        },
        {
          "0": "params.address",
          "1": "string",
          "2": "No",
          "3": "waadthtra"
        },
        {
          "0": "params.user",
          "1": "string",
          "2": "No",
          "3": "waad"
        }
      ],
      "shape": [
        8,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_18",
      "page": 13,
      "accuracy": 100.0,
      "whitespace": 0.0,
      "order": 18,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "type",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "side",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "amount",
          "1": "float",
          "2": "Yes"
        },
        {
          "0": "price",
          "1": "float",
          "2": "No"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No"
        },
        {
          "0": "params.timeInForce",
          "1": "string",
          "2": "No"
        },
        {
          "0": "params.postOnly",
          "1": "bool",
          "2": "No"
        },
        {
          "0": "params.reduceOnly",
          "1": "bool",
          "2": "No"
        }
      ],
      "shape": [
        10,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_19",
      "page": 14,
      "accuracy": 100.00000000000001,
      "whitespace": 0.0,
      "order": 19,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required"
        },
        {
          "0": "params.triggerPrice",
          "1": "float",
          "2": "No"
        },
        {
          "0": "params.clientOrderId",
          "1": "string",
          "2": "No"
        },
        {
          "0": "params.slippage",
          "1": "string",
          "2": "No"
        },
        {
          "0": "params.vaultAddress",
          "1": "string",
          "2": "No"
        }
      ],
      "shape": [
        5,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_20",
      "page": 14,
      "accuracy": 99.46836668480117,
      "whitespace": 0.0,
      "order": 20,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "orders",
          "1": "Array",
          "2": "Yes",
          "3": "list oforders tocreate, eacobjectshouldcontain thparameterrequired bcreateOrdenamelysymbol,type, side,amount,"
        }
      ],
      "shape": [
        2,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_21",
      "page": 15,
      "accuracy": 99.87647899240288,
      "whitespace": 25.0,
      "order": 21,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "",
          "1": "",
          "2": "",
          "3": "price andparams"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparameterspecific totheexchangeAPI"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_22",
      "page": 15,
      "accuracy": 100.0,
      "whitespace": 0.0,
      "order": 22,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Description"
        },
        {
          "0": "orders",
          "1": "Array",
          "2": "list of orders to create,each object shouldcontain theparameters requiredby createOrder, namelysymbol, type, side,amount, price andparams"
        }
      ],
      "shape": [
        2,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_23",
      "page": 16,
      "accuracy": 100.00000000000001,
      "whitespace": 0.0,
      "order": 23,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required"
        },
        {
          "0": "id",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No"
        },
        {
          "0": "params.clientOrderId",
          "1": "string",
          "2": "No"
        },
        {
          "0": "params.vaultAddress",
          "1": "string",
          "2": "No"
        }
      ],
      "shape": [
        6,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_24",
      "page": 17,
      "accuracy": 96.88202326069049,
      "whitespace": 0.0,
      "order": 24,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Re"
        },
        {
          "0": "ids",
          "1": "Array<string>",
          "2": "Ye"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "N"
        },
        {
          "0": "params",
          "1": "object",
          "2": "N"
        },
        {
          "0": "params.clientOrderId",
          "1": "string ,Array<string>",
          "2": "N"
        },
        {
          "0": "params.vaultAddress",
          "1": "string",
          "2": "N"
        }
      ],
      "shape": [
        6,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_25",
      "page": 18,
      "accuracy": 99.6153957528743,
      "whitespace": 0.0,
      "order": 25,
      "data": [
        {
          "0": "Param",
          "1": "Type"
        },
        {
          "0": "orders",
          "1": "Array<CancellationRe"
        },
        {
          "0": "params",
          "1": "object"
        },
        {
          "0": "params.vaultAddress",
          "1": "string"
        }
      ],
      "shape": [
        4,
        2
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_26",
      "page": 19,
      "accuracy": 99.99999999999999,
      "whitespace": 0.0,
      "order": 26,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required"
        },
        {
          "0": "timeout",
          "1": "number",
          "2": "Yes"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No"
        },
        {
          "0": "params.vaultAddress",
          "1": "string",
          "2": "No"
        }
      ],
      "shape": [
        4,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_27",
      "page": 19,
      "accuracy": 100.00000000000001,
      "whitespace": 0.0,
      "order": 27,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required"
        },
        {
          "0": "id",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "type",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "side",
          "1": "string",
          "2": "Yes"
        }
      ],
      "shape": [
        5,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_28",
      "page": 20,
      "accuracy": 99.99999999999997,
      "whitespace": 0.0,
      "order": 28,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required"
        },
        {
          "0": "amount",
          "1": "float",
          "2": "Yes"
        },
        {
          "0": "price",
          "1": "float",
          "2": "No"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No"
        },
        {
          "0": "params.timeInForce",
          "1": "string",
          "2": "No"
        },
        {
          "0": "params.postOnly",
          "1": "bool",
          "2": "No"
        },
        {
          "0": "params.reduceOnly",
          "1": "bool",
          "2": "No"
        },
        {
          "0": "params.triggerPrice",
          "1": "float",
          "2": "No"
        },
        {
          "0": "params.clientOrderId",
          "1": "string",
          "2": "No"
        },
        {
          "0": "params.vaultAddress",
          "1": "string",
          "2": "No"
        }
      ],
      "shape": [
        10,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_29",
      "page": 21,
      "accuracy": 99.6345020958008,
      "whitespace": 0.0,
      "order": 29,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "orders",
          "1": "Array",
          "2": "Yes",
          "3": "list oforders tocreate, eacobjectshouldcontain thparameterrequired bcreateOrdenamelysymbol,type, side,amount,price andparams"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparameterspecific totheexchangeAPIendpoint"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_30",
      "page": 21,
      "accuracy": 97.87326314945065,
      "whitespace": 0.0,
      "order": 30,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descrip"
        },
        {
          "0": "name",
          "1": "string",
          "2": "Yes",
          "3": "The naof thevault"
        }
      ],
      "shape": [
        2,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_31",
      "page": 22,
      "accuracy": 98.20179231934968,
      "whitespace": 0.0,
      "order": 31,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descrip"
        },
        {
          "0": "description",
          "1": "string",
          "2": "Yes",
          "3": "Thedescripof thevault"
        },
        {
          "0": "initialUsd",
          "1": "number",
          "2": "Yes",
          "3": "TheinitialUof thevault"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparamspecifitheexchanAPI"
        }
      ],
      "shape": [
        4,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_32",
      "page": 22,
      "accuracy": 96.85192985327802,
      "whitespace": 0.0,
      "order": 32,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descr"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiesymbthe mto fetthe"
        }
      ],
      "shape": [
        2,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_33",
      "page": 23,
      "accuracy": 97.0755274495598,
      "whitespace": 12.5,
      "order": 33,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descr"
        },
        {
          "0": "",
          "1": "",
          "2": "",
          "3": "fundirate hfor"
        },
        {
          "0": "since",
          "1": "int",
          "2": "No",
          "3": "timesin msthe efundirate tfetch"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "themaxiamoufundiratestructto fet"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparamspecitheexchaAPIendp"
        },
        {
          "0": "params.until",
          "1": "int",
          "2": "No",
          "3": "timesin msthe lafundi"
        }
      ],
      "shape": [
        6,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_34",
      "page": 24,
      "accuracy": 94.5011012965633,
      "whitespace": 3.571428571428571,
      "order": 34,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": ""
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unsy"
        },
        {
          "0": "since",
          "1": "int",
          "2": "No",
          "3": "thmsor"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "thnuorret"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "exspexen"
        },
        {
          "0": "params.user",
          "1": "string",
          "2": "No",
          "3": "usdethno"
        },
        {
          "0": "params.method",
          "1": "string",
          "2": "No",
          "3": "'op'frde'fr"
        }
      ],
      "shape": [
        7,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_35",
      "page": 25,
      "accuracy": 96.05041599202382,
      "whitespace": 0.0,
      "order": 35,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiesymbo"
        },
        {
          "0": "since",
          "1": "int",
          "2": "No",
          "3": "the eain ms open"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "the mnumbordersto ret"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extra specifiexchaendpo"
        },
        {
          "0": "params.user",
          "1": "string",
          "2": "No",
          "3": "user adefauthis.wif not"
        }
      ],
      "shape": [
        6,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_36",
      "page": 26,
      "accuracy": 96.05041599202382,
      "whitespace": 0.0,
      "order": 36,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiesymbo"
        },
        {
          "0": "since",
          "1": "int",
          "2": "No",
          "3": "the eain ms open"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "the mnumbordersto ret"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extra specifiexchaendpo"
        },
        {
          "0": "params.user",
          "1": "string",
          "2": "No",
          "3": "user adefauthis.wif not"
        }
      ],
      "shape": [
        6,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_37",
      "page": 26,
      "accuracy": 95.80212674673874,
      "whitespace": 0.0,
      "order": 37,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiesymbo"
        },
        {
          "0": "since",
          "1": "int",
          "2": "No",
          "3": "the eain ms open"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_38",
      "page": 27,
      "accuracy": 96.06605656290364,
      "whitespace": 0.0,
      "order": 38,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "the mnumbordersto ret"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extra specifiexchaendpo"
        },
        {
          "0": "params.user",
          "1": "string",
          "2": "No",
          "3": "user adefauthis.w"
        }
      ],
      "shape": [
        4,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_39",
      "page": 27,
      "accuracy": 96.25382674829757,
      "whitespace": 0.0,
      "order": 39,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiesymbo"
        },
        {
          "0": "since",
          "1": "int",
          "2": "No",
          "3": "the eain ms open"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "the mnumbordersto ret"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extra specifi"
        }
      ],
      "shape": [
        5,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_40",
      "page": 28,
      "accuracy": 95.31366137556124,
      "whitespace": 25.0,
      "order": 40,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "",
          "1": "",
          "2": "",
          "3": "exchaendpo"
        },
        {
          "0": "params.user",
          "1": "string",
          "2": "No",
          "3": "user adefauthis.w"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_41",
      "page": 28,
      "accuracy": 96.47404643367489,
      "whitespace": 0.0,
      "order": 41,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "id",
          "1": "string",
          "2": "Yes",
          "3": "order"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiethe morder in"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extra specifiexchaendpo"
        },
        {
          "0": "params.user",
          "1": "string",
          "2": "No",
          "3": "user adefauthis.wif not"
        }
      ],
      "shape": [
        5,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_42",
      "page": 29,
      "accuracy": 97.3660654743689,
      "whitespace": 0.0,
      "order": 42,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descr"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiemarksymb"
        },
        {
          "0": "since",
          "1": "int",
          "2": "No",
          "3": "the etime to fettrade"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "themaxinumbtradestructto ret"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparamspecitheexcha"
        }
      ],
      "shape": [
        5,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_43",
      "page": 30,
      "accuracy": 97.2392696375404,
      "whitespace": 25.0,
      "order": 43,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descr"
        },
        {
          "0": "",
          "1": "",
          "2": "",
          "3": "APIendp"
        },
        {
          "0": "params.until",
          "1": "int",
          "2": "No",
          "3": "timesin msthe la"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_44",
      "page": 30,
      "accuracy": 95.93267942099463,
      "whitespace": 50.0,
      "order": 44,
      "data": [
        {
          "0": "ParamTypeRequired",
          "1": "",
          "2": "",
          "3": "De"
        },
        {
          "0": "stringsymbolYes",
          "1": "",
          "2": "",
          "3": "unifiesymbomarkepositi"
        },
        {
          "0": "objectparamsNo",
          "1": "",
          "2": "",
          "3": "extra specifiexchaendpo"
        },
        {
          "0": "stringparams.userNo",
          "1": "",
          "2": "",
          "3": "user adefauthis.wif not"
        }
      ],
      "shape": [
        4,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_45",
      "page": 31,
      "accuracy": 99.99999999999999,
      "whitespace": 0.0,
      "order": 45,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required"
        },
        {
          "0": "symbols",
          "1": "Array<string>",
          "2": "No"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No"
        },
        {
          "0": "params.user",
          "1": "string",
          "2": "No"
        }
      ],
      "shape": [
        4,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_46",
      "page": 32,
      "accuracy": 82.3104523104891,
      "whitespace": 0.0,
      "order": 46,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "D"
        },
        {
          "0": "marginMode",
          "1": "string",
          "2": "Yes",
          "3": "m m b [i c"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "u m sp h d uythth"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "e p se A eth"
        },
        {
          "0": "params.leverage",
          "1": "string",
          "2": "No",
          "3": "m (thleresetrs"
        }
      ],
      "shape": [
        5,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_47",
      "page": 33,
      "accuracy": 100.00000000000001,
      "whitespace": 0.0,
      "order": 47,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required"
        },
        {
          "0": "leverage",
          "1": "float",
          "2": "Yes"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No"
        },
        {
          "0": "params.marginMode",
          "1": "string",
          "2": "No"
        }
      ],
      "shape": [
        5,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_48",
      "page": 34,
      "accuracy": 99.54910314659762,
      "whitespace": 0.0,
      "order": 48,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiedmarketsymbol"
        },
        {
          "0": "amount",
          "1": "float",
          "2": "Yes",
          "3": "amount ofmargin toadd"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparameterspecific totheexchangeAPIendpoint"
        }
      ],
      "shape": [
        4,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_49",
      "page": 34,
      "accuracy": 99.73185829557056,
      "whitespace": 0.0,
      "order": 49,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiedmarketsymbol"
        }
      ],
      "shape": [
        2,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_50",
      "page": 35,
      "accuracy": 99.41383409057696,
      "whitespace": 0.0,
      "order": 50,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "amount",
          "1": "float",
          "2": "Yes",
          "3": "theamount ofmargin toremove"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparameterspecific totheexchangeAPI"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_51",
      "page": 35,
      "accuracy": 99.99999999999999,
      "whitespace": 0.0,
      "order": 51,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required"
        },
        {
          "0": "code",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "amount",
          "1": "float",
          "2": "Yes"
        },
        {
          "0": "fromAccount",
          "1": "string",
          "2": "Yes"
        }
      ],
      "shape": [
        4,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_52",
      "page": 36,
      "accuracy": 99.99999999999999,
      "whitespace": 0.0,
      "order": 52,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required"
        },
        {
          "0": "toAccount",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No"
        },
        {
          "0": "params.vaultAddress",
          "1": "string",
          "2": "No"
        }
      ],
      "shape": [
        4,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_53",
      "page": 37,
      "accuracy": 99.99999999999997,
      "whitespace": 0.0,
      "order": 53,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required"
        },
        {
          "0": "code",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "amount",
          "1": "float",
          "2": "Yes"
        },
        {
          "0": "address",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "tag",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No"
        },
        {
          "0": "params.vaultAddress",
          "1": "string",
          "2": "No"
        }
      ],
      "shape": [
        7,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_54",
      "page": 38,
      "accuracy": 95.7177970908833,
      "whitespace": 0.0,
      "order": 54,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiesymbo"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extra specifiexchaendpo"
        },
        {
          "0": "params.user",
          "1": "string",
          "2": "No",
          "3": "user adefauthis.wif not"
        }
      ],
      "shape": [
        4,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_55",
      "page": 38,
      "accuracy": 97.45444774066237,
      "whitespace": 0.0,
      "order": 55,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descr"
        },
        {
          "0": "code",
          "1": "string",
          "2": "No",
          "3": "unifiecurrecode"
        },
        {
          "0": "since",
          "1": "int",
          "2": "No",
          "3": "timesin msthe eledgeentry"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "maxnumbledge"
        }
      ],
      "shape": [
        4,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_56",
      "page": 39,
      "accuracy": 95.50928291505855,
      "whitespace": 18.75,
      "order": 56,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descr"
        },
        {
          "0": "",
          "1": "",
          "2": "",
          "3": "entriereturn"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparamspecitheexchaAPIendp"
        },
        {
          "0": "params.until",
          "1": "int",
          "2": "No",
          "3": "timesin msthe laledge"
        }
      ],
      "shape": [
        4,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_57",
      "page": 39,
      "accuracy": 98.85125240222463,
      "whitespace": 0.0,
      "order": 57,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Desc"
        },
        {
          "0": "code",
          "1": "string",
          "2": "Yes",
          "3": "unifiecurrecode"
        },
        {
          "0": "since",
          "1": "int",
          "2": "No",
          "3": "the etime to fetdepo"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "themaxinumbdepo"
        }
      ],
      "shape": [
        4,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_58",
      "page": 40,
      "accuracy": 96.66772555540267,
      "whitespace": 18.75,
      "order": 58,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Desc"
        },
        {
          "0": "",
          "1": "",
          "2": "",
          "3": "structto ret"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparamspecitheexchaAPIendp"
        },
        {
          "0": "params.until",
          "1": "int",
          "2": "No",
          "3": "the latime to fetwithd"
        }
      ],
      "shape": [
        4,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_59",
      "page": 40,
      "accuracy": 98.4171676162075,
      "whitespace": 0.0,
      "order": 59,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Desc"
        },
        {
          "0": "code",
          "1": "string",
          "2": "Yes",
          "3": "unifiecurrecode"
        },
        {
          "0": "since",
          "1": "int",
          "2": "No",
          "3": "the etime to fetwithdfor"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "themaxinumb"
        }
      ],
      "shape": [
        4,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_60",
      "page": 41,
      "accuracy": 96.37248553791048,
      "whitespace": 18.75,
      "order": 60,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Desc"
        },
        {
          "0": "",
          "1": "",
          "2": "",
          "3": "withdstructto ret"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparamspecitheexchaAPIendp"
        },
        {
          "0": "params.until",
          "1": "int",
          "2": "No",
          "3": "the latime to fetwithd"
        }
      ],
      "shape": [
        4,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_61",
      "page": 41,
      "accuracy": 91.10129383042748,
      "whitespace": 0.0,
      "order": 61,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "symbols",
          "1": "Array<string>",
          "2": "No",
          "3": "m sUnCCy"
        }
      ],
      "shape": [
        2,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_62",
      "page": 42,
      "accuracy": 92.01912720406786,
      "whitespace": 0.0,
      "order": 62,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "exsppa"
        }
      ],
      "shape": [
        2,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_63",
      "page": 42,
      "accuracy": 99.99999999999997,
      "whitespace": 0.0,
      "order": 63,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiedCCXTmarketsymbol"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "exchangespecificparameter"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_64",
      "page": 43,
      "accuracy": 99.8244742154331,
      "whitespace": 0.0,
      "order": 64,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "No",
          "3": "unifiedmarketsymbol"
        },
        {
          "0": "since",
          "1": "int",
          "2": "No",
          "3": "the earliestime in msto fetchfundinghistory for"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "themaximumnumber offundinghistorystructuresto retrieve"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparameterspecific totheexchangeAPIendpoint"
        }
      ],
      "shape": [
        5,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_65",
      "page": 44,
      "accuracy": 99.6345020958008,
      "whitespace": 0.0,
      "order": 65,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "orders",
          "1": "Array",
          "2": "Yes",
          "3": "list oforders tocreate, eacobjectshouldcontain thparameterrequired bcreateOrdenamelysymbol,type, side,amount,price andparams"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparameterspecific totheexchangeAPIendpoint"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_66",
      "page": 45,
      "accuracy": 99.99999999999996,
      "whitespace": 0.0,
      "order": 66,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "type",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "side",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "amount",
          "1": "float",
          "2": "Yes"
        },
        {
          "0": "price",
          "1": "float",
          "2": "No"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No"
        },
        {
          "0": "params.timeInForce",
          "1": "string",
          "2": "No"
        },
        {
          "0": "params.postOnly",
          "1": "bool",
          "2": "No"
        },
        {
          "0": "params.reduceOnly",
          "1": "bool",
          "2": "No"
        },
        {
          "0": "params.triggerPrice",
          "1": "float",
          "2": "No"
        },
        {
          "0": "params.clientOrderId",
          "1": "string",
          "2": "No"
        },
        {
          "0": "params.slippage",
          "1": "string",
          "2": "No"
        },
        {
          "0": "params.vaultAddress",
          "1": "string",
          "2": "No"
        }
      ],
      "shape": [
        14,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_67",
      "page": 46,
      "accuracy": 99.99999999999996,
      "whitespace": 0.0,
      "order": 67,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required"
        },
        {
          "0": "id",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "type",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "side",
          "1": "string",
          "2": "Yes"
        },
        {
          "0": "amount",
          "1": "float",
          "2": "Yes"
        },
        {
          "0": "price",
          "1": "float",
          "2": "No"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No"
        },
        {
          "0": "params.timeInForce",
          "1": "string",
          "2": "No"
        },
        {
          "0": "params.postOnly",
          "1": "bool",
          "2": "No"
        },
        {
          "0": "params.reduceOnly",
          "1": "bool",
          "2": "No"
        },
        {
          "0": "params.triggerPrice",
          "1": "float",
          "2": "No"
        },
        {
          "0": "params.clientOrderId",
          "1": "string",
          "2": "No"
        },
        {
          "0": "params.vaultAddress",
          "1": "string",
          "2": "No"
        }
      ],
      "shape": [
        14,
        3
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_68",
      "page": 47,
      "accuracy": 99.6590049376133,
      "whitespace": 0.0,
      "order": 68,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiedsymbol ofthe marketto fetchthe orderbook for"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "themaximumamount oforder bookentries toreturn"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparameterspecific totheexchangeAPIendpoint"
        }
      ],
      "shape": [
        4,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_69",
      "page": 48,
      "accuracy": 99.76458668449976,
      "whitespace": 0.0,
      "order": 69,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiedsymbol ofthe marketto fetchthe orderbook for"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparameterspecific totheexchangeAPIendpoint"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_70",
      "page": 49,
      "accuracy": 99.76458668449976,
      "whitespace": 0.0,
      "order": 70,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiedsymbol ofthe marketto fetchthe tickerfor"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparameterspecific totheexchangeAPIendpoint"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_71",
      "page": 50,
      "accuracy": 91.23225057925033,
      "whitespace": 0.0,
      "order": 71,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "symbols",
          "1": "Array<string>",
          "2": "Yes",
          "3": "unsythtothfo"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "expaspthexAPen"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_72",
      "page": 51,
      "accuracy": 91.23225057925033,
      "whitespace": 0.0,
      "order": 72,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "symbols",
          "1": "Array<string>",
          "2": "Yes",
          "3": "unsythtothfo"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "expaspthexAPen"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_73",
      "page": 51,
      "accuracy": 95.54151632834531,
      "whitespace": 0.0,
      "order": 73,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiesymbomarkewere"
        },
        {
          "0": "since",
          "1": "int",
          "2": "No",
          "3": "the eain ms"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_74",
      "page": 52,
      "accuracy": 95.49735426337718,
      "whitespace": 15.0,
      "order": 74,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "",
          "1": "",
          "2": "",
          "3": "orders"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "the mnumbstructretriev"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extra specifiexchaendpo"
        },
        {
          "0": "params.user",
          "1": "string",
          "2": "No",
          "3": "user adefauthis.w"
        }
      ],
      "shape": [
        5,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_75",
      "page": 53,
      "accuracy": 99.48339924043688,
      "whitespace": 0.0,
      "order": 75,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descriptio"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiedmarketsymbol ofthe markettradeswere madein"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparameterspecific totheexchangeAPIendpoint"
        }
      ],
      "shape": [
        3,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_76",
      "page": 53,
      "accuracy": 98.9641937182732,
      "whitespace": 0.0,
      "order": 76,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descrip"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiedsymbolthe mar"
        }
      ],
      "shape": [
        2,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_77",
      "page": 54,
      "accuracy": 98.33654068462785,
      "whitespace": 12.5,
      "order": 77,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descrip"
        },
        {
          "0": "",
          "1": "",
          "2": "",
          "3": "to fetchOHLCVdata for"
        },
        {
          "0": "timeframe",
          "1": "string",
          "2": "Yes",
          "3": "the lengof timeeachcandlereprese"
        },
        {
          "0": "since",
          "1": "int",
          "2": "No",
          "3": "timestain ms othe earcandle fetch"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "themaximuamountcandlesfetch"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparamespecifictheexchanAPI"
        }
      ],
      "shape": [
        6,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_78",
      "page": 55,
      "accuracy": 98.12969891778636,
      "whitespace": 0.0,
      "order": 78,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "Descrip"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiedsymbolthe marto fetchOHLCVdata for"
        },
        {
          "0": "timeframe",
          "1": "string",
          "2": "Yes",
          "3": "the lengof timeeachcandlereprese"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extraparamespecifictheexchanAPIendpoin"
        }
      ],
      "shape": [
        4,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    },
    {
      "table_id": "table_79",
      "page": 56,
      "accuracy": 95.56041670631701,
      "whitespace": 0.0,
      "order": 79,
      "data": [
        {
          "0": "Param",
          "1": "Type",
          "2": "Required",
          "3": "De"
        },
        {
          "0": "symbol",
          "1": "string",
          "2": "Yes",
          "3": "unifiesymbomarkewere"
        },
        {
          "0": "since",
          "1": "int",
          "2": "No",
          "3": "the eain ms orders"
        },
        {
          "0": "limit",
          "1": "int",
          "2": "No",
          "3": "the mnumbstructretriev"
        },
        {
          "0": "params",
          "1": "object",
          "2": "No",
          "3": "extra specifiexchaendpo"
        },
        {
          "0": "params.user",
          "1": "string",
          "2": "No",
          "3": "user adefauthis.wif not"
        }
      ],
      "shape": [
        6,
        4
      ],
      "extraction_method": "camelot_lattice",
      "worker_id": "pdf_worker_17672_4e32057d",
      "temp_dir": "C:\\Users\\USER\\AppData\\Local\\Temp\\pdf_worker_17672_4e32057d"
    }
  ],
  "formulas": [
    {
      "formula": "4/17",
      "type": "fractions",
      "position": {
        "start": 523,
        "end": 527
      },
      "context": "etchOrders\nfetchOrder\nfetchMyTrades\nfetchPosition\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt.com/#/",
      "confidence": 0.3,
      "metadata": {
        "length": 4,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "12:55",
      "type": "ratios",
      "position": {
        "start": 532,
        "end": 537
      },
      "context": "s\nfetchOrder\nfetchMyTrades\nfetchPosition\n4/17/25, 12:55 AM\nhyperliquid\nhttps://docs.ccxt.com/#/exchanges/",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": false,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.0,
        "source": "ratios"
      }
    },
    {
      "formula": "1/56",
      "type": "fractions",
      "position": {
        "start": 599,
        "end": 603
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n1/56\n\nfetchPositions\nsetMarginMode\nsetLeverage\naddMarg",
      "confidence": 0.3,
      "metadata": {
        "length": 4,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "2/56",
      "type": "fractions",
      "position": {
        "start": 1295,
        "end": 1299
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n2/56\n\n\n\nendpoint/perpetuals#retrieve-perpetuals-\nmet",
      "confidence": 0.3,
      "metadata": {
        "length": 4,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "3/56",
      "type": "fractions",
      "position": {
        "start": 2141,
        "end": 2145
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n3/56\n\n\n\n\n\nParam\nType\nRequired\nDescriptio\nthe\nexcha",
      "confidence": 0.3,
      "metadata": {
        "length": 4,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "4/56",
      "type": "fractions",
      "position": {
        "start": 2862,
        "end": 2866
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n4/56\n\n\n\ncalculatePricePrecision\nHelper function to c",
      "confidence": 0.3,
      "metadata": {
        "length": 4,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "5/56",
      "type": "fractions",
      "position": {
        "start": 3680,
        "end": 3684
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n5/56\n\n\n\nParam\nType\nRequired\nDescriptio\nparams\nobject",
      "confidence": 0.3,
      "metadata": {
        "length": 4,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "6/56",
      "type": "fractions",
      "position": {
        "start": 4474,
        "end": 4478
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n6/56\n\n\n\nParam\nType\nRequired\nDe\nthis.w\nif not \nparams",
      "confidence": 0.3,
      "metadata": {
        "length": 4,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "7/56",
      "type": "fractions",
      "position": {
        "start": 5228,
        "end": 5232
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n7/56\n\n\n\nParam\nType\nRequired\nDescriptio\nspecific to\nt",
      "confidence": 0.3,
      "metadata": {
        "length": 4,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "8/56",
      "type": "fractions",
      "position": {
        "start": 6009,
        "end": 6013
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n8/56\n\n\n\nParam\nType\nRequired\nparams\nobject\nNo\nparams.",
      "confidence": 0.3,
      "metadata": {
        "length": 4,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "9/56",
      "type": "fractions",
      "position": {
        "start": 6636,
        "end": 6640
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n9/56\n\n\n\nParam\nType\nRequired\nDe\nm\nsy\nparams\nobject\nNo",
      "confidence": 0.3,
      "metadata": {
        "length": 4,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "10/56",
      "type": "fractions",
      "position": {
        "start": 7328,
        "end": 7333
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n10/56\n\n\n\nParam\nType\nRequired\nDescr\ncandl\nrepre\nsuppo",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "11/56",
      "type": "fractions",
      "position": {
        "start": 7870,
        "end": 7875
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n11/56\n\nstructures\nSee\nhttps://hyperliquid.gitbook.io/hy",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "12/56",
      "type": "fractions",
      "position": {
        "start": 8439,
        "end": 8444
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n12/56\n\n\n\nParam\nType\nRequired\nDe\nth\ncreateOrder\ncreate",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "13/56",
      "type": "fractions",
      "position": {
        "start": 9025,
        "end": 9030
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n13/56\n\n\n\nParam\nType\nRequired\nparams.triggerPrice\nfloa",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "14/56",
      "type": "fractions",
      "position": {
        "start": 9705,
        "end": 9710
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n14/56\n\n\n\nParam\nType\nRequired\nDescriptio\nprice and\npar",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "15/56",
      "type": "fractions",
      "position": {
        "start": 10435,
        "end": 10440
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n15/56\n\n\n\ncancelOrder\ncancels an open order\nKind: inst",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "16/56",
      "type": "fractions",
      "position": {
        "start": 11159,
        "end": 11164
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n16/56\n\n\n\nSee\nhttps://hyperliquid.gitbook.io/hyperliqu",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "17/56",
      "type": "fractions",
      "position": {
        "start": 11999,
        "end": 12004
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n17/56\n\n\n\nendpoint#cancel-order-s-by-cloid\nParam\nType",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "18/56",
      "type": "fractions",
      "position": {
        "start": 12410,
        "end": 12415
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n18/56\n\n\n\nParam\nType\nRequired\ntimeout\nnumber\nYes\nparam",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "19/56",
      "type": "fractions",
      "position": {
        "start": 12944,
        "end": 12949
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n19/56\n\n\n\nParam\nType\nRequired\namount\nfloat\nYes\nprice\nf",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "20/56",
      "type": "fractions",
      "position": {
        "start": 13560,
        "end": 13565
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n20/56\n\n\n\nParam\nType\nRequired\nDescriptio\norders\nArray",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "21/56",
      "type": "fractions",
      "position": {
        "start": 14126,
        "end": 14131
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n21/56\n\n\n\nParam\nType\nRequired\nDescri\ndescription\nstrin",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "22/56",
      "type": "fractions",
      "position": {
        "start": 14817,
        "end": 14822
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n22/56\n\n\n\nParam\nType\nRequired\nDescr\nfundi\nrate h\nfor\ns",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "23/56",
      "type": "fractions",
      "position": {
        "start": 15341,
        "end": 15346
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n23/56\n\n\n\nstructures\nSee: https://hyperliquid.gitbook.",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "24/56",
      "type": "fractions",
      "position": {
        "start": 15870,
        "end": 15875
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n24/56\n\n\n\nKind: instance method of hyperliquid\nReturns",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "25/56",
      "type": "fractions",
      "position": {
        "start": 16458,
        "end": 16463
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n25/56\n\n\n\nParam\nType\nRequired\nDe\nsymbol\nstring\nYes\nuni",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "26/56",
      "type": "fractions",
      "position": {
        "start": 17063,
        "end": 17068
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n26/56\n\n\n\nParam\nType\nRequired\nDe\nlimit\nint\nNo\nthe m\nnu",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "27/56",
      "type": "fractions",
      "position": {
        "start": 17629,
        "end": 17634
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n27/56\n\n\n\n\n\nParam\nType\nRequired\nDe\nexcha\nendpo\nparam",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "28/56",
      "type": "fractions",
      "position": {
        "start": 18297,
        "end": 18302
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n28/56\n\nfetchMyTrades\nfetch all trades made by the user",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "29/56",
      "type": "fractions",
      "position": {
        "start": 18993,
        "end": 18998
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n29/56\n\n\n\n\n\nParam\nType\nRequired\nDescr\nAPI\nendp\nparam",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "30/56",
      "type": "fractions",
      "position": {
        "start": 19644,
        "end": 19649
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n30/56\n\n\n\nfetchPositions\nfetch all open positions\nKind",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "31/56",
      "type": "fractions",
      "position": {
        "start": 20247,
        "end": 20252
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n31/56\n\n\n\nKind: instance method of hyperliquid\nReturns",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "32/56",
      "type": "fractions",
      "position": {
        "start": 20662,
        "end": 20667
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n32/56\n\n\n\nset the level of leverage for a market\nKind:",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "33/56",
      "type": "fractions",
      "position": {
        "start": 21128,
        "end": 21133
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n33/56\n\n\n\nSee: https://hyperliquid.gitbook.io/hyperliq",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "34/56",
      "type": "fractions",
      "position": {
        "start": 21877,
        "end": 21882
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n34/56\n\n\n\nParam\nType\nRequired\nDescriptio\namount\nfloat",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "35/56",
      "type": "fractions",
      "position": {
        "start": 22504,
        "end": 22509
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n35/56\n\n\n\nParam\nType\nRequired\ntoAccount\nstring\nYes\npar",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "36/56",
      "type": "fractions",
      "position": {
        "start": 23109,
        "end": 23114
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n36/56\n\n\n\nParam\nType\nRequired\ncode\nstring\nYes\namount\nf",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "37/56",
      "type": "fractions",
      "position": {
        "start": 23516,
        "end": 23521
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n37/56\n\n\n\nParam\nType\nRequired\nDe\nsymbol\nstring\nYes\nuni",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "38/56",
      "type": "fractions",
      "position": {
        "start": 24133,
        "end": 24138
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n38/56\n\n\n\nParam\nType\nRequired\nDescr\nentrie\nreturn\npara",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "39/56",
      "type": "fractions",
      "position": {
        "start": 24698,
        "end": 24703
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n39/56\n\n\n\nParam\nType\nRequired\nDesc\nstruct\nto ret\nparam",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "40/56",
      "type": "fractions",
      "position": {
        "start": 25270,
        "end": 25275
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n40/56\n\n\n\nParam\nType\nRequired\nDesc\nwithd\nstruct\nto ret",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "41/56",
      "type": "fractions",
      "position": {
        "start": 25826,
        "end": 25831
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n41/56\n\n\n\n\n\nParam\nType\nRequired\nDe\nparams\nobject\nNo",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "42/56",
      "type": "fractions",
      "position": {
        "start": 26451,
        "end": 26456
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n42/56\n\n\n\nKind: instance method of hyperliquid\nReturns",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "43/56",
      "type": "fractions",
      "position": {
        "start": 27110,
        "end": 27115
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n43/56\n\n\n\nSee: https://hyperliquid.gitbook.io/hyperliq",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "44/56",
      "type": "fractions",
      "position": {
        "start": 27760,
        "end": 27765
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n44/56\n\n\n\nSee: https://hyperliquid.gitbook.io/hyperliq",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "45/56",
      "type": "fractions",
      "position": {
        "start": 28340,
        "end": 28345
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n45/56\n\n\n\nedit a trade order\nKind: instance method of",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "46/56",
      "type": "fractions",
      "position": {
        "start": 28938,
        "end": 28943
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n46/56\n\n\n\nwatchOrderBook\nwatches information on open o",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "47/56",
      "type": "fractions",
      "position": {
        "start": 29657,
        "end": 29662
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n47/56\n\n\n\nunWatchOrderBook\nunWatches information on op",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "48/56",
      "type": "fractions",
      "position": {
        "start": 30373,
        "end": 30378
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n48/56\n\n\n\nwatchTicker\nwatches a price ticker, a statis",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "49/56",
      "type": "fractions",
      "position": {
        "start": 31158,
        "end": 31163
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n49/56\n\n\n\nKind: instance method of hyperliquid\nReturns",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "50/56",
      "type": "fractions",
      "position": {
        "start": 31912,
        "end": 31917
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n50/56\n\n\n\nParam\nType\nRequired\nDe\nsymbols\nArray<string>",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "51/56",
      "type": "fractions",
      "position": {
        "start": 32514,
        "end": 32519
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n51/56\n\n\n\nParam\nType\nRequired\nDe\norders\nlimit\nint\nNo\nt",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "52/56",
      "type": "fractions",
      "position": {
        "start": 33078,
        "end": 33083
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n52/56\n\n\n\nParam\nType\nRequired\nDescriptio\nsymbol\nstring",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "53/56",
      "type": "fractions",
      "position": {
        "start": 33824,
        "end": 33829
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n53/56\n\n\n\nParam\nType\nRequired\nDescrip\nto fetch\nOHLCV\nd",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "54/56",
      "type": "fractions",
      "position": {
        "start": 34441,
        "end": 34446
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n54/56\n\n\n\nordered as timestamp, open, high, low, close",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "55/56",
      "type": "fractions",
      "position": {
        "start": 35110,
        "end": 35115
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n55/56\n\n\n\nSee: https://hyperliquid.gitbook.io/hyperliq",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "56/56",
      "type": "fractions",
      "position": {
        "start": 35588,
        "end": 35593
      },
      "context": "uid\nhttps://docs.ccxt.com/#/exchanges/hyperliquid\n56/56",
      "confidence": 0.5,
      "metadata": {
        "length": 5,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.05,
        "source": "fractions"
      }
    },
    {
      "formula": "hyperliquid\nKind: global class\nExtends: xchange\n+ fetchCurrencies\n«+ fetchMarkets\n+ fetchswapMarkets\n+ calculatePricePrecision\n+ fetchSpotMarkets\n+ fetchBalance\n+ fetchOrderBook\n+ fetchTickers\n+ fetchFundingRates\n+ fetchoHLCy\n+ fetchtrades\n+ createOrder\n+ createOrders\n+ createOrdersRequest\n+ cancelOrder\n+ cancelOrders\n+ cancelOrdersForSymbols\n+ cancelAllOrdersAfter\n+ editOrder\n+ editOrders\n+ createVault\n+ fetchFundingRateHistory\n+ fetchOpenOrders\n+ fetchClosedOrders\n+ fetchCanceledOrders\n+ fetchCanceledAndClosedOrders\n+ fetchOrders\n+ fetchOrder\n+ fetchMyTrades\n+ fetchPosition\nipo conechagethpatnd 16",
      "type": "ocr_image",
      "page": 1,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 606,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": false,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 1.0,
        "source": "ocr_image"
      }
    },
    {
      "formula": "vas. e8 vgn\n+ fetchPositions\n+ setMarginMode\n«+ setLeverage\n+ addMargin\n+ reduceMargin\n+ transfer\n+ withdraw\n«+ fetchTradingFee\n+ fetchLedger\n* fetchDeposits\n+ fetchWithdrawals\n* fetchOpeninterests\n«+ fetchOpeninterest\n* fetchFundingHistory\n+ createOrdersWs\n+ createOrderWs\n+ editOrderws\n+ watchOrderBook\n+ unWatchOrderBook\n+ watchTicker\n+ watchTickers\n+ unWatchTickers\n+ watchMyTrades\n+ unWatchTrades\n+ watchOHLCy\n+ unWatchOHLcy\n+ watchOrders\nfetchCurrencies\nfetches all available currencies on an\nexchange\nKind: instance method of hyperliquid\nReturns: object - an associative dictionary of\ncurrencies\nSee: https://hyperliquid.gitbook io/hyperliquid-\ndocs/for-developers/api/info-\n\npit ot cmlencangestyperind se",
      "type": "ocr_image",
      "page": 2,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 712,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 1.0,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 Ingen\nendpoint/perpetualstretrieve-perpetuals-\nmetadata\nParam Type Required Descriptio\nextra\nparameter\nspecific to\nparams object. No the\nexchange\nAPI\nendpoint\neee >\nhyperliquid.fetchCurrencies ([params])\noe >\nfetchMarkets\nretrieves data on all markets for hyperliquid\nKind: instance method of hyperliquid\nReturns: Arraycobject> - an array of objects\nrepresenting market data\nSee\n‘*_ https://hyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/info-\nendpoint/perpetualstretrieve-perpetuals-\nasset-contexts-includes-mark-price-current-\nfunding-open-interest-etc\n‘*_https://hyperliquid.gitbook.io/hypertiquid-\ndocs/for-developers/api/info-\nendpoint/spotretrieve-spot-asset-contexts\nParam Type Required Descriptio\nparams object. No extra\nparameter\nspecific to\npit ot cmlencangestyperind ase",
      "type": "ocr_image",
      "page": 3,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 803,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 1.0,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Type Required Descriptio\nthe\nexchange\nAPI\nhyperliquid.fetchMarkets ([params])\noe >\nfetchSwapMarkets\nretrieves data on all swap markets for\nhypertiquid\nKind: instance method of hyperliquid\nReturns: Arraycobject> - an array of objects\nrepresenting market data\nSee: https//nyperliquid gitbookio/hypertiquid-\ndocs/for-developers/api/info-\nendpoint/perpetuals#retrieve-perpetuals-asset-\ncontexts-includes-mark-price-currentunding-\nopen-interest-etc\nParam Type Required Descriptio\nextra\nparameter\nspecific to\nparams object. No the\nexchange\napi\nendpoint\neee\nhyperliquid.fetchswapharkets ([paress]\nSee >\npit ot cmlencangestyperind as",
      "type": "ocr_image",
      "page": 4,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 644,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 1.0,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\ncalculatePricePrecision\nHelper function to calculate the Hyperliquid\nDECIMAL PLACES price precision\nKind: instance method of hyperliquid\nReturns: int. ~The calculated price precision\nParam Type Description\nthe price to us\nprice float inthe\ncalculation\nthe\namountPrecisi\namountPrecision ant\nto use in the\ncalculation\nthe\nmaxDecimals 1\nmaxDecimals int\nuse in the\ncalculation\nee >\nhyperliquid.celculatePricePrecision (p\n(=D >\nfetchSpotMarkets\nretrieves data on all spot markets for\nhypertiquid\nKind: instance method of hyperliquid\nReturns: Arraycobject> -an array of objects\nrepresenting market data\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/info-\nendpoint/spot#retrieve-spot-asset-contexts\npit ot cmlencangestyperind 00",
      "type": "ocr_image",
      "page": 5,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 762,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.9,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Type Required Descriptio\nextra\nparameter\nspecific to\nparams object. No the\nexchange\nAPI\nendpoint\neee >\nhyperliquid.fetchspotharkets ([parans]\nSe >\nfetchBalance\nquery for balance and get the amount of funds\navailable for trading or funds locked in orders\nKind: instance method of hyperlsquid\nReturns: object -a balance structure\nSee\n‘*_ https://hyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/info-\nendpoint/spotfretrieve-a-users-token-\nbalances\n‘*_-https://hyperliquid.gitbook.io/hypertiquid-\ndocs/for-developers/api/info-\nendpoint/perpetuals#retrieve-users-\nperpetuals-account-summary\nParam Type Required =\nextra\nspeci\nparams object No spe\nendpr\nparamsuser string No user:\ndefau\npit ot cmlencangestyperind se",
      "type": "ocr_image",
      "page": 6,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 740,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 1.0,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Type Required =\nthissw\nifnot\nwalle\nparamstype string No [spot\nhyperliquid.fetchBalance ([params])\nfetchOrderBook\ned >\nfetches information on open orders with bid\n(buy) and ask (sell) prices, volumes and other\ncata\nKind: instance method of hyperliquid\nReturns: object. A dictionary of order book\nstructures indexed by market symbols\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/info-endpointel2-\nbook-snapshot\nParam Type Required Descriptio\nunifies\nsymbol of\nthe marke\nsymbol string Yes rem\nthe order\nbook for\nthe\nmaximum\namount of\nlimit ant No amount ot\nentries to\nretun\nparams absect_ No extra\nparameter\npit ot cmlencangestyperind 10",
      "type": "ocr_image",
      "page": 7,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 682,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.65,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 eeu\nParam Type Required Descriptio\nspecific to\nthe\nexchange\napi\nhyperliquid.fetchorderGook (symbol, 2\n— >\nfetchTickers\nfetches price tickers for multiple markets,\nstatistical information calculated over the past\n24 hours for each market\nKind: instance method of hyperisquid\nReturns: object - a dictionary of ticker\n(i >\nSee\n+ https//nyperliquid.gitbookio/hypertiquid-\ndocs/for-developers/api/info-\nendpoint/perpetuals#retrieve-perpetuals-\nasset-contexts-includes-mark-price-current-\nfunding-open-interest-etc\n+ -https//nyperliquid.gitbook io/hypertiquid-\ndocs/for-developers/api/info-\nendpoint/spot#retrieve-spot-asset-contexts\nParam pe Required\nsymbols Arrayestringy NO\npac cx cortechngesyperindd se",
      "type": "ocr_image",
      "page": 8,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 709,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 1.0,
        "source": "ocr_image"
      }
    },
    {
      "formula": "vas. e8 vgn\nParam Type Required\nparams object No\nparamstype string No\nhyperliquid.fetchTickers ([eymbols, pa\ned >\nfetchFundingRates\nee) >\nretrieves data on all swap markets for\nhypertiquid\nKind: instance method of hyperliquid\nReturns: Arraycobject> -an array of objects\nrepresenting market data\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/info-\nendpoint/perpetualstretrieve-perpetuals-asset-\ncontexts-includes-mark-price-current-funding-\nopen-interest-ete\nParam Type Required Dr\nsymbols Arrayestring> No tis\npit ot cmlencangestyperind se",
      "type": "ocr_image",
      "page": 9,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 567,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 1.0,
        "source": "ocr_image"
      }
    },
    {
      "formula": "ss, 255008 eeu\nParam Type Required Ds\nm\n¥y\n°\npe\nsf\nparams object No th\n°\nAL\nhyperliquid.fetchFundingRates ([symbol\n— >\nfetchOHLCV\nfetches historical candlestick data containing\nthe open, high, low, and close price, and the\nvolume of a market\nKind: instance method of hypertiquid\nReturns: ArrayeArrayesnts> ~A list of candles\nordered as timestamp, open, high, low, close,\nvolume\nSee: https://nypertiquid.gitbook.io/nyperliquid-\ndocs/for-developers/api/info-endpointécandle-\nsnapshot\nParam Type Required Desc\nunite\nsymb\nthen\nsymbol string Yes ie\nOHLC\ndata\ntimeframe string Yes the l\nof tin\neach\npac cx cortechngesyperindd 108",
      "type": "ocr_image",
      "page": 10,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 623,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.6000000000000001,
        "source": "ocr_image"
      }
    },
    {
      "formula": "ss, 255008 eeu\n\nstructures\n\nSee\n\n‘+ https//nyperliquid.gitbookio/nypertiquid-\n\ndocs/for-developers/api/info-\n\nendpoint#retrieve-a-users-flls\n\n‘+ https//nypertiquid.gitbook io/nypertiquid-\n\ndocs/for-developers/api/info-\n\nendpoint#retrieve-a-users-fls-by-time\n\nParam Type Required Ox\nur\n\nsymbol string Yes m\ny\nth\ntir\n\nsince ant No\nto\ntre\nth\nm\n\nLimit ant No m\ntre\nst\nto\nex\npe\nsp\n\nparams object No th\nex\niG\ner\ntir\n\nyarams.until ant No \"\n\nPp th\ntre\nwi\nac\n\nparamsaddress. string No th\ntre\n\nparams.user string No wi\nac\n\npac cx cortechngesyperindd 1280",
      "type": "ocr_image",
      "page": 12,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 544,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 1.0,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Type Required Dv\nth\nhyperliquid.fetchTrades (eymbol{, sine\naD >\ncreateOrder\ncreate a trade order\nKind: instance method of hyperliquid\nReturns: object - an order structure\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/exchange-\nendpoint#place-an-order\nParam Type Required\nsymbol string Yes\ntype string Yes\nside string Yes\namount float Yes\nprice float No\nparams object No\nparamstimelnForce string No\nparams postOnly boot No\nparamsseduceOnly bool No\npit ot cmlencangestyperind tae",
      "type": "ocr_image",
      "page": 13,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 524,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.8500000000000001,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Type Required\n\nparamstriggerPrice float. = No\n\nparamsclientOrderld string No\n\nparamsstippage string No\n\nparamsvaultAddress string No\n\nhyperliquid.createorder (symbol, type,\n\n(— >\n\ncreateOrders\n\ncreate a list of trade orders\n\nKind: instance method of hyperliquid\n\nReturns: object - an order structure\n\nSee: https://hyperliquid.gitbook.o/hypertiquid-\n\ndocs/for-developers/api/exchange-\n\nendpoint#place-an-order\n\nParam Type Required Descriptio\n\norders array ‘Yes list of\n\n——_—_ orders tp\ncreate, €2c\nobject\nshould\ncontain th\nparameter\nrequired b\ncreateOrdi\nnamely\nsymbol,\ntype, side,\namount,\n\npit ot cmlencangestyperind ase",
      "type": "ocr_image",
      "page": 14,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 639,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.7000000000000001,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Type Required Descriptio\nprice and\nparams\nextra\nparameter\nspecific to\nparams absect_ No the\nexchange\nAPI\nhyperliquid.createorders (orders{, par\n(o—_— >\ncreateOrdersRequest.\ncreate a list of trade orders\nKind: instance method of hyperliquid\nReturns: object - an order structure\n‘Ste ARPS AY PE Ee a ECO TOBE quid:\ndocs/for-developers/api/exchange-\nendpoint#place-an-order\nParam Type Description\nlist of orders to create,\neach object should\ncontain the\nparameters required\no 9\norders Array by createOrder, namely\nsymbol, type, side,\n‘amount, price and\nparams\nhyperliquid.createordersRequest (order\nED >\npit ot cmlencangestyperind sae",
      "type": "ocr_image",
      "page": 15,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 650,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.7,
        "source": "ocr_image"
      }
    },
    {
      "formula": "vas. e8 vgn\n\ncancelOrder\n\ncancels an open order\n\nKind: instance method of hyperliquid\n\nReturns: object -An order structure\n\nSee\n\n‘*__https://nyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/exchange-\nendpoint#cancel-order-s\n\n‘+ https://nyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/exchange-\nendpoint#cancel-order-s-by-cloid\n\nParam Type Required\n\nid string Yes\nsymbol string Yes\nparams object No\nparamsclientOrderld string No\nparamsvaultAddress string No\n\n— >\nhyperliquid.cancelorder (44, symbol,\n(o_O\n\ncancelOrders\n\ncancel multiple orders\n\nKind: instance method of hyperliquid\n\nReturns: object ~an list of order structures\n\npit ot cmlencangestyperind tase",
      "type": "ocr_image",
      "page": 16,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 681,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 1.0,
        "source": "ocr_image"
      }
    },
    {
      "formula": "vas. e8 vgn\nSee\n‘+ https://nyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/exchange-\nendpoint#cancel-order-s\n‘+ https://hyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/exchange-\nendpoint#cancel-order-s-by-cloid\nParam Type Ri\nids Arrayestringy Ye\nsymbol string N\nparams object N\nparams.lientOrderld  °**2°9 > N\narrayeatring>\nparamsvaultAddress string N\n— >\nhyperliquid.cancelorders (dsl, symbol\ned >\ncancelOrdersForSymbols\ncancel multiple orders for multiple symbols\nKind: instance method of hyperisquid\nReturns: object - an list of order structures\nSee\n‘*__https://nyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/exchange-\nendpoint#cancel-order-s\n‘+ https://nyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/exchange-\npit ot cmlencangestyperind se",
      "type": "ocr_image",
      "page": 17,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 793,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 1.0,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nendpoint#cancel-order-s-by-cloid\nParam Type\norders Aeray<Cancelatsonti\nparams object\nparamsvaultAddress string\n— >\nhyperliquid.cancelordersForsymbols (or\ned >\ncancelAllOrdersAfter\ndead man's switch, cancel all orders after the\ngiven timeout\nKind: instance method of hyperliquid\nReturns: object -the api result\npit ot cmlencangestyperind tase",
      "type": "ocr_image",
      "page": 18,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 354,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": false,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.4,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Type Required\ntimeout umber Yes\nparams object No\nparamsvaultAddress string No\nel >\nhyperliquid.cancelAllordersafter (time\nED >\neditOrder\nedit a trade order\nKind: instance method of hyperliquid\nReturns: object - an order structure\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/exchange-\nendpoint#modify-multiple-orders\nParam Type Required\nid string Yes\nsymbol string Yes\ntype string Yes\nside string Yes\npit ot cmlencangestyperind sae",
      "type": "ocr_image",
      "page": 19,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 479,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.7000000000000001,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Type Required\namount float Yes\nprice float No\nparams object No\nparamstimelnForce string No\nparams postOnly boot No\nparamsseduceOnly bool No\nparamstriggerPrice float. = No\nparamsclientOrderld string No\nparamsyaultAddress string No\nhyperliquid.edstOrder (3d, symbol, typ\ned >\n\neditOrders\n\naD >\n\nedit a list of trade orders\n\nKind: instance method of hyperliquid\n\nReturns: object - an order structure\n\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\n\ndocs/for-developers/api/exchange-\n\nendpoint#modify-multiple-orders\n\npit ot cmlencangestyperind 20",
      "type": "ocr_image",
      "page": 20,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 565,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.75,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\n\nParam Type Required Descriptio\nlist of\norders to\ncreate, eac\nobject\nshould\ncontain th\nparameter\n\norders array Yes required b\ncreateOrdi\nnamely\nsymbol,\ntype, side,\namount,\nprice and\nparams\nextra\nparameter\nspecific to\n\nparams absect_ No the\nexchange\napi\nendpoint\n\noe >\n\nhyperliquid.edstorders (ordersf, paran\n\n(oe >\n\ncreateVault\n\ncreates a value\n\nKind: instance method of hyperliquid\n\nReturns: object -the api result\n\nParam Type.——Required —_Descri\nThe ne\n\nname string Yes of the\nvault\n\npit ot cmlencangestyperind 0",
      "type": "ocr_image",
      "page": 21,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 527,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": false,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.15000000000000002,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Type.—-Required _Descri\nThe\n4 ve descr\nlescription string Yes oe\nvault\nThe\ninitial\ninitialUsd umber Yes ive\nvault\nextra\nparam\nspecifi\nparams object No the\nexchat\nAPI\nhyperliquid.createvault (name, descrip\n— >\nOO ———___e\nfetchFundingRateHistory\nfetches historical funding rate prices\nKind: instance method of hyperliquid\nReturns: Arraycobject> -a list of funding rate\nstructures\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/info-\nendpoint/perpetuals#retrieve-historical-\nfunding-rates\nParam Type Required Desc\nsymbol string Yes unifi\nsymb\nthen\nto fet\nthe\npit ot cmlencangestyperind se",
      "type": "ocr_image",
      "page": 22,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 631,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.8500000000000001,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Type Required Desc\nfundi\nrate!\nfor\ntimes\ninms\nthee\nsince int No mee\nratet\nfetch\nthe\nmaxi\namot\nLimit ant No fundi\nrate\nstruc\nto fet\nextra\nparar\nspeci\nparams object No the\nexchi\nAPI\nendp\ntimes\ninms\nparamsuntil int. No the l\nfundi\nhyperliquid.fetchFundingRatetistory (s\n———=D >\nEE >\nfetchOpenOrders\nfetch all unfilled currently open orders\nKind: instance method of hyperliquid\nReturns: Arcaysorder> ~a list of order\npit ot cmlencangestyperind se",
      "type": "ocr_image",
      "page": 23,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 461,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": false,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.2,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nstructures\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/info-\nendpoint#retrieve-a-users-open-orders\nParam Type Required\nur\nsymbol string Yes 3\nth\nsince ant No. m\nor\nth\nlimit int No nm\nor\nfe\nex\nsp\nparams object No\ner\nyarams.user strir No ae\nP ring ‘\nne\n‘Oy\nfi\nparamsmethod string No i\nfi\neD >\nhyperliquid.fetchopenorders (eymbol!,\naD >\nfetchClosedOrders\nfetch all unfilled currently closed orders\npit ot cmlencangestyperind 20",
      "type": "ocr_image",
      "page": 24,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 467,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.75,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nKind: instance method of hyperlsquid\nReturns: Arcaysorder> ~a list of order\nstructures\nParam Tye Required =D\nunifie\nsymbol string Yes\nv ° symb:\nthe es\nsince ant No inms\nopen\nther\nlimit int No ums\norder\ntoret\nextra\nspecit\nparams object No spel\nendpc\nuser é\narams.user stir No defau\nP ° thisw\nifnot\nEe >\nhyperliquid.fetchClosedorders (symbol\n— >\nfetchCanceledOrders\nfetch all canceled orders\nKind: instance method of hyperliquid\nReturns: Arcaysorder> ~a list of order\nstructures\npit ot cmlencangestyperind 80",
      "type": "ocr_image",
      "page": 25,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 519,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": false,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.25,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Tye Required =D\nunifie\nsymbol string Yes ane\nthe es\nsince ant No inms\nopen\nther\nlimit int No numb\norder\ntoret\nextra\nspecit\nobject Ne\nparams ject NO speci\nendpc\nuser ¢\narams.user stir No defau\nPi one thisw\nifnot\neD >\nhyperliquid.fetchcanceledorders (syabo\n——_—eD >\nfetchCanceledAndClosedOrders\nfetch all closed and canceled orders\nKind: instance method of hyperliquid\nReturns: Arcaysorder> ~a list of order\nstructures\nParam Type Required =D\nunifie\nsymbol string Yes sab\nthe es\nsince ant No inms\nopen\npit ot cmlencangestyperind 20",
      "type": "ocr_image",
      "page": 26,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 547,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": false,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.25,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 voi\nParam Type Required =D\nthe m\nume\nLimit int No\norder\ntoret\nextra\nspect\nrams object No\nP exche\nendpc\nuser:\njarams.user_ string No defau\nPi no this.w\nhyperLiquid. fetchCanceledndClosed0rde\n(— >\nfetchOrders >\nfetch all orders\nKind: instance method of hypertiquid\nReturns: Array<Order> -a list of order\nstructures\nParam Type Required ~=— Dt\nunifie\nsymbol string Yes\n° symb\nthe e:\nsince int No ins\nopen\nthe m\nLimit int No numb\norder\ntoret\nparams object No extra\nspeci\npit ot cmlencangestyperind 8",
      "type": "ocr_image",
      "page": 27,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 503,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": false,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.35000000000000003,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Tye Required =D\nexche\nendpc\nuser é\nyarams.user stra No defau\nPi “ serang thisw\nhyperliquid.fetchorders (eymbol{, sine\naD >\nfetchOrder\nfetches information on an order made by the\nuser\nKind: instance method of hyperliquid\nobject go re\nPG iin olin\"? ly\nSee: https//nyperliquid gitbookio/hypertiquid-\ndocs/for-developers/api/info-endpoint#query-\norder-status-by-oid-or-clotd\nParam Type Required =D\nid string Yes order\nunifie\nther\nsymbol string Yes ae\nin\nextra\nspecit\nparams object No speci\nendpc\nuser ¢\nyarams.user stra No defau\nPe “ string thism\nifnot\neD >\npit ot cmlencangestyperind sas",
      "type": "ocr_image",
      "page": 28,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 603,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 1.0,
        "source": "ocr_image"
      }
    },
    {
      "formula": "vas. e8 vgn\nhyperliquid.fetchorder (id, syaboll, p\nED >\nfetchMyTrades\nfetch all trades made by the user\nKind: instance method of hyperlsquid\nReturns: Arrayctrade> ~a list of trade\nstructures\nSee\n‘+ https://nyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/info-\nendpoint#retrieve-a-users-flls\n‘+ https://hyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/info-\nendpoint#retrieve-a-users-flls-by-time\nParam Type Required Desc\nunifi\nsymbol string Yes mark\nsymb\nthee\ntime\nsince int No ume\ntrade\nthe\nmaxi\numl\nLimit int No pom\nstruc\ntore!\nparams object No extra\nparar\nspeci\nthe\nexchi\npit ot cmlencangestyperind 280",
      "type": "ocr_image",
      "page": 29,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 628,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 1.0,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 eeu\nParam Type Required Desc\napi\nendp\ntimes\nparams.until sn No ane\nhyperliquid.fetchiyTrades (symbol, si\n—_— >\nfetchPosition\nfetch data on an open position\nKind: instance method of hyperisquid\nReturns: object -a position structure\nSee: https//nyperliquid gitbookio/hypertiquid-\ndocs/for-developers/api/info-\nendpoint/perpetualstretrieve-users-perpetuals-\naccount-summary\n< eens =—\nunifie\nsymbol string Yes om\npositi\nextra\nparams object No spel\nendpc\nuser\ndefau\nparamsuser string No ee\nif not\n—_— >\npit ot cmlencangestyperind aoe",
      "type": "ocr_image",
      "page": 30,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 537,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.9500000000000001,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nhyperliquid.fetchPosition (eymbol[, pa\nED >\nfetchPositions\nfetch all open positions\nKind: instance method of hyperlsquid\nReturns: Arraycobject> -a list of position\nstructure\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/info-\nendpoint/perpetualstretrieve-users-perpetuals-\naccount-summary\nParam Type Required\nsymbols Arrayestringy No\nparams object No\nparamsuser string No\n— >\nhyperliquid.fetchPositions (Leymbols,\nel >\nsetMarginMode\nset margin mode (symbol)\npit ot cmlencangestyperind sie",
      "type": "ocr_image",
      "page": 31,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 529,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.9500000000000001,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nKind: instance method of hyperlsquid\nReturns: object - response from the\nexchange\nParam Type Required 0\n®\nfn\nmarginMode string Yes >\nig\n¢\n®\ns\nu\nsymbol string Yes u\nP\nh\n4\ne\nP\ns\nparams object No u\ne\nA\ne\nuw\nu\n\"\nparamsleverage string No s\nu\nfn\n«\ned >\nhyperliquid.setNargintode (margintode,\naD >\nsetLeverage\npit ot cmlencangestyperind some",
      "type": "ocr_image",
      "page": 32,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 347,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": false,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.2,
        "source": "ocr_image"
      }
    },
    {
      "formula": "ss, 255008 yeu\nset the level of leverage for a market\nKind: instance method of hyperisquid\nReturns: object - response from the\nexchange\nParam Type Required\nleverage float Yes\nsymbol string Yes\nparams object No\nparamsmarginMode string No\nEe »\nhyperliquid.cetLeverage (leverage, eym\n—— »\naddMargin\nadd margin\nKind: instance method of hyperisquid\nReturns: object -a margin structure\npac cx cortechngesyperindd sae",
      "type": "ocr_image",
      "page": 33,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 410,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": false,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.1,
        "source": "ocr_image"
      }
    },
    {
      "formula": "vas. e8 Ingen\n\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\n\ndocs/for-developers/api/exchange-\n\nendpoint#update-isolated-margin\n\nParam Type Required -_Descriptic\nunified\n\nsymbol string Yes market\nsymbol\namount o!\n\namount fost. Yes margin to\nadd\nextra\nparamete!\nspecific to\n\nparams object. No the\nexchange\napi\nendpoint\n\noe >\n\nhyperliquid.adeMargin (symbol, anount{\n\n—— >\n\nreduceMargin\n\nremove margin from a position\n\nKind: instance method of hyperliquid\n\nReturns: object -a margin structure\n\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\n\ndocs/for-developers/api/exchange-\n\nendpoint#update-isolated-margin\n\nParam Type Required -_Descriptic\nunified\n\nsymbol string Yes market\nsymbol\n\npit ot cmlencangestyperind ase",
      "type": "ocr_image",
      "page": 34,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 720,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 1.0,
        "source": "ocr_image"
      }
    },
    {
      "formula": "ss, 255008 yeu\nParam Type Required -_Descriptic\nthe\namount of\namount float_—_-Yes\nmargin to\nremove\nextra\nparametet\nspecific to\nparams object. No the\nexchange\nAPL\nhyperliquid.reduceNargin (symbol, anou\n—————= »\ntransfer\ntransfer currency internally between wallets on\nthe same account\nKind: instance method of hypertiquid\nReturns: object - a transfer structure\nSee: https://nypertiquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/exchange-\nendpoint#lt-usde-transfer\nParam Type Required\ncode string Yes\namount float Yes\nfromAccount string Yes\npac cx cortechngesyperindd 280",
      "type": "ocr_image",
      "page": 35,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 575,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.75,
        "source": "ocr_image"
      }
    },
    {
      "formula": "vas. e8 vgn\nParam Type Required\ntoAccount string Yes\nparams object No\nparamsvaultAddress string No\nhyperliquid.transfer (code, mount, fr\n(——D >\nwithdraw\nmake a withdrawal (only support USDC)\nKénidainstancemmennodeats hyper1iquid >\nReturns: object ~a transaction structure\nSee\n‘*_ https://hyperliquid.gitbook.io/nypertiquid-\ndocs/for-developers/api/exchange-\nendpoint#initiate-a-withdrawal-request\n‘* https://hyperliquid.gitbook.io/hypertiquid-\ndocs/for-developers/api/exchange-\nendpoint#deposit-or-withdraw-from-a-vault\npit ot cmlencangestyperind sate",
      "type": "ocr_image",
      "page": 36,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 551,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 1.0,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Type Required\ncode string Yes\namount float Yes\naddress string Yes\ntag string Yes\nparams object No\nparamsvaultAddress string No\nEe >\nhyperliquid.nithdraw (code, amount, ad\n— >\nfetchTradingFee\nfetch the trading fees for a market\nKind: instance method of hyperliquid\nReturns: object -a fee structure\npit ot cmlencangestyperind ans",
      "type": "ocr_image",
      "page": 37,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 346,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": false,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.15000000000000002,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Tye Required =D\nunifie\nsymbol string Yes ane\nextra\nspecit\nrams object No\nP e exche\nendpc\nuser ¢\narams.user stir No defau\nPi “ thisw\nifnot\neD >\nhyperiquid.fetchtradingFee (symboll,\nED >\nfetchLedger\nfetch the history of changes, actions done by\nthe user or operations that altered the balance\nof the user\nKind: instance method of hyperliquid\nReturns: object -a ledger structure\nParam Type Required Desc\nunifi\ncode string No curre\ncode\ntimes\ninms\nsince int No thee\nledge\nentry\nLimit int No max\nrumt\nledge\npit ot cmlencangestyperind ase",
      "type": "ocr_image",
      "page": 38,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 551,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": false,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.2,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Type Required Desc\nentri\nretur\nextra\nparar\nspeci\nparams object No the\nexchi\napi\nendp\ntimes\ninms\nparamsuntil int. No the |\nledge\nhyperliquid.fetchledger (code, since,\nED >\nfetchDeposits\nfetch all deposits made to an account\nKind: instance method of hyperisquid\nReturns: Arraycobject> -a list of transaction\nLi >\nParam Type Required Desc\nunifi\ncode string Yes curre\ncode\nthee\ntime\nsince int No en\ndepo\nLimit int No the\nmaxi\numl\ndepo\npit ot cmlencangestyperind sate",
      "type": "ocr_image",
      "page": 39,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 481,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": false,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.2,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Type Required Desc\nwithe\nstruc\ntore!\nextra\nparar\nspeci\nparams object No the\nexchi\nAPI\nendp\nthe l\ntime\nparamsuntil int. No to fet\nwithe\nhyperliquid.fetchnsthdravals (codel, 8\naD >\nfetchOpeninterests\nRetrieves the open interest for a list of\nsymbols\n‘GGA hyper Liquid >\nReturns: object - an open interest\nstructurehttps//docs.cext.com/#/?id=open-\ninterest-structure\nParam Type Required Dv\nui\nsymbols Arrayestring> No “\ny\npit ot cmlencangestyperind se",
      "type": "ocr_image",
      "page": 41,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 467,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.55,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Type Required Ds\ne\nparams object, No PS\npe\nhyperliqutd.fetchopentnterests ([syabo\nED >\nfetchOpeninterest\n“et ieves the open interest of a cont sit >\ntrading pair\nKind: instance method of hyperisquid\nReturns: object - an open interest structure\nParam Type Required Descriptio\nunifies\ncoxt\nsymbol string Yes re\nsymbol\nexchange\nparams absect_ No specific\nparameter\noe >\nhyperliqutd.fetchopentnterest (symbol\n—— >\nfetchFundingHistory\nfetch the history of funding payments paid and\nreceived on this account\npit ot cmlencangestyperind ose",
      "type": "ocr_image",
      "page": 42,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 551,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": false,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.25,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nKind: instance method of hyperlsquid\nReturns: object. ~a funding history structure\nParam Type Required Descriptio\nunifies\nsymbol string No market\nsymbol\nthe earlies\ntime in ms\nsince ant = No to fetch\nfunding\nhistory for\nthe\n‘maximum\number of\nlimit ant No funding\nhistory\nstructures\nto retrieve\nextra\nparameter\nspecific to\nparams absect_ No the\nexchange\napi\nendpoint\noe >\nhyperliquid.fetchFundingHistory ([symb\n—ED >\ncreateOrdersWs\ncreate a list of trade orders using WebSocket\npost request\nKind: instance method of hyperliquid\nReturns: object - an order structure\npit ot cmlencangestyperind ws0",
      "type": "ocr_image",
      "page": 43,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 607,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": false,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.2,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 Ingen\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-developers/api/exchange-\nendpoint#place-an-order\nParam Type Required Descriptio\nlist of\norders to\ncreate, eac\nobject\nshould\ncontain th\nparameter\norders array Yes required b\ncreateOrdi\nnamely\nsymbol,\ntype, side,\namount,\nprice and\nparams\nextra\nparameter\nspecific to\nparams object. No the\nexchange\nAPI\nendpoint\neee\nhyperliquid.createordersts (orders[, p\nel >\ncreateOrderWs\ncreate a trade order using WebSocket post\nrequest\nKind: instance method of hyperlsquid\nReturns: object - an order structure\npit ot cmlencangestyperind 480",
      "type": "ocr_image",
      "page": 44,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 598,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.65,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 Ingen\n\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\n\ndocs/for-developers/api/exchange-\n\nendpoint#place-an-order\n\nParam Type Required\nsymbol string Yes\ntype string Yes\nside string Yes\namount float Yes\nprice float No\nparams object No\nparamstimelnForce string No\nparams postOnly boot No\nparamsseduceOnly bool No\nparamstriggerPrice float. = No\nparamsclientOrderld string No\nparamsstippage string No\nparamsvaultAddress string No\n(aD >\nhyperliquid.createorderns (ayabol, typ\n(=D >\neditOrderWs\npit ot cmlencangestyperind ss",
      "type": "ocr_image",
      "page": 45,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 530,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.75,
        "source": "ocr_image"
      }
    },
    {
      "formula": "ss, 255008 yeu\n\nedit a trade order\n\nKind: instance method of hypertiquid\n\nReturns: object -an order structure\n\nSee: https://hypertiquid.gitbook.io/nyperliquid-\n\ndocs/for-developers/api/exchange-\n\nendpoint#modify-muttiple-orders\n\nParam Type Required\nid string Yes\nsymbol string Yes\ntype string Yes\nside string Yes\namount float Yes\nprice float No\nparams object No\nparamstimeinForce string No\nparams postOnly boot No\nparams.reduceOnly boot_-—=‘NO.\nparamstriggerPrice float =—-No\nparams.clientOrderid string No\nparamsvaultAddress string No\n— »\npac cx cortechngesyperindd 56",
      "type": "ocr_image",
      "page": 46,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 569,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.8,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nhyperliquid.edstorderts (1d, symbol, t\ned >\nwatchOrderBook\nwatches information on open orders with bid\n(buy) and ask (sell) prices, volumes and other\ncata\nKind: instance method of hyperliquid\nReturns: object ~A dictionary of order book\nstructures indexed by market symbols\nSee: https//nyperliquid gitbookio/hypertiquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\nParam Type Required Descriptio\nunifies\nsymbol of\nthe marke\nsymbol string Yes the mat\nthe order\nbook for\nthe\nmaximum\namount of\nlimit ant No amount ot\nentries to\nretun\nextra\nparameter\nspecific to\nparams object. No the\nexchange\napi\nendpoint\neee\npit ot cmlencangestyperind se",
      "type": "ocr_image",
      "page": 47,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 653,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.5,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nhyperliquid.natchorderBook (syabol[, 2\ned >\nunWatchOrderBook\ntunWatches information on open orders with\nbid (buy) and ask (sell) prices, volumes and\nother data\nKind: instance method of hyperliquid\nReturns: object ~A dictionary of order book\nstructures indexed by market symbols\nSee: https//nyperliquid gitbookio/hypertiquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\nParam Type Required Descriptio\nunifies\nsymbol of\nthe marke\nsymbol string Yes the mat\nthe order\nbook for\nextra\nparameter\nspecific to\nparams object. No the\nexchange\nAPI\nendpoint\neee >\nhyperliquid.unmatchorderBook (symbol,\nDP >\npit ot cmlencangestyperind ase",
      "type": "ocr_image",
      "page": 48,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 642,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.6000000000000001,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 eeu\nwatchTicker\nwatches a price ticker, a statistical calculation\nWith the information calculated over the past\n24 hours for a specific market\nKind: instance method of hyperisquid\nReturns: object -a ticker structure\nSee: https//nyperliquid.gitbookio/hypertiquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\nParam Type Required Descriptio\nunified\nsymbol of\nthe marke\nsymbol string Yes ume\nthe ticker\nfor\nextra\nparameter\nspecific to\nparams object. No the\nexchange\nAPL\nendpoint\nee >\nhyperliquid.vatchticker (symbol, para\n—_— >\nwatchTickers\nwatches a price ticker, a statistical calculation\nWith the information calculated over the past\n24 hours for all markets of a specifi list\npit ot cmlencangestyperind 80",
      "type": "ocr_image",
      "page": 49,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 719,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.6000000000000001,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nKind: instance method of hyperlsquid\nReturns: object -a ticker structure\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\nParam Type Required Dr\ny\nsymbols Array<strir ‘Yes th\ni rrayestring> te\nth\nfo\ne\npe\nSE\nparams object, No th\ne\nAL\ner\nED >\nhyperliquid.vatchTickers (symbols[, pa\no_O\nunWatchTickers\nunWatches a price ticker a statistical\ncalculation with the information calculated\nover the past 24 hours for all markets of a\nspecifi list\nKind: instance method of hyperliquid\nReturns: object -a ticker structure\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\npit ot cmlencangestyperind sane",
      "type": "ocr_image",
      "page": 50,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 705,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 1.0,
        "source": "ocr_image"
      }
    },
    {
      "formula": "vas. e8 vgn\nParam Type Required Ds\nsy\nth\nsymbols Arrayestring> Yes e\nth\nfo\ne\npe\nSE\nparams object, No th\ne\nAL\ner\nED >\nhyperliquid.unmatchtickers (symbole,\nED >\nwatchMyTrades\nwatches information on multiple trades made\nby the user\nKind: instance method of hyperlsquid\nReturns: Arraycobject> -a list of order\nstructures\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\nParam Type Required =D\nunifie\nsymbol string Yes om\nwere\nsince ant No the es\ninms\nipo conechagethpatnd sie",
      "type": "ocr_image",
      "page": 51,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 521,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.75,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 vgn\nParam Tye Required =D\norder\nthe r\nlimit int No ums\nstruct\nretrie\nextra\nspecit\nparams object No spect\nendpc\nuser é\narams.user stir No defau\nPi “ thisw\nhyperiquid.vatohtytrades (symbol, 2\n=D >\nunWatchTrades=== »\nUunWatches information on multiple trades\nmade in a market\nKind: instance method of hyperliquid\nReturns: Arraycobject> -a list of trade\nstructures\n‘See: https://hyperliquid.gitbook.io/hyperliquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\npit ot cmlencangestyperind sate",
      "type": "ocr_image",
      "page": 52,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 500,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.8500000000000001,
        "source": "ocr_image"
      }
    },
    {
      "formula": "ss, 255008 eeu\nParam Type Required Descriptio\nunified\nmarket\nsymbol of\nsymbol string Yes the marke’\ntrades\nwere madi\nin\nextra\nparameter\nspecific to\nparams object. No the\nexchange\nAPI\nendpoint\nee >\nhyperliquid.untiatchTrades (symbol, pa\n(ome\nwatchOHLCV\nwatches historical candlestick data containing\nthe open, high, low, close price, and the\nvolume of a market\nKind: instance method of hypertiquid\nReturns: ArrayeArrayesnts> ~A list of candles\nordered as timestamp, open, high, low, close,\nvolume\nSee: httpsy//nypertiquid.gitbook.io/hypertiquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\nParam Type Required _—_Descrip\nsymbol string Yes unified\nsymbol\nthe ma\npac cx cortechngesyperindd 80",
      "type": "ocr_image",
      "page": 53,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 694,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.55,
        "source": "ocr_image"
      }
    },
    {
      "formula": "sv 12580 Ingen\nordered as timestamp, open, high, low, close,\nvolume\nSee: https//nyperliquid.gitbookio/hypertiquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\nParam Type_——Required —_Descrip\nunified\nsymbol\nthe ma\nsymbol string Yes were\nOnLy\ndata fo\nthe len\nof time\ntimeframe string Yes each\ncandle\nreprese\nextra\nparame\nspecific\nparams object_—No the\nexchan\nAPI\nendpoi\nEE >\nhyperdiquid.unmatchoHLcv (symbol, tine\nED >\nwatchOrders\nwatches information on multiple orders made\nby the user\nKind: instance method of hyperliquid\nReturns: Arraycobject> -a list of order\nstructures\npit ot cmlencangestyperind see",
      "type": "ocr_image",
      "page": 55,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 608,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": true,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.65,
        "source": "ocr_image"
      }
    },
    {
      "formula": "vas. e8 Ingen\nSee: https//hyperliquid gitbookio/hypertiquid-\ndocs/for-\ndevelopers/api/websocket/subscriptions\nParam Type Required =D\nunifie\nsymbs\nbol string Ye\nsymbol tring Yes om\nwere\nthe ei\nsince ant No inms\norder\nthe r\nlimit int No ums\nstruct\nretrie\nextra\nspecit\nparams object No spect\nendpt\nuser é\narams.user stir No defau\nPi “ thisw\nifnot\nel >\nhyperliquid.vatchorders (eymbol{, sine\naD >\nipo conechagethpatnd see",
      "type": "ocr_image",
      "page": 56,
      "confidence": 0.5,
      "source": "ocr_image",
      "metadata": {
        "length": 417,
        "has_greek_letters": false,
        "has_superscript": false,
        "has_subscript": false,
        "has_fractions": true,
        "has_integrals": false,
        "has_summations": false,
        "complexity_score": 0.8,
        "source": "ocr_image"
      }
    }
  ]
}